/* THIS FILE GENERATED BY bcd.gen */
module bcd.fltk.Fl_Valuator;
public import bcd.bind;
const int FL_VERTICAL = 0;
const int FL_HORIZONTAL = 1;
public import bcd.fltk.Fl_Widget;
public import bcd.fltk.Enumerations;
extern (C) void _BCD_delete_11Fl_Valuator(void *);
extern (C) void _BCD__ZN11Fl_Valuator6boundsEdd(void *This, double, double);
extern (C) double _BCD__ZNK11Fl_Valuator7minimumEv(void *This);
extern (C) void _BCD__ZN11Fl_Valuator7minimumEd(void *This, double);
extern (C) double _BCD__ZNK11Fl_Valuator7maximumEv(void *This);
extern (C) void _BCD__ZN11Fl_Valuator7maximumEd(void *This, double);
extern (C) void _BCD__ZN11Fl_Valuator5rangeEdd(void *This, double, double);
extern (C) void _BCD__ZN11Fl_Valuator4stepEi(void *This, int);
extern (C) void _BCD__ZN11Fl_Valuator4stepEdi(void *This, double, int);
extern (C) void _BCD__ZN11Fl_Valuator4stepEd(void *This, double);
extern (C) double _BCD__ZNK11Fl_Valuator4stepEv(void *This);
extern (C) void _BCD__ZN11Fl_Valuator9precisionEi(void *This, int);
extern (C) double _BCD__ZNK11Fl_Valuator5valueEv(void *This);
extern (C) int _BCD__ZN11Fl_Valuator5valueEd(void *This, double);
extern (C) int _BCD__ZN11Fl_Valuator6formatEPc(void *This, char *);
extern (C) double _BCD__ZN11Fl_Valuator5roundEd(void *This, double);
extern (C) double _BCD__ZN11Fl_Valuator5clampEd(void *This, double);
extern (C) double _BCD__ZN11Fl_Valuator9incrementEdi(void *This, double, int);
alias void function(Fl_Widget *, int) _BCD_func__7;
alias void function(Fl_Widget *) _BCD_func__9;
alias void function(Fl_Widget *, void *) _BCD_func__13;
class Fl_Valuator : Fl_Widget {
this(ifloat ignore) {
super(ignore);
}
this(ifloat ignore, void *x) {
super(ignore);
__C_data = x;
__C_data_owned = false;
}
~this() {
if (__C_data && __C_data_owned) _BCD_delete_11Fl_Valuator(__C_data);
__C_data = null;
}
void bounds(double a, double b) {
_BCD__ZN11Fl_Valuator6boundsEdd(__C_data, a, b);
}
double minimum() {
return _BCD__ZNK11Fl_Valuator7minimumEv(__C_data);
}
void minimum(double a) {
_BCD__ZN11Fl_Valuator7minimumEd(__C_data, a);
}
double maximum() {
return _BCD__ZNK11Fl_Valuator7maximumEv(__C_data);
}
void maximum(double a) {
_BCD__ZN11Fl_Valuator7maximumEd(__C_data, a);
}
void range(double a, double b) {
_BCD__ZN11Fl_Valuator5rangeEdd(__C_data, a, b);
}
void step(int a) {
_BCD__ZN11Fl_Valuator4stepEi(__C_data, a);
}
void step(double a, int b) {
_BCD__ZN11Fl_Valuator4stepEdi(__C_data, a, b);
}
void step(double s) {
_BCD__ZN11Fl_Valuator4stepEd(__C_data, s);
}
double step() {
return _BCD__ZNK11Fl_Valuator4stepEv(__C_data);
}
void precision(int _0) {
_BCD__ZN11Fl_Valuator9precisionEi(__C_data, _0);
}
double value() {
return _BCD__ZNK11Fl_Valuator5valueEv(__C_data);
}
int value(double _0) {
return _BCD__ZN11Fl_Valuator5valueEd(__C_data, _0);
}
int format(char * _0) {
return _BCD__ZN11Fl_Valuator6formatEPc(__C_data, _0);
}
double round(double _0) {
return _BCD__ZN11Fl_Valuator5roundEd(__C_data, _0);
}
double clamp(double _0) {
return _BCD__ZN11Fl_Valuator5clampEd(__C_data, _0);
}
double increment(double _0, int _1) {
return _BCD__ZN11Fl_Valuator9incrementEdi(__C_data, _0, _1);
}
}
