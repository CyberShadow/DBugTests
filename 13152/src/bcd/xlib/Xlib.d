/* THIS FILE GENERATED BY bcd.gen */
module bcd.xlib.Xlib;
align(4):
const int XlibSpecificationRelease = 6;
const int X_HAVE_UTF8_STRING = 1;
const int True = 1;
const int False = 0;
const int QueuedAlready = 0;
const int QueuedAfterReading = 1;
const int QueuedAfterFlush = 2;
const char[] XNRequiredCharSet = "requiredCharSet";
const char[] XNQueryOrientation = "queryOrientation";
const char[] XNBaseFontName = "baseFontName";
const char[] XNOMAutomatic = "omAutomatic";
const char[] XNMissingCharSet = "missingCharSet";
const char[] XNDefaultString = "defaultString";
const char[] XNOrientation = "orientation";
const char[] XNDirectionalDependentDrawing = "directionalDependentDrawing";
const char[] XNContextualDrawing = "contextualDrawing";
const char[] XNFontInfo = "fontInfo";
const int XIMPreeditArea = 0x0001;
const int XIMPreeditCallbacks = 0x0002;
const int XIMPreeditPosition = 0x0004;
const int XIMPreeditNothing = 0x0008;
const int XIMPreeditNone = 0x0010;
const int XIMStatusArea = 0x0100;
const int XIMStatusCallbacks = 0x0200;
const int XIMStatusNothing = 0x0400;
const int XIMStatusNone = 0x0800;
const char[] XNVaNestedList = "XNVaNestedList";
const char[] XNQueryInputStyle = "queryInputStyle";
const char[] XNClientWindow = "clientWindow";
const char[] XNInputStyle = "inputStyle";
const char[] XNFocusWindow = "focusWindow";
const char[] XNResourceName = "resourceName";
const char[] XNResourceClass = "resourceClass";
const char[] XNGeometryCallback = "geometryCallback";
const char[] XNDestroyCallback = "destroyCallback";
const char[] XNFilterEvents = "filterEvents";
const char[] XNPreeditStartCallback = "preeditStartCallback";
const char[] XNPreeditDoneCallback = "preeditDoneCallback";
const char[] XNPreeditDrawCallback = "preeditDrawCallback";
const char[] XNPreeditCaretCallback = "preeditCaretCallback";
const char[] XNPreeditStateNotifyCallback = "preeditStateNotifyCallback";
const char[] XNPreeditAttributes = "preeditAttributes";
const char[] XNStatusStartCallback = "statusStartCallback";
const char[] XNStatusDoneCallback = "statusDoneCallback";
const char[] XNStatusDrawCallback = "statusDrawCallback";
const char[] XNStatusAttributes = "statusAttributes";
const char[] XNArea = "area";
const char[] XNAreaNeeded = "areaNeeded";
const char[] XNSpotLocation = "spotLocation";
const char[] XNColormap = "colorMap";
const char[] XNStdColormap = "stdColorMap";
const char[] XNForeground = "foreground";
const char[] XNBackground = "background";
const char[] XNBackgroundPixmap = "backgroundPixmap";
const char[] XNFontSet = "fontSet";
const char[] XNLineSpace = "lineSpace";
const char[] XNCursor = "cursor";
const char[] XNQueryIMValuesList = "queryIMValuesList";
const char[] XNQueryICValuesList = "queryICValuesList";
const char[] XNVisiblePosition = "visiblePosition";
const char[] XNR6PreeditCallback = "r6PreeditCallback";
const char[] XNStringConversionCallback = "stringConversionCallback";
const char[] XNStringConversion = "stringConversion";
const char[] XNResetState = "resetState";
const char[] XNHotKey = "hotKey";
const char[] XNHotKeyState = "hotKeyState";
const char[] XNPreeditState = "preeditState";
const char[] XNSeparatorofNestedList = "separatorofNestedList";
const int XBufferOverflow = -1;
const int XLookupNone = 1;
const int XLookupChars = 2;
const int XLookupKeySym = 3;
const int XLookupBoth = 4;
const int XIMReverse = 1;
const int XIMPreeditUnKnown = 0;
const int XIMPreeditEnable = 1;
const int XIMInitialState = 1;
alias void Display;
alias char * XPointer;
alias void function(void *, char *, int, int, char * *) _BCD_func__849;
alias _BCD_func__849 XConnectionWatchProc;
alias int function(void *) _BCD_func__897;
alias _BCD_func__897 XIOErrorHandler;
alias int function(void *, XErrorEvent *) _BCD_func__898;
alias _BCD_func__898 XErrorHandler;
alias uint XIMHotKeyState;
alias _XIMHotKeyTriggers XIMHotKeyTriggers;
alias _XIMHotKeyTrigger XIMHotKeyTrigger;
alias _XIMStatusDrawCallbackStruct XIMStatusDrawCallbackStruct;
alias _XIMText XIMText;
enum XIMStatusDataType {
XIMTextType=0,
XIMBitmapType=1,
}
alias _XIMPreeditCaretCallbackStruct XIMPreeditCaretCallbackStruct;
enum XIMCaretDirection {
XIMForwardChar=0,
XIMBackwardChar=1,
XIMForwardWord=2,
XIMBackwardWord=3,
XIMCaretUp=4,
XIMCaretDown=5,
XIMNextLine=6,
XIMPreviousLine=7,
XIMLineStart=8,
XIMLineEnd=9,
XIMAbsolutePosition=10,
XIMDontChange=11,
}
enum XIMCaretStyle {
XIMIsInvisible=0,
XIMIsPrimary=1,
XIMIsSecondary=2,
}
alias _XIMPreeditDrawCallbackStruct XIMPreeditDrawCallbackStruct;
alias _XIMStringConversionCallbackStruct XIMStringConversionCallbackStruct;
alias ushort XIMStringConversionPosition;
alias ushort XIMStringConversionOperation;
alias _XIMStringConversionText XIMStringConversionText;
alias ushort XIMStringConversionType;
alias uint XIMStringConversionFeedback;
alias uint XIMResetState;
alias _XIMPreeditStateNotifyCallbackStruct XIMPreeditStateNotifyCallbackStruct;
alias uint XIMPreeditState;
alias uint XIMFeedback;
alias int function(void *, char *, char *) _BCD_func__973;
alias _BCD_func__973 XICProc;
alias void function(void *, char *, char *) _BCD_func__974;
alias _BCD_func__974 XIMProc;
alias void * XVaNestedList;
alias uint XIMStyle;
alias void function(void *, char *, char *) _BCD_func__972;
alias _BCD_func__972 XIDProc;
alias void * XIC;
alias void * XIM;
enum XOrientation {
XOMOrientation_LTR_TTB=0,
XOMOrientation_RTL_TTB=1,
XOMOrientation_TTB_LTR=2,
XOMOrientation_TTB_RTL=3,
XOMOrientation_Context=4,
}
alias void * XFontSet;
alias void * XOC;
alias void * XOM;
alias void * GC;
alias _XExtData XExtData;
alias _XEvent XEvent;
alias XFocusChangeEvent XFocusOutEvent;
alias XFocusChangeEvent XFocusInEvent;
alias XCrossingEvent XLeaveWindowEvent;
alias XCrossingEvent XEnterWindowEvent;
alias XMotionEvent XPointerMovedEvent;
alias XButtonEvent XButtonReleasedEvent;
alias XButtonEvent XButtonPressedEvent;
alias XKeyEvent XKeyReleasedEvent;
alias XKeyEvent XKeyPressedEvent;
alias uint function(void *) _BCD_func__2028;
alias int function(void *) _BCD_func__2029;
alias _XImage XImage;
alias _XImage * function(void *, Visual *, uint, int, int, char *, uint, uint, int, int) _BCD_func__2079;
alias int function(_XImage *) _BCD_func__2080;
alias uint function(_XImage *, int, int) _BCD_func__2081;
alias int function(_XImage *, int, int, uint) _BCD_func__2082;
alias _XImage * function(_XImage *, int, int, uint, uint) _BCD_func__2083;
alias int function(_XImage *, int) _BCD_func__2084;
alias int function(_XExtData *) _BCD_func__2059;
extern (C) int _Xwctomb(char *, wchar);
extern (C) int _Xmbtowc(wchar *, char *, int);
extern (C) void XSetAuthorization(char *, int, char *, int);
extern (C) void XRemoveConnectionWatch(void *, _BCD_func__849, char *);
extern (C) int XAddConnectionWatch(void *, _BCD_func__849, char *);
extern (C) void XProcessInternalConnection(void *, int);
extern (C) int XInternalConnectionNumbers(void *, int * *, int *);
extern (C) int XUnregisterIMInstantiateCallback(void *, void *, char *, char *, _BCD_func__972, char *);
extern (C) int XRegisterIMInstantiateCallback(void *, void *, char *, char *, _BCD_func__972, char *);
extern (C) void * XVaCreateNestedList(int, ...);
extern (C) int Xutf8LookupString(void *, XKeyEvent *, char *, int, uint *, int *);
extern (C) int XwcLookupString(void *, XKeyEvent *, wchar *, int, uint *, int *);
extern (C) int XmbLookupString(void *, XKeyEvent *, char *, int, uint *, int *);
extern (C) int XFilterEvent(_XEvent *, uint);
extern (C) void * XIMOfIC(void *);
extern (C) char * XGetICValues(void *, ...);
extern (C) char * XSetICValues(void *, ...);
extern (C) char * Xutf8ResetIC(void *);
extern (C) char * XmbResetIC(void *);
extern (C) wchar * XwcResetIC(void *);
extern (C) void XUnsetICFocus(void *);
extern (C) void XSetICFocus(void *);
extern (C) void XDestroyIC(void *);
extern (C) void * XCreateIC(void *, ...);
extern (C) char * XLocaleOfIM(void *);
extern (C) void * XDisplayOfIM(void *);
extern (C) char * XSetIMValues(void *, ...);
extern (C) char * XGetIMValues(void *, ...);
extern (C) int XCloseIM(void *);
extern (C) void * XOpenIM(void *, void *, char *, char *);
extern (C) void Xutf8DrawImageString(void *, uint, void *, void *, int, int, char *, int);
extern (C) void XwcDrawImageString(void *, uint, void *, void *, int, int, wchar *, int);
extern (C) void XmbDrawImageString(void *, uint, void *, void *, int, int, char *, int);
extern (C) void Xutf8DrawString(void *, uint, void *, void *, int, int, char *, int);
extern (C) void XwcDrawString(void *, uint, void *, void *, int, int, wchar *, int);
extern (C) void XmbDrawString(void *, uint, void *, void *, int, int, char *, int);
extern (C) void Xutf8DrawText(void *, uint, void *, int, int, XmbTextItem *, int);
extern (C) void XwcDrawText(void *, uint, void *, int, int, XwcTextItem *, int);
extern (C) void XmbDrawText(void *, uint, void *, int, int, XmbTextItem *, int);
extern (C) int Xutf8TextPerCharExtents(void *, char *, int, XRectangle *, XRectangle *, int, int *, XRectangle *, XRectangle *);
extern (C) int XwcTextPerCharExtents(void *, wchar *, int, XRectangle *, XRectangle *, int, int *, XRectangle *, XRectangle *);
extern (C) int XmbTextPerCharExtents(void *, char *, int, XRectangle *, XRectangle *, int, int *, XRectangle *, XRectangle *);
extern (C) int Xutf8TextExtents(void *, char *, int, XRectangle *, XRectangle *);
extern (C) int XwcTextExtents(void *, wchar *, int, XRectangle *, XRectangle *);
extern (C) int XmbTextExtents(void *, char *, int, XRectangle *, XRectangle *);
extern (C) int Xutf8TextEscapement(void *, char *, int);
extern (C) int XwcTextEscapement(void *, wchar *, int);
extern (C) int XmbTextEscapement(void *, char *, int);
extern (C) XFontSetExtents * XExtentsOfFontSet(void *);
extern (C) int XContextualDrawing(void *);
extern (C) int XDirectionalDependentDrawing(void *);
extern (C) int XContextDependentDrawing(void *);
extern (C) char * XLocaleOfFontSet(void *);
extern (C) char * XBaseFontNameListOfFontSet(void *);
extern (C) int XFontsOfFontSet(void *, XFontStruct * * *, char * * *);
extern (C) void XFreeFontSet(void *, void *);
extern (C) void * XCreateFontSet(void *, char *, char * * *, int *, char * *);
extern (C) char * XGetOCValues(void *, ...);
extern (C) char * XSetOCValues(void *, ...);
extern (C) void * XOMOfOC(void *);
extern (C) void XDestroyOC(void *);
extern (C) void * XCreateOC(void *, ...);
extern (C) char * XLocaleOfOM(void *);
extern (C) void * XDisplayOfOM(void *);
extern (C) char * XGetOMValues(void *, ...);
extern (C) char * XSetOMValues(void *, ...);
extern (C) int XCloseOM(void *);
extern (C) void * XOpenOM(void *, void *, char *, char *);
extern (C) char * XSetLocaleModifiers(char *);
extern (C) int XSupportsLocale();
extern (C) int XWriteBitmapFile(void *, char *, uint, uint, uint, int, int);
extern (C) int XWindowEvent(void *, uint, int, _XEvent *);
extern (C) int XWidthOfScreen(Screen *);
extern (C) int XWidthMMOfScreen(Screen *);
extern (C) int XWarpPointer(void *, uint, uint, int, int, uint, uint, int, int);
extern (C) int XVendorRelease(void *);
extern (C) int XUnmapWindow(void *, uint);
extern (C) int XUnmapSubwindows(void *, uint);
extern (C) int XUnloadFont(void *, uint);
extern (C) int XUninstallColormap(void *, uint);
extern (C) int XUngrabServer(void *);
extern (C) int XUngrabPointer(void *, uint);
extern (C) int XUngrabKeyboard(void *, uint);
extern (C) int XUngrabKey(void *, int, uint, uint);
extern (C) int XUngrabButton(void *, uint, uint, uint);
extern (C) int XUndefineCursor(void *, uint);
extern (C) int XTranslateCoordinates(void *, uint, uint, int, int, int *, int *, uint *);
extern (C) int XTextWidth16(XFontStruct *, XChar2b *, int);
extern (C) int XTextWidth(XFontStruct *, char *, int);
extern (C) int XTextExtents16(XFontStruct *, XChar2b *, int, int *, int *, int *, XCharStruct *);
extern (C) int XTextExtents(XFontStruct *, char *, int, int *, int *, int *, XCharStruct *);
extern (C) int XSync(void *, int);
extern (C) int XStoreNamedColor(void *, uint, char *, uint, int);
extern (C) int XStoreName(void *, uint, char *);
extern (C) int XStoreColors(void *, uint, XColor *, int);
extern (C) int XStoreColor(void *, uint, XColor *);
extern (C) int XStoreBytes(void *, char *, int);
extern (C) int XStoreBuffer(void *, char *, int, int);
extern (C) int XSetWindowColormap(void *, uint, uint);
extern (C) int XSetWindowBorderWidth(void *, uint, uint);
extern (C) int XSetWindowBorderPixmap(void *, uint, uint);
extern (C) int XSetWindowBorder(void *, uint, uint);
extern (C) int XSetWindowBackgroundPixmap(void *, uint, uint);
extern (C) int XSetWindowBackground(void *, uint, uint);
extern (C) int XSetTile(void *, void *, uint);
extern (C) int XSetTSOrigin(void *, void *, int, int);
extern (C) int XSetSubwindowMode(void *, void *, int);
extern (C) int XSetStipple(void *, void *, uint);
extern (C) int XSetState(void *, void *, uint, uint, int, uint);
extern (C) int XSetSelectionOwner(void *, uint, uint, uint);
extern (C) int XSetScreenSaver(void *, int, int, int, int);
extern (C) int XSetPointerMapping(void *, char *, int);
extern (C) int XSetPlaneMask(void *, void *, uint);
extern (C) int XSetModifierMapping(void *, XModifierKeymap *);
extern (C) int XSetLineAttributes(void *, void *, uint, int, int, int);
extern (C) int XSetInputFocus(void *, uint, int, uint);
extern (C) int XSetIconName(void *, uint, char *);
extern (C) int XSetGraphicsExposures(void *, void *, int);
extern (C) int XSetFunction(void *, void *, int);
extern (C) int XSetForeground(void *, void *, uint);
extern (C) int XSetFontPath(void *, char * *, int);
extern (C) int XSetFont(void *, void *, uint);
extern (C) int XSetFillStyle(void *, void *, int);
extern (C) int XSetFillRule(void *, void *, int);
extern (C) int XSetDashes(void *, void *, int, char *, int);
extern (C) int XSetCommand(void *, uint, char * *, int);
extern (C) int XSetCloseDownMode(void *, int);
extern (C) int XSetClipRectangles(void *, void *, int, int, XRectangle *, int, int);
extern (C) int XSetClipOrigin(void *, void *, int, int);
extern (C) int XSetClipMask(void *, void *, uint);
extern (C) int XSetBackground(void *, void *, uint);
extern (C) int XSetArcMode(void *, void *, int);
extern (C) int XSetAccessControl(void *, int);
extern (C) int XSendEvent(void *, uint, int, int, _XEvent *);
extern (C) int XSelectInput(void *, uint, int);
extern (C) int XScreenCount(void *);
extern (C) int XRotateWindowProperties(void *, uint, uint *, int, int);
extern (C) int XRotateBuffers(void *, int);
extern (C) int XRestackWindows(void *, uint *, int);
extern (C) int XResizeWindow(void *, uint, uint, uint);
extern (C) int XResetScreenSaver(void *);
extern (C) int XReparentWindow(void *, uint, uint, int, int);
extern (C) int XRemoveHosts(void *, XHostAddress *, int);
extern (C) int XRemoveHost(void *, XHostAddress *);
extern (C) int XRemoveFromSaveSet(void *, uint);
extern (C) int XRefreshKeyboardMapping(XMappingEvent *);
extern (C) int XRecolorCursor(void *, uint, XColor *, XColor *);
extern (C) int XRebindKeysym(void *, uint, uint *, int, char *, int);
extern (C) int XReadBitmapFileData(char *, uint *, uint *, char * *, int *, int *);
extern (C) int XReadBitmapFile(void *, uint, char *, uint *, uint *, uint *, int *, int *);
extern (C) int XRaiseWindow(void *, uint);
extern (C) int XQueryTree(void *, uint, uint *, uint *, uint * *, uint *);
extern (C) int XQueryTextExtents16(void *, uint, XChar2b *, int, int *, int *, int *, XCharStruct *);
extern (C) int XQueryTextExtents(void *, uint, char *, int, int *, int *, int *, XCharStruct *);
extern (C) int XQueryPointer(void *, uint, uint *, uint *, int *, int *, int *, int *, uint *);
extern (C) int XQueryKeymap(void *, char *);
extern (C) int XQueryExtension(void *, char *, int *, int *, int *);
extern (C) int XQueryColors(void *, uint, XColor *, int);
extern (C) int XQueryColor(void *, uint, XColor *);
extern (C) int XQueryBestTile(void *, uint, uint, uint, uint *, uint *);
extern (C) int XQueryBestStipple(void *, uint, uint, uint, uint *, uint *);
extern (C) int XQueryBestSize(void *, int, uint, uint, uint, uint *, uint *);
extern (C) int XQueryBestCursor(void *, uint, uint, uint, uint *, uint *);
extern (C) int XQLength(void *);
extern (C) int XPutImage(void *, uint, void *, _XImage *, int, int, int, int, uint, uint);
extern (C) int XPutBackEvent(void *, _XEvent *);
extern (C) int XProtocolVersion(void *);
extern (C) int XProtocolRevision(void *);
extern (C) int XPlanesOfScreen(Screen *);
extern (C) int XPending(void *);
alias int function(void *, _XEvent *, char *) _BCD_func__1812;
extern (C) int XPeekIfEvent(void *, _XEvent *, _BCD_func__1812, char *);
extern (C) int XPeekEvent(void *, _XEvent *);
extern (C) int XParseGeometry(char *, int *, int *, uint *, uint *);
extern (C) int XParseColor(void *, uint, char *, XColor *);
extern (C) int XNoOp(void *);
extern (C) int XNextEvent(void *, _XEvent *);
extern (C) int XMoveWindow(void *, uint, int, int);
extern (C) int XMoveResizeWindow(void *, uint, int, int, uint, uint);
extern (C) int XMinCmapsOfScreen(Screen *);
extern (C) int XMaxCmapsOfScreen(Screen *);
extern (C) int XMaskEvent(void *, int, _XEvent *);
extern (C) int XMapWindow(void *, uint);
extern (C) int XMapSubwindows(void *, uint);
extern (C) int XMapRaised(void *, uint);
extern (C) int XLowerWindow(void *, uint);
extern (C) int XLookupColor(void *, uint, char *, XColor *, XColor *);
extern (C) int XKillClient(void *, uint);
extern (C) char XKeysymToKeycode(void *, uint);
extern (C) int XInstallColormap(void *, uint);
extern (C) int XImageByteOrder(void *);
extern (C) int XIfEvent(void *, _XEvent *, _BCD_func__1812, char *);
extern (C) int XHeightOfScreen(Screen *);
extern (C) int XHeightMMOfScreen(Screen *);
extern (C) int XGrabServer(void *);
extern (C) int XGrabPointer(void *, uint, int, uint, int, int, uint, uint, uint);
extern (C) int XGrabKeyboard(void *, uint, int, int, int, uint);
extern (C) int XGrabKey(void *, int, uint, uint, int, int, int);
extern (C) int XGrabButton(void *, uint, uint, uint, int, uint, int, int, uint, uint);
extern (C) int XGetWindowAttributes(void *, uint, XWindowAttributes *);
extern (C) int XGetWindowProperty(void *, uint, uint, int, int, int, uint, uint *, int *, uint *, uint *, char * *);
extern (C) int XGetTransientForHint(void *, uint, uint *);
extern (C) int XGetScreenSaver(void *, int *, int *, int *, int *);
extern (C) int XGetPointerMapping(void *, char *, int);
extern (C) int XGetPointerControl(void *, int *, int *, int *);
extern (C) int XGetKeyboardControl(void *, XKeyboardState *);
extern (C) int XGetInputFocus(void *, uint *, int *);
extern (C) int XGetIconName(void *, uint, char * *);
extern (C) int XGetGeometry(void *, uint, uint *, int *, int *, uint *, uint *, uint *, uint *);
extern (C) int XGetGCValues(void *, void *, uint, XGCValues *);
extern (C) int XGetFontProperty(XFontStruct *, uint, uint *);
extern (C) int XGetErrorText(void *, int, char *, int);
extern (C) int XGetErrorDatabaseText(void *, char *, char *, char *, char *, int);
extern (C) int XGeometry(void *, int, char *, char *, uint, uint, uint, int, int, int *, int *, int *, int *);
extern (C) int XFreePixmap(void *, uint);
extern (C) int XFreeModifiermap(XModifierKeymap *);
extern (C) int XFreeGC(void *, void *);
extern (C) int XFreeFontPath(char * *);
extern (C) int XFreeFontNames(char * *);
extern (C) int XFreeFontInfo(char * *, XFontStruct *, int);
extern (C) int XFreeFont(void *, XFontStruct *);
extern (C) int XFreeExtensionList(char * *);
extern (C) int XFreeCursor(void *, uint);
extern (C) int XFreeColors(void *, uint, uint *, int, uint);
extern (C) int XFreeColormap(void *, uint);
extern (C) int XFree(void *);
extern (C) int XForceScreenSaver(void *, int);
extern (C) int XFlush(void *);
extern (C) int XFillRectangles(void *, uint, void *, XRectangle *, int);
extern (C) int XFillRectangle(void *, uint, void *, int, int, uint, uint);
extern (C) int XFillPolygon(void *, uint, void *, XPoint *, int, int, int);
extern (C) int XFillArcs(void *, uint, void *, XArc *, int);
extern (C) int XFillArc(void *, uint, void *, int, int, uint, uint, int, int);
extern (C) int XFetchName(void *, uint, char * *);
extern (C) int XEventsQueued(void *, int);
extern (C) int XEnableAccessControl(void *);
extern (C) int XDrawText16(void *, uint, void *, int, int, XTextItem16 *, int);
extern (C) int XDrawText(void *, uint, void *, int, int, XTextItem *, int);
extern (C) int XDrawString16(void *, uint, void *, int, int, XChar2b *, int);
extern (C) int XDrawString(void *, uint, void *, int, int, char *, int);
extern (C) int XDrawSegments(void *, uint, void *, XSegment *, int);
extern (C) int XDrawRectangles(void *, uint, void *, XRectangle *, int);
extern (C) int XDrawRectangle(void *, uint, void *, int, int, uint, uint);
extern (C) int XDrawPoints(void *, uint, void *, XPoint *, int, int);
extern (C) int XDrawPoint(void *, uint, void *, int, int);
extern (C) int XDrawLines(void *, uint, void *, XPoint *, int, int);
extern (C) int XDrawLine(void *, uint, void *, int, int, int, int);
extern (C) int XDrawImageString16(void *, uint, void *, int, int, XChar2b *, int);
extern (C) int XDrawImageString(void *, uint, void *, int, int, char *, int);
extern (C) int XDrawArcs(void *, uint, void *, XArc *, int);
extern (C) int XDrawArc(void *, uint, void *, int, int, uint, uint, int, int);
extern (C) int XDisplayWidthMM(void *, int);
extern (C) int XDisplayWidth(void *, int);
extern (C) int XDisplayPlanes(void *, int);
extern (C) int XDisplayKeycodes(void *, int *, int *);
extern (C) int XDisplayHeightMM(void *, int);
extern (C) int XDisplayHeight(void *, int);
extern (C) int XDisplayCells(void *, int);
extern (C) int XDisableAccessControl(void *);
extern (C) int XDoesSaveUnders(Screen *);
extern (C) int XDoesBackingStore(Screen *);
extern (C) int XDestroySubwindows(void *, uint);
extern (C) int XDestroyWindow(void *, uint);
extern (C) int XDeleteProperty(void *, uint, uint);
extern (C) int XDefineCursor(void *, uint, uint);
extern (C) int XDefaultScreen(void *);
extern (C) int XDefaultDepthOfScreen(Screen *);
extern (C) int XDefaultDepth(void *, int);
extern (C) int XCopyPlane(void *, uint, uint, void *, int, int, uint, uint, int, int, uint);
extern (C) int XCopyGC(void *, void *, uint, void *);
extern (C) int XCopyArea(void *, uint, uint, void *, int, int, uint, uint, int, int);
extern (C) int XConvertSelection(void *, uint, uint, uint, uint, uint);
extern (C) int XConnectionNumber(void *);
extern (C) int XConfigureWindow(void *, uint, uint, XWindowChanges *);
extern (C) int XCloseDisplay(void *);
extern (C) int XClearWindow(void *, uint);
extern (C) int XClearArea(void *, uint, int, int, uint, uint, int);
extern (C) int XCirculateSubwindowsUp(void *, uint);
extern (C) int XCirculateSubwindowsDown(void *, uint);
extern (C) int XCirculateSubwindows(void *, uint, int);
extern (C) int XCheckWindowEvent(void *, uint, int, _XEvent *);
extern (C) int XCheckTypedWindowEvent(void *, uint, int, _XEvent *);
extern (C) int XCheckTypedEvent(void *, int, _XEvent *);
extern (C) int XCheckMaskEvent(void *, int, _XEvent *);
extern (C) int XCheckIfEvent(void *, _XEvent *, _BCD_func__1812, char *);
extern (C) int XChangeWindowAttributes(void *, uint, uint, XSetWindowAttributes *);
extern (C) int XChangeSaveSet(void *, uint, int);
extern (C) int XChangeProperty(void *, uint, uint, uint, int, int, char *, int);
extern (C) int XChangePointerControl(void *, int, int, int, int, int);
extern (C) int XChangeKeyboardMapping(void *, int, int, uint *, int);
extern (C) int XChangeKeyboardControl(void *, uint, XKeyboardControl *);
extern (C) int XChangeGC(void *, void *, uint, XGCValues *);
extern (C) int XChangeActivePointerGrab(void *, uint, uint, uint);
extern (C) int XCellsOfScreen(Screen *);
extern (C) int XBitmapUnit(void *);
extern (C) int XBitmapPad(void *);
extern (C) int XBitmapBitOrder(void *);
extern (C) int XBell(void *, int);
extern (C) int XAutoRepeatOn(void *);
extern (C) int XAutoRepeatOff(void *);
extern (C) int XAllowEvents(void *, int, uint);
extern (C) int XAllocNamedColor(void *, uint, char *, XColor *, XColor *);
extern (C) int XAllocColorPlanes(void *, uint, int, uint *, int, int, int, int, uint *, uint *, uint *);
extern (C) int XAllocColorCells(void *, uint, int, uint *, uint, uint *, uint);
extern (C) int XAllocColor(void *, uint, XColor *);
extern (C) int XAddToSaveSet(void *, uint);
extern (C) int XAddToExtensionList(_XExtData * *, _XExtData *);
extern (C) int XAddHosts(void *, XHostAddress *, int);
extern (C) int XAddHost(void *, XHostAddress *);
extern (C) int XActivateScreenSaver(void *);
extern (C) int XSetTransientForHint(void *, uint, uint);
extern (C) void XFreeStringList(char * *);
extern (C) int XSetWMColormapWindows(void *, uint, uint *, int);
extern (C) int XGetWMColormapWindows(void *, uint, uint * *, int *);
extern (C) int XGetCommand(void *, uint, char * * *, int *);
extern (C) int XWithdrawWindow(void *, uint, int);
extern (C) int XIconifyWindow(void *, uint, int);
extern (C) int XSetWMProtocols(void *, uint, uint *, int);
extern (C) int XGetWMProtocols(void *, uint, uint * *, int *);
extern (C) int XReconfigureWMWindow(void *, uint, int, uint, XWindowChanges *);
extern (C) int * XListDepths(void *, int, int *);
extern (C) XPixmapFormatValues * XListPixmapFormats(void *, int *);
extern (C) _BCD_func__897 XSetIOErrorHandler(_BCD_func__897);
extern (C) _BCD_func__898 XSetErrorHandler(_BCD_func__898);
extern (C) int XScreenNumberOfScreen(Screen *);
extern (C) int XEventMaskOfScreen(Screen *);
extern (C) Screen * XDefaultScreenOfDisplay(void *);
extern (C) Screen * XScreenOfDisplay(void *, int);
extern (C) void * XDisplayOfScreen(Screen *);
extern (C) uint XDefaultColormapOfScreen(Screen *);
extern (C) uint XDefaultColormap(void *, int);
extern (C) char * XDisplayString(void *);
extern (C) char * XServerVendor(void *);
extern (C) uint XLastKnownRequestProcessed(void *);
extern (C) uint XNextRequest(void *);
extern (C) uint XWhitePixelOfScreen(Screen *);
extern (C) uint XBlackPixelOfScreen(Screen *);
extern (C) uint XAllPlanes();
extern (C) uint XWhitePixel(void *, int);
extern (C) uint XBlackPixel(void *, int);
extern (C) void * XDefaultGCOfScreen(Screen *);
extern (C) void * XDefaultGC(void *, int);
extern (C) Visual * XDefaultVisualOfScreen(Screen *);
extern (C) Visual * XDefaultVisual(void *, int);
extern (C) uint XRootWindowOfScreen(Screen *);
extern (C) uint XDefaultRootWindow(void *);
extern (C) uint XRootWindow(void *, int);
extern (C) _XExtData * * XEHeadOfExtensionList(XEDataObject);
extern (C) _XExtData * XFindOnExtensionList(_XExtData * *, int);
extern (C) XExtCodes * XAddExtension(void *);
extern (C) XExtCodes * XInitExtension(void *, char *);
extern (C) void XUnlockDisplay(void *);
extern (C) void XLockDisplay(void *);
extern (C) int XInitThreads();
extern (C) uint XVisualIDFromVisual(Visual *);
extern (C) uint XDisplayMotionBufferSize(void *);
extern (C) char * XScreenResourceString(Screen *);
extern (C) char * XResourceManagerString(void *);
extern (C) int XExtendedMaxRequestSize(void *);
extern (C) int XMaxRequestSize(void *);
extern (C) uint XStringToKeysym(char *);
extern (C) uint * XGetKeyboardMapping(void *, uint, int, int *);
extern (C) uint XLookupKeysym(XKeyEvent *, int);
extern (C) uint XKeycodeToKeysym(void *, uint, int);
extern (C) XHostAddress * XListHosts(void *, int *, int *);
extern (C) uint * XListProperties(void *, uint, int *);
extern (C) char * * XListExtensions(void *, int *);
extern (C) char * * XGetFontPath(void *, int *);
extern (C) char * * XListFontsWithInfo(void *, char *, int, int *, XFontStruct * *);
extern (C) char * * XListFonts(void *, char *, int, int *);
extern (C) uint * XListInstalledColormaps(void *, uint, int *);
extern (C) uint XCreateWindow(void *, uint, int, int, uint, uint, uint, int, uint, Visual *, uint, XSetWindowAttributes *);
extern (C) uint XGetSelectionOwner(void *, uint);
extern (C) uint XCreateSimpleWindow(void *, uint, int, int, uint, uint, uint, uint, uint);
extern (C) uint XCreatePixmapFromBitmapData(void *, uint, char *, uint, uint, uint, uint, uint);
extern (C) uint XCreateBitmapFromData(void *, uint, char *, uint, uint);
extern (C) uint XCreatePixmap(void *, uint, uint, uint, uint);
extern (C) void XFlushGC(void *, void *);
extern (C) uint XGContextFromGC(void *);
extern (C) void * XCreateGC(void *, uint, uint, XGCValues *);
extern (C) uint XLoadFont(void *, char *);
extern (C) uint XCreateFontCursor(void *, uint);
extern (C) uint XCreateGlyphCursor(void *, uint, uint, uint, uint, XColor *, XColor *);
extern (C) uint XCreatePixmapCursor(void *, uint, uint, XColor *, XColor *, uint, uint);
extern (C) uint XCreateColormap(void *, uint, Visual *, int);
extern (C) uint XCopyColormapAndFree(void *, uint);
extern (C) int XInternAtoms(void *, char * *, int, int, uint *);
extern (C) uint XInternAtom(void *, char *, int);
extern (C) _BCD_func__897 XSetAfterFunction(void *, _BCD_func__897);
extern (C) _BCD_func__897 XSynchronize(void *, int);
extern (C) char * XKeysymToString(uint);
extern (C) char * XDisplayName(char *);
extern (C) char * XGetDefault(void *, char *, char *);
extern (C) int XGetAtomNames(void *, uint *, int, char * *);
extern (C) char * XGetAtomName(void *, uint);
extern (C) char * XFetchBuffer(void *, int *, int);
extern (C) char * XFetchBytes(void *, int *);
extern (C) void XrmInitialize();
extern (C) void * XOpenDisplay(char *);
extern (C) _XImage * XGetSubImage(void *, uint, int, int, uint, uint, uint, int, _XImage *, int, int);
extern (C) _XImage * XGetImage(void *, uint, int, int, uint, uint, uint, int);
extern (C) int XInitImage(_XImage *);
extern (C) _XImage * XCreateImage(void *, Visual *, uint, int, int, char *, uint, uint, int, int);
extern (C) XModifierKeymap * XNewModifiermap(int);
extern (C) XModifierKeymap * XInsertModifiermapEntry(XModifierKeymap *, uint, int);
extern (C) XModifierKeymap * XGetModifierMapping(void *);
extern (C) XModifierKeymap * XDeleteModifiermapEntry(XModifierKeymap *, uint, int);
extern (C) XTimeCoord * XGetMotionEvents(void *, uint, uint, uint, int *);
extern (C) XFontStruct * XQueryFont(void *, uint);
extern (C) XFontStruct * XLoadQueryFont(void *, char *);
extern (C) int _Xmblen(char *, int);
struct XIMValuesList {
ushort count_values;
char * * supported_values;
}
struct _XIMHotKeyTriggers {
int num_hot_key;
_XIMHotKeyTrigger * key;
}
struct _XIMHotKeyTrigger {
uint keysym;
int modifier;
int modifier_mask;
}
union N28_XIMStatusDrawCallbackStruct4__86E {
_XIMText * text;
uint bitmap;
}
struct _XIMStatusDrawCallbackStruct {
int type;
N28_XIMStatusDrawCallbackStruct4__86E data;
}
struct _XIMPreeditCaretCallbackStruct {
int position;
int direction;
int style;
}
struct _XIMPreeditDrawCallbackStruct {
int caret;
int chg_first;
int chg_length;
_XIMText * text;
}
struct _XIMStringConversionCallbackStruct {
ushort position;
int direction;
ushort operation;
ushort factor;
_XIMStringConversionText * text;
}
union N24_XIMStringConversionText4__82E {
char * mbs;
wchar * wcs;
}
struct _XIMStringConversionText {
ushort length;
uint * feedback;
int encoding_is_wchar;
N24_XIMStringConversionText4__82E string;
}
struct _XIMPreeditStateNotifyCallbackStruct {
uint state;
}
union N8_XIMText4__81E {
char * multi_byte;
wchar * wide_char;
}
struct _XIMText {
ushort length;
uint * feedback;
int encoding_is_wchar;
N8_XIMText4__81E string;
}
struct XICCallback {
char * client_data;
_BCD_func__973 callback;
}
struct XIMCallback {
char * client_data;
_BCD_func__974 callback;
}
struct XIMStyles {
ushort count_styles;
uint * supported_styles;
}
struct XOMFontInfo {
int num_font;
XFontStruct * * font_struct_list;
char * * font_name_list;
}
struct XOMOrientation {
int num_orientation;
int * orientation;
}
struct XOMCharSetList {
int charset_count;
char * * charset_list;
}
struct XwcTextItem {
wchar * chars;
int nchars;
int delta;
void * font_set;
}
struct XmbTextItem {
char * chars;
int nchars;
int delta;
void * font_set;
}
struct XFontSetExtents {
XRectangle max_ink_extent;
XRectangle max_logical_extent;
}
union XEDataObject {
void * display;
void * gc;
Visual * visual;
Screen * screen;
ScreenFormat * pixmap_format;
XFontStruct * font;
}
struct XTextItem16 {
XChar2b * chars;
int nchars;
int delta;
uint font;
}
struct XChar2b {
char byte1;
char byte2;
}
struct XTextItem {
char * chars;
int nchars;
int delta;
uint font;
}
struct XFontStruct {
_XExtData * ext_data;
uint fid;
uint direction;
uint min_char_or_byte2;
uint max_char_or_byte2;
uint min_byte1;
uint max_byte1;
int all_chars_exist;
uint default_char;
int n_properties;
XFontProp * properties;
XCharStruct min_bounds;
XCharStruct max_bounds;
XCharStruct * per_char;
int ascent;
int descent;
}
struct XFontProp {
uint name;
uint card32;
}
struct XCharStruct {
short lbearing;
short rbearing;
short width;
short ascent;
short descent;
ushort attributes;
}
union _XEvent {
int type;
XAnyEvent xany;
XKeyEvent xkey;
XButtonEvent xbutton;
XMotionEvent xmotion;
XCrossingEvent xcrossing;
XFocusChangeEvent xfocus;
XExposeEvent xexpose;
XGraphicsExposeEvent xgraphicsexpose;
XNoExposeEvent xnoexpose;
XVisibilityEvent xvisibility;
XCreateWindowEvent xcreatewindow;
XDestroyWindowEvent xdestroywindow;
XUnmapEvent xunmap;
XMapEvent xmap;
XMapRequestEvent xmaprequest;
XReparentEvent xreparent;
XConfigureEvent xconfigure;
XGravityEvent xgravity;
XResizeRequestEvent xresizerequest;
XConfigureRequestEvent xconfigurerequest;
XCirculateEvent xcirculate;
XCirculateRequestEvent xcirculaterequest;
XPropertyEvent xproperty;
XSelectionClearEvent xselectionclear;
XSelectionRequestEvent xselectionrequest;
XSelectionEvent xselection;
XColormapEvent xcolormap;
XClientMessageEvent xclient;
XMappingEvent xmapping;
XErrorEvent xerror;
XKeymapEvent xkeymap;
int [24] pad;
}
struct XAnyEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
}
struct XErrorEvent {
int type;
void * display;
uint resourceid;
uint serial;
char error_code;
char request_code;
char minor_code;
}
struct XMappingEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
int request;
int first_keycode;
int count;
}
union N19XClientMessageEvent4__60E {
char [20] b;
short [10] s;
int [5] l;
}
struct XClientMessageEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
uint message_type;
int format;
N19XClientMessageEvent4__60E data;
}
struct XColormapEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
uint colormap;
int c_new;
int state;
}
struct XSelectionEvent {
int type;
uint serial;
int send_event;
void * display;
uint requestor;
uint selection;
uint target;
uint property;
uint time;
}
struct XSelectionRequestEvent {
int type;
uint serial;
int send_event;
void * display;
uint owner;
uint requestor;
uint selection;
uint target;
uint property;
uint time;
}
struct XSelectionClearEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
uint selection;
uint time;
}
struct XPropertyEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
uint atom;
uint time;
int state;
}
struct XCirculateRequestEvent {
int type;
uint serial;
int send_event;
void * display;
uint parent;
uint window;
int place;
}
struct XCirculateEvent {
int type;
uint serial;
int send_event;
void * display;
uint event;
uint window;
int place;
}
struct XConfigureRequestEvent {
int type;
uint serial;
int send_event;
void * display;
uint parent;
uint window;
int x;
int y;
int width;
int height;
int border_width;
uint above;
int detail;
uint value_mask;
}
struct XResizeRequestEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
int width;
int height;
}
struct XGravityEvent {
int type;
uint serial;
int send_event;
void * display;
uint event;
uint window;
int x;
int y;
}
struct XConfigureEvent {
int type;
uint serial;
int send_event;
void * display;
uint event;
uint window;
int x;
int y;
int width;
int height;
int border_width;
uint above;
int override_redirect;
}
struct XReparentEvent {
int type;
uint serial;
int send_event;
void * display;
uint event;
uint window;
uint parent;
int x;
int y;
int override_redirect;
}
struct XMapRequestEvent {
int type;
uint serial;
int send_event;
void * display;
uint parent;
uint window;
}
struct XMapEvent {
int type;
uint serial;
int send_event;
void * display;
uint event;
uint window;
int override_redirect;
}
struct XUnmapEvent {
int type;
uint serial;
int send_event;
void * display;
uint event;
uint window;
int from_configure;
}
struct XDestroyWindowEvent {
int type;
uint serial;
int send_event;
void * display;
uint event;
uint window;
}
struct XCreateWindowEvent {
int type;
uint serial;
int send_event;
void * display;
uint parent;
uint window;
int x;
int y;
int width;
int height;
int border_width;
int override_redirect;
}
struct XVisibilityEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
int state;
}
struct XNoExposeEvent {
int type;
uint serial;
int send_event;
void * display;
uint drawable;
int major_code;
int minor_code;
}
struct XGraphicsExposeEvent {
int type;
uint serial;
int send_event;
void * display;
uint drawable;
int x;
int y;
int width;
int height;
int count;
int major_code;
int minor_code;
}
struct XExposeEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
int x;
int y;
int width;
int height;
int count;
}
struct XKeymapEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
char [32] key_vector;
}
struct XFocusChangeEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
int mode;
int detail;
}
struct XCrossingEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
uint root;
uint subwindow;
uint time;
int x;
int y;
int x_root;
int y_root;
int mode;
int detail;
int same_screen;
int focus;
uint state;
}
struct XMotionEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
uint root;
uint subwindow;
uint time;
int x;
int y;
int x_root;
int y_root;
uint state;
char is_hint;
int same_screen;
}
struct XButtonEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
uint root;
uint subwindow;
uint time;
int x;
int y;
int x_root;
int y_root;
uint state;
uint button;
int same_screen;
}
struct XKeyEvent {
int type;
uint serial;
int send_event;
void * display;
uint window;
uint root;
uint subwindow;
uint time;
int x;
int y;
int x_root;
int y_root;
uint state;
uint keycode;
int same_screen;
}
struct XModifierKeymap {
int max_keypermod;
char * modifiermap;
}
struct XTimeCoord {
uint time;
short x;
short y;
}
struct XKeyboardState {
int key_click_percent;
int bell_percent;
uint bell_pitch;
uint bell_duration;
uint led_mask;
int global_auto_repeat;
char [32] auto_repeats;
}
struct XKeyboardControl {
int key_click_percent;
int bell_percent;
int bell_pitch;
int bell_duration;
int led;
int led_mode;
int key;
int auto_repeat_mode;
}
struct XArc {
short x;
short y;
ushort width;
ushort height;
short angle1;
short angle2;
}
struct XRectangle {
short x;
short y;
ushort width;
ushort height;
}
struct XPoint {
short x;
short y;
}
struct XSegment {
short x1;
short y1;
short x2;
short y2;
}
struct XColor {
uint pixel;
ushort red;
ushort green;
ushort blue;
char flags;
char pad;
}
struct XWindowChanges {
int x;
int y;
int width;
int height;
int border_width;
uint sibling;
int stack_mode;
}
struct funcs {
_BCD_func__2079 create_image;
_BCD_func__2080 destroy_image;
_BCD_func__2081 get_pixel;
_BCD_func__2082 put_pixel;
_BCD_func__2083 sub_image;
_BCD_func__2084 add_pixel;
}
struct _XImage {
int width;
int height;
int xoffset;
int format;
char * data;
int byte_order;
int bitmap_unit;
int bitmap_bit_order;
int bitmap_pad;
int depth;
int bytes_per_line;
int bits_per_pixel;
uint red_mask;
uint green_mask;
uint blue_mask;
char * obdata;
funcs f;
}
struct XServerInterpretedAddress {
int typelength;
int valuelength;
char * type;
char * value;
}
struct XHostAddress {
int family;
int length;
char * address;
}
struct XWindowAttributes {
int x;
int y;
int width;
int height;
int border_width;
int depth;
Visual * visual;
uint root;
int c_class;
int bit_gravity;
int win_gravity;
int backing_store;
uint backing_planes;
uint backing_pixel;
int save_under;
uint colormap;
int map_installed;
int map_state;
int all_event_masks;
int your_event_mask;
int do_not_propagate_mask;
int override_redirect;
Screen * screen;
}
struct XSetWindowAttributes {
uint background_pixmap;
uint background_pixel;
uint border_pixmap;
uint border_pixel;
int bit_gravity;
int win_gravity;
int backing_store;
uint backing_planes;
uint backing_pixel;
int save_under;
int event_mask;
int do_not_propagate_mask;
int override_redirect;
uint colormap;
uint cursor;
}
struct ScreenFormat {
_XExtData * ext_data;
int depth;
int bits_per_pixel;
int scanline_pad;
}
struct Screen {
_XExtData * ext_data;
void * display;
uint root;
int width;
int height;
int mwidth;
int mheight;
int ndepths;
Depth * depths;
int root_depth;
Visual * root_visual;
void * default_gc;
uint cmap;
uint white_pixel;
uint black_pixel;
int max_maps;
int min_maps;
int backing_store;
int save_unders;
int root_input_mask;
}
struct Depth {
int depth;
int nvisuals;
Visual * visuals;
}
struct Visual {
_XExtData * ext_data;
uint visualid;
int c_class;
uint red_mask;
uint green_mask;
uint blue_mask;
int bits_per_rgb;
int map_entries;
}
struct XGCValues {
int function_;
uint plane_mask;
uint foreground;
uint background;
int line_width;
int line_style;
int cap_style;
int join_style;
int fill_style;
int fill_rule;
int arc_mode;
uint tile;
uint stipple;
int ts_x_origin;
int ts_y_origin;
uint font;
int subwindow_mode;
int graphics_exposures;
int clip_x_origin;
int clip_y_origin;
uint clip_mask;
int dash_offset;
char dashes;
}
struct XPixmapFormatValues {
int depth;
int bits_per_pixel;
int scanline_pad;
}
struct XExtCodes {
int extension;
int major_opcode;
int first_event;
int first_error;
}
struct _XExtData {
int number;
_XExtData * next;
_BCD_func__2059 free_private;
char * private_data;
}
extern (C) extern int _Xdebug;
