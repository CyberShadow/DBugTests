/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/TextEditor.h"
extern "C" {
typedef unsigned char _BCD__12_uchar;
void _BCD_delete_N4fltk10TextEditor11Key_BindingE(fltk::TextEditor::Key_Binding *This) {
delete This;
}
void _BCD_set__ZN4fltk10TextEditor11Key_Binding3keyE(fltk::TextEditor::Key_Binding *This, int x) {
This->key = x;
}
int _BCD_get__ZN4fltk10TextEditor11Key_Binding3keyE(fltk::TextEditor::Key_Binding *This) {
return This->key;
}
void _BCD_set__ZN4fltk10TextEditor11Key_Binding5stateE(fltk::TextEditor::Key_Binding *This, int x) {
This->state = x;
}
int _BCD_get__ZN4fltk10TextEditor11Key_Binding5stateE(fltk::TextEditor::Key_Binding *This) {
return This->state;
}
typedef int (*_BCD_func__1181)(int, fltk::TextEditor *);
void _BCD_set__ZN4fltk10TextEditor11Key_Binding8functionE(fltk::TextEditor::Key_Binding *This, _BCD_func__1181 x) {
This->function = x;
}
_BCD_func__1181 _BCD_get__ZN4fltk10TextEditor11Key_Binding8functionE(fltk::TextEditor::Key_Binding *This) {
return This->function;
}
void _BCD_set__ZN4fltk10TextEditor11Key_Binding4nextE(fltk::TextEditor::Key_Binding *This, fltk::TextEditor::Key_Binding * x) {
This->next = x;
}
fltk::TextEditor::Key_Binding * _BCD_get__ZN4fltk10TextEditor11Key_Binding4nextE(fltk::TextEditor::Key_Binding *This) {
return This->next;
}
}
class Key_Binding_R : fltk::TextEditor::Key_Binding {
public:
void *__D_data;
};
extern "C" {
void _BCD_delete_N4fltk10TextEditor11Key_BindingE__Key_Binding_R(Key_Binding_R *This) {
delete This;
}
void _BCD_RI_N4fltk10TextEditor11Key_BindingE(Key_Binding_R *cd, void *dd) {
cd->__D_data = dd;
}
void _BCD_delete_N4fltk10TextEditorE(fltk::TextEditor *This) {
delete This;
}
void _BCD_set__ZN4fltk10TextEditor13default_styleE(fltk::TextEditor *This, fltk::NamedStyle * x) {
This->default_style = x;
}
fltk::NamedStyle * _BCD_get__ZN4fltk10TextEditor13default_styleE(fltk::TextEditor *This) {
return This->default_style;
}
fltk::TextEditor *_BCD_new__ZN4fltk10TextEditorC1EiiiiPKc(int X, int Y, int W, int H, char const * l) {
return new fltk::TextEditor(X, Y, W, H, l);
}
int _BCD__ZN4fltk10TextEditor6handleEi(fltk::TextEditor *This, int e) {
return (This->handle(e));
}
void _BCD__ZN4fltk10TextEditor11insert_modeEb(fltk::TextEditor *This, bool b) {
(This->insert_mode(b));
}
bool _BCD__ZNK4fltk10TextEditor11insert_modeEv(fltk::TextEditor *This) {
return (This->insert_mode());
}
void _BCD__ZN4fltk10TextEditor15add_key_bindingEiiPFiiPS0_EPPNS0_11Key_BindingE(fltk::TextEditor *This, int key, int state, _BCD_func__1181 f, fltk::TextEditor::Key_Binding * * list) {
(This->add_key_binding(key, state, f, list));
}
void _BCD__ZN4fltk10TextEditor15add_key_bindingEiiPFiiPS0_E(fltk::TextEditor *This, int key, int state, _BCD_func__1181 f) {
(This->add_key_binding(key, state, f));
}
void _BCD__ZN4fltk10TextEditor18remove_key_bindingEiiPPNS0_11Key_BindingE(fltk::TextEditor *This, int key, int state, fltk::TextEditor::Key_Binding * * list) {
(This->remove_key_binding(key, state, list));
}
void _BCD__ZN4fltk10TextEditor18remove_key_bindingEii(fltk::TextEditor *This, int key, int state) {
(This->remove_key_binding(key, state));
}
void _BCD__ZN4fltk10TextEditor23remove_all_key_bindingsEPPNS0_11Key_BindingE(fltk::TextEditor *This, fltk::TextEditor::Key_Binding * * list) {
(This->remove_all_key_bindings(list));
}
void _BCD__ZN4fltk10TextEditor23remove_all_key_bindingsEv(fltk::TextEditor *This) {
(This->remove_all_key_bindings());
}
void _BCD__ZN4fltk10TextEditor24add_default_key_bindingsEPPNS0_11Key_BindingE(fltk::TextEditor *This, fltk::TextEditor::Key_Binding * * list) {
(This->add_default_key_bindings(list));
}
_BCD_func__1181 _BCD__ZN4fltk10TextEditor18bound_key_functionEiiPNS0_11Key_BindingE(fltk::TextEditor *This, int key, int state, fltk::TextEditor::Key_Binding * list) {
return (This->bound_key_function(key, state, list));
}
_BCD_func__1181 _BCD__ZN4fltk10TextEditor18bound_key_functionEii(fltk::TextEditor *This, int key, int state) {
return (This->bound_key_function(key, state));
}
void _BCD__ZN4fltk10TextEditor20default_key_functionEPFiiPS0_E(fltk::TextEditor *This, _BCD_func__1181 f) {
(This->default_key_function(f));
}
int _BCD__ZN4fltk10TextEditor10kf_defaultEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_default(c, e));
}
int _BCD__ZN4fltk10TextEditor9kf_ignoreEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_ignore(c, e));
}
int _BCD__ZN4fltk10TextEditor12kf_backspaceEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_backspace(c, e));
}
int _BCD__ZN4fltk10TextEditor8kf_enterEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_enter(c, e));
}
int _BCD__ZN4fltk10TextEditor7kf_moveEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_move(c, e));
}
int _BCD__ZN4fltk10TextEditor13kf_shift_moveEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_shift_move(c, e));
}
int _BCD__ZN4fltk10TextEditor12kf_ctrl_moveEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_ctrl_move(c, e));
}
int _BCD__ZN4fltk10TextEditor11kf_c_s_moveEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_c_s_move(c, e));
}
int _BCD__ZN4fltk10TextEditor7kf_homeEiPS0_(int _0, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_home(_0, e));
}
int _BCD__ZN4fltk10TextEditor6kf_endEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_end(c, e));
}
int _BCD__ZN4fltk10TextEditor7kf_leftEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_left(c, e));
}
int _BCD__ZN4fltk10TextEditor5kf_upEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_up(c, e));
}
int _BCD__ZN4fltk10TextEditor8kf_rightEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_right(c, e));
}
int _BCD__ZN4fltk10TextEditor7kf_downEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_down(c, e));
}
int _BCD__ZN4fltk10TextEditor10kf_page_upEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_page_up(c, e));
}
int _BCD__ZN4fltk10TextEditor12kf_page_downEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_page_down(c, e));
}
int _BCD__ZN4fltk10TextEditor9kf_insertEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_insert(c, e));
}
int _BCD__ZN4fltk10TextEditor9kf_deleteEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_delete(c, e));
}
int _BCD__ZN4fltk10TextEditor7kf_copyEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_copy(c, e));
}
int _BCD__ZN4fltk10TextEditor6kf_cutEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_cut(c, e));
}
int _BCD__ZN4fltk10TextEditor8kf_pasteEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_paste(c, e));
}
int _BCD__ZN4fltk10TextEditor13kf_select_allEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_select_all(c, e));
}
int _BCD__ZN4fltk10TextEditor7kf_undoEiPS0_(int c, fltk::TextEditor * e) {
return (fltk::TextEditor::kf_undo(c, e));
}
int _BCD_R__ZN4fltk10TextEditor6handleEi__TextEditor_R_CHECK(void *);
int _BCD_R__ZN4fltk10TextEditor6handleEi__TextEditor_R(void *, int e);
}
class TextEditor_R : fltk::TextEditor {
public:
void *__D_data;
TextEditor_R(int X, int Y, int W, int H, char const * l) : fltk::TextEditor(X, Y, W, H, l) {}
int handle(int e) {
if (_BCD_R__ZN4fltk10TextEditor6handleEi__TextEditor_R_CHECK(__D_data))
return _BCD_R__ZN4fltk10TextEditor6handleEi__TextEditor_R(__D_data, e);
else
return fltk::TextEditor::handle(e);
}
};
extern "C" {
TextEditor_R *_BCD_new__ZN4fltk10TextEditorC1EiiiiPKc_R(int X, int Y, int W, int H, char const * l) {
return new TextEditor_R(X, Y, W, H, l);
}
void _BCD_delete_N4fltk10TextEditorE__TextEditor_R(TextEditor_R *This) {
delete This;
}
void _BCD_RI_N4fltk10TextEditorE(TextEditor_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__577)(int, void *);
typedef _BCD_func__577 _BCD__158_UnfinishedStyleCb;
typedef void (*_BCD_func__693)(int, int, void *);
typedef _BCD_func__693 _BCD__165_Text_Predelete_Cb;
typedef void (*_BCD_func__694)(int, int, int, int, char const *, void *);
typedef _BCD_func__694 _BCD__167_Text_Modify_Cb;
typedef void (*_BCD_func__174)(fltk::Widget *, long int);
typedef _BCD_func__174 _BCD__175_Callback1;
typedef void (*_BCD_func__176)(fltk::Widget *);
typedef _BCD_func__176 _BCD__177_Callback0;
typedef void (*_BCD_func__180)(fltk::Widget *, void *);
typedef _BCD_func__180 _BCD__181_Callback;
typedef _BCD__181_Callback _BCD__179_Callback_p;
typedef bool (*_BCD_func__835)();
typedef _BCD_func__835 _BCD__192_Theme;
typedef fltk::Symbol * _BCD__243_Box;
typedef _BCD__12_uchar const * (*_BCD_func__1037)(void *, int, int, int, _BCD__12_uchar *);
typedef _BCD_func__1037 _BCD__254_DrawImageCallback;
typedef unsigned int _BCD__366_Color;
typedef int _BCD__369_Flags;
typedef _BCD__369_Flags _BCD__368_Align;
typedef _BCD_func__1181 _BCD__383_Key_Func;
}
