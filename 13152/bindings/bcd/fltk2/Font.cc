/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/Font.h"
extern "C" {
typedef unsigned char _BCD__5_uchar;
void _BCD_delete_N4fltk4FontE(fltk::Font *This) {
delete This;
}
void _BCD_set__ZN4fltk4Font5name_E(fltk::Font *This, char const * x) {
This->name_ = x;
}
char const * _BCD_get__ZN4fltk4Font5name_E(fltk::Font *This) {
return This->name_;
}
void _BCD_set__ZN4fltk4Font11attributes_E(fltk::Font *This, int x) {
This->attributes_ = x;
}
int _BCD_get__ZN4fltk4Font11attributes_E(fltk::Font *This) {
return This->attributes_;
}
char const * _BCD__ZNK4fltk4Font4nameEv(fltk::Font *This) {
return (This->name());
}
char const * _BCD__ZN4fltk4Font4nameEPi(fltk::Font *This, int * p) {
return (This->name(p));
}
fltk::Font * _BCD__ZN4fltk4Font4plusEi(fltk::Font *This, int attributes) {
return (This->plus(attributes));
}
fltk::Font * _BCD__ZN4fltk4Font4boldEv(fltk::Font *This) {
return (This->bold());
}
fltk::Font * _BCD__ZN4fltk4Font6italicEv(fltk::Font *This) {
return (This->italic());
}
int _BCD__ZN4fltk4Font5sizesERPi(fltk::Font *This, int * & _0) {
return (This->sizes(_0));
}
int _BCD__ZN4fltk4Font9encodingsERPPKc(fltk::Font *This, char const * * & _0) {
return (This->encodings(_0));
}
char const * _BCD__ZN4fltk4Font11system_nameEv(fltk::Font *This) {
return (This->system_name());
}
char const * _BCD__ZN4fltk4Font12current_nameEv() {
return (fltk::Font::current_name());
}
}
class Font_R : fltk::Font {
public:
void *__D_data;
};
extern "C" {
void _BCD_delete_N4fltk4FontE__Font_R(Font_R *This) {
delete This;
}
void _BCD_RI_N4fltk4FontE(Font_R *cd, void *dd) {
cd->__D_data = dd;
}
int _BCD__ZN4fltk10list_fontsERPPNS_4FontE(fltk::Font * * & arrayp) {
return (fltk::list_fonts(arrayp));
}
fltk::Font * _BCD__ZN4fltk4fontEi(int _0) {
return (fltk::font(_0));
}
fltk::Font * _BCD__ZN4fltk4fontEPKci(char const * name, int attrib) {
return (fltk::font(name, attrib));
}
typedef bool (*_BCD_func__234)();
typedef _BCD_func__234 _BCD__155_Theme;
typedef fltk::Symbol * _BCD__208_Box;
typedef unsigned int _BCD__225_Color;
typedef int _BCD__228_Flags;
typedef _BCD__228_Flags _BCD__227_Align;
}
