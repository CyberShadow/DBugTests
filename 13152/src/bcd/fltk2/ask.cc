/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/ask.h"
extern "C" {
typedef unsigned char _BCD__5_uchar;
void _BCD_set__ZN4fltk6cancelE(char const * x) {
fltk::cancel = x;
}
char const * _BCD_get__ZN4fltk6cancelE() {
return fltk::cancel;
}
void _BCD_set__ZN4fltk2okE(char const * x) {
fltk::ok = x;
}
char const * _BCD_get__ZN4fltk2okE() {
return fltk::ok;
}
void _BCD_set__ZN4fltk3yesE(char const * x) {
fltk::yes = x;
}
char const * _BCD_get__ZN4fltk3yesE() {
return fltk::yes;
}
void _BCD_set__ZN4fltk2noE(char const * x) {
fltk::no = x;
}
char const * _BCD_get__ZN4fltk2noE() {
return fltk::no;
}
void _BCD_set__ZN4fltk25message_window_scrollableE(bool x) {
fltk::message_window_scrollable = x;
}
bool _BCD_get__ZN4fltk25message_window_scrollableE() {
return fltk::message_window_scrollable;
}
void _BCD_set__ZN4fltk22message_window_timeoutE(float x) {
fltk::message_window_timeout = x;
}
float _BCD_get__ZN4fltk22message_window_timeoutE() {
return fltk::message_window_timeout;
}
void _BCD_set__ZN4fltk20message_window_labelE(char const * x) {
fltk::message_window_label = x;
}
char const * _BCD_get__ZN4fltk20message_window_labelE() {
return fltk::message_window_label;
}
void _BCD_set__ZN4fltk13message_styleE(fltk::NamedStyle * x) {
fltk::message_style = x;
}
fltk::NamedStyle * _BCD_get__ZN4fltk13message_styleE() {
return fltk::message_style;
}
void _BCD_set__ZN4fltk10icon_styleE(fltk::NamedStyle * x) {
fltk::icon_style = x;
}
fltk::NamedStyle * _BCD_get__ZN4fltk10icon_styleE() {
return fltk::icon_style;
}
bool _BCD__ZN4fltk14beep_on_dialogEv() {
return (fltk::beep_on_dialog());
}
void _BCD__ZN4fltk14beep_on_dialogEb(bool _0) {
(fltk::beep_on_dialog(_0));
}
void _BCD__ZN4fltk4beepEi(int type) {
(fltk::beep(type));
}
char const * _BCD__ZN4fltk8passwordEPKcS1_z(char const * label, char const * deflt) {
return (fltk::password(label, deflt));
}
char const * _BCD__ZN4fltk5inputEPKcS1_z(char const * label, char const * deflt) {
return (fltk::input(label, deflt));
}
int _BCD__ZN4fltk12choice_alertEPKcS1_S1_S1_z(char const * q, char const * b0, char const * b1, char const * b2) {
return (fltk::choice_alert(q, b0, b1, b2));
}
int _BCD__ZN4fltk6choiceEPKcS1_S1_S1_z(char const * q, char const * b0, char const * b1, char const * b2) {
return (fltk::choice(q, b0, b1, b2));
}
int _BCD__ZN4fltk3askEPKcz(char const * _0) {
return (fltk::ask(_0));
}
void _BCD__ZN4fltk5alertEPKcz(char const * _0) {
(fltk::alert(_0));
}
void _BCD__ZN4fltk7messageEPKcz(char const * _0) {
(fltk::message(_0));
}
typedef bool (*_BCD_func__249)();
typedef _BCD_func__249 _BCD__171_Theme;
typedef fltk::Symbol * _BCD__224_Box;
typedef unsigned int _BCD__241_Color;
typedef int _BCD__244_Flags;
typedef _BCD__244_Flags _BCD__243_Align;
}
