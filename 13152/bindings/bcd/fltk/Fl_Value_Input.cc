/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "FL/Fl_Value_Input.H"
extern "C" {
void _BCD_delete_14Fl_Value_Input(Fl_Value_Input *This) {
delete This;
}
void _BCD_set__ZN14Fl_Value_Input5inputE(Fl_Value_Input *This, Fl_Input * x) {
memcpy(&This->input, x, sizeof(Fl_Input));
}
Fl_Input * _BCD_get__ZN14Fl_Value_Input5inputE(Fl_Value_Input *This) {
return &This->input;
}
int _BCD__ZN14Fl_Value_Input6handleEi(Fl_Value_Input *This, int _0) {
return (This->handle(_0));
}
void _BCD__ZN14Fl_Value_Input4drawEv(Fl_Value_Input *This) {
(This->draw());
}
void _BCD__ZN14Fl_Value_Input6resizeEiiii(Fl_Value_Input *This, int _0, int _1, int _2, int _3) {
(This->resize(_0, _1, _2, _3));
}
Fl_Value_Input *_BCD_new__ZN14Fl_Value_InputC1EiiiiPKc(int x, int y, int w, int h, char const * l) {
return new Fl_Value_Input(x, y, w, h, l);
}
void _BCD__ZN14Fl_Value_Input4softEc(Fl_Value_Input *This, char s) {
(This->soft(s));
}
char _BCD__ZNK14Fl_Value_Input4softEv(Fl_Value_Input *This) {
return (This->soft());
}
enum Fl_Font _BCD__ZNK14Fl_Value_Input8textfontEv(Fl_Value_Input *This) {
return (This->textfont());
}
typedef unsigned char _BCD__62_uchar;
void _BCD__ZN14Fl_Value_Input8textfontEh(Fl_Value_Input *This, _BCD__62_uchar s) {
(This->textfont(s));
}
_BCD__62_uchar _BCD__ZNK14Fl_Value_Input8textsizeEv(Fl_Value_Input *This) {
return (This->textsize());
}
void _BCD__ZN14Fl_Value_Input8textsizeEh(Fl_Value_Input *This, _BCD__62_uchar s) {
(This->textsize(s));
}
enum Fl_Color _BCD__ZNK14Fl_Value_Input9textcolorEv(Fl_Value_Input *This) {
return (This->textcolor());
}
void _BCD__ZN14Fl_Value_Input9textcolorEj(Fl_Value_Input *This, unsigned int n) {
(This->textcolor(n));
}
enum Fl_Color _BCD__ZNK14Fl_Value_Input12cursor_colorEv(Fl_Value_Input *This) {
return (This->cursor_color());
}
void _BCD__ZN14Fl_Value_Input12cursor_colorEj(Fl_Value_Input *This, unsigned int n) {
(This->cursor_color(n));
}
int _BCD_R__ZN14Fl_Value_Input6handleEi__Fl_Value_Input_R_CHECK(void *);
int _BCD_R__ZN14Fl_Value_Input6handleEi__Fl_Value_Input_R(void *, int _0);
int _BCD_R__ZN14Fl_Value_Input4drawEv__Fl_Value_Input_R_CHECK(void *);
void _BCD_R__ZN14Fl_Value_Input4drawEv__Fl_Value_Input_R(void *);
int _BCD_R__ZN14Fl_Value_Input6resizeEiiii__Fl_Value_Input_R_CHECK(void *);
void _BCD_R__ZN14Fl_Value_Input6resizeEiiii__Fl_Value_Input_R(void *, int _0, int _1, int _2, int _3);
}
class Fl_Value_Input_R : Fl_Value_Input {
public:
void *__D_data;
int handle(int _0) {
if (_BCD_R__ZN14Fl_Value_Input6handleEi__Fl_Value_Input_R_CHECK(__D_data))
return _BCD_R__ZN14Fl_Value_Input6handleEi__Fl_Value_Input_R(__D_data, _0);
else
return Fl_Value_Input::handle(_0);
}
void draw() {
if (_BCD_R__ZN14Fl_Value_Input4drawEv__Fl_Value_Input_R_CHECK(__D_data))
_BCD_R__ZN14Fl_Value_Input4drawEv__Fl_Value_Input_R(__D_data);
else
Fl_Value_Input::draw();
}
void resize(int _0, int _1, int _2, int _3) {
if (_BCD_R__ZN14Fl_Value_Input6resizeEiiii__Fl_Value_Input_R_CHECK(__D_data))
_BCD_R__ZN14Fl_Value_Input6resizeEiiii__Fl_Value_Input_R(__D_data, _0, _1, _2, _3);
else
Fl_Value_Input::resize(_0, _1, _2, _3);
}
Fl_Value_Input_R(int x, int y, int w, int h, char const * l) : Fl_Value_Input(x, y, w, h, l) {}
};
extern "C" {
Fl_Value_Input_R *_BCD_new__ZN14Fl_Value_InputC1EiiiiPKc_R(int x, int y, int w, int h, char const * l) {
return new Fl_Value_Input_R(x, y, w, h, l);
}
void _BCD_delete_14Fl_Value_Input__Fl_Value_Input_R(Fl_Value_Input_R *This) {
delete This;
}
void _BCD_RI_14Fl_Value_Input(Fl_Value_Input_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__13)(Fl_Widget *, long int);
typedef _BCD_func__13 _BCD__14_Fl_Callback1;
typedef void (*_BCD_func__15)(Fl_Widget *);
typedef _BCD_func__15 _BCD__16_Fl_Callback0;
typedef void (*_BCD_func__19)(Fl_Widget *, void *);
typedef _BCD_func__19 _BCD__20_Fl_Callback;
typedef _BCD__20_Fl_Callback _BCD__18_Fl_Callback_p;
typedef long unsigned int _BCD__60_ulong;
}
