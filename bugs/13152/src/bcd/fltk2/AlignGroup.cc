/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/AlignGroup.h"
extern "C" {
typedef unsigned char _BCD__8_uchar;
void _BCD_delete_N4fltk10AlignGroupE(fltk::AlignGroup *This) {
delete This;
}
void _BCD__ZN4fltk10AlignGroup6layoutEv(fltk::AlignGroup *This) {
(This->layout());
}
typedef int _BCD__245_Flags;
fltk::AlignGroup *_BCD_new__ZN4fltk10AlignGroupC1EiiiiPKchbihh(int X, int Y, int W, int H, char const * L, _BCD__8_uchar n_to_break, bool vertical, _BCD__245_Flags align_, _BCD__8_uchar dw, _BCD__8_uchar dh) {
return new fltk::AlignGroup(X, Y, W, H, L, n_to_break, vertical, align_, dw, dh);
}
bool _BCD__ZNK4fltk10AlignGroup8verticalEv(fltk::AlignGroup *This) {
return (This->vertical());
}
void _BCD__ZN4fltk10AlignGroup8verticalEb(fltk::AlignGroup *This, bool v) {
(This->vertical(v));
}
_BCD__8_uchar _BCD__ZNK4fltk10AlignGroup10n_to_breakEv(fltk::AlignGroup *This) {
return (This->n_to_break());
}
void _BCD__ZN4fltk10AlignGroup10n_to_breakEh(fltk::AlignGroup *This, _BCD__8_uchar n) {
(This->n_to_break(n));
}
_BCD__8_uchar _BCD__ZNK4fltk10AlignGroup2dwEv(fltk::AlignGroup *This) {
return (This->dw());
}
void _BCD__ZN4fltk10AlignGroup2dwEh(fltk::AlignGroup *This, _BCD__8_uchar d) {
(This->dw(d));
}
_BCD__8_uchar _BCD__ZNK4fltk10AlignGroup2dhEv(fltk::AlignGroup *This) {
return (This->dh());
}
void _BCD__ZN4fltk10AlignGroup2dhEh(fltk::AlignGroup *This, _BCD__8_uchar d) {
(This->dh(d));
}
_BCD__245_Flags _BCD__ZNK4fltk10AlignGroup5alignEv(fltk::AlignGroup *This) {
return (This->align());
}
void _BCD__ZN4fltk10AlignGroup5alignEi(fltk::AlignGroup *This, _BCD__245_Flags a) {
(This->align(a));
}
int _BCD_R__ZN4fltk10AlignGroup6layoutEv__AlignGroup_R_CHECK(void *);
void _BCD_R__ZN4fltk10AlignGroup6layoutEv__AlignGroup_R(void *);
}
class AlignGroup_R : fltk::AlignGroup {
public:
void *__D_data;
void layout() {
if (_BCD_R__ZN4fltk10AlignGroup6layoutEv__AlignGroup_R_CHECK(__D_data))
_BCD_R__ZN4fltk10AlignGroup6layoutEv__AlignGroup_R(__D_data);
else
fltk::AlignGroup::layout();
}
AlignGroup_R(int X, int Y, int W, int H, char const * L, _BCD__8_uchar n_to_break, bool vertical, _BCD__245_Flags align_, _BCD__8_uchar dw, _BCD__8_uchar dh) : fltk::AlignGroup(X, Y, W, H, L, n_to_break, vertical, align_, dw, dh) {}
};
extern "C" {
AlignGroup_R *_BCD_new__ZN4fltk10AlignGroupC1EiiiiPKchbihh_R(int X, int Y, int W, int H, char const * L, _BCD__8_uchar n_to_break, bool vertical, _BCD__245_Flags align_, _BCD__8_uchar dw, _BCD__8_uchar dh) {
return new AlignGroup_R(X, Y, W, H, L, n_to_break, vertical, align_, dw, dh);
}
void _BCD_delete_N4fltk10AlignGroupE__AlignGroup_R(AlignGroup_R *This) {
delete This;
}
void _BCD_RI_N4fltk10AlignGroupE(AlignGroup_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__154)(fltk::Widget *, long int);
typedef _BCD_func__154 _BCD__155_Callback1;
typedef void (*_BCD_func__156)(fltk::Widget *);
typedef _BCD_func__156 _BCD__157_Callback0;
typedef void (*_BCD_func__160)(fltk::Widget *, void *);
typedef _BCD_func__160 _BCD__161_Callback;
typedef _BCD__161_Callback _BCD__159_Callback_p;
typedef bool (*_BCD_func__325)();
typedef _BCD_func__325 _BCD__172_Theme;
typedef fltk::Symbol * _BCD__225_Box;
typedef unsigned int _BCD__242_Color;
typedef _BCD__245_Flags _BCD__244_Align;
}
