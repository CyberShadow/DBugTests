/* THIS FILE GENERATED BY bcd.gen */
module bcd.fltk2.Valuator;
align(4):
public import bcd.bind;
public import bcd.fltk2.Widget;
public import bcd.fltk2.Style;
public import bcd.fltk2.FL_API;
public import bcd.fltk2.Rectangle;
public import bcd.fltk2.Color;
public import bcd.fltk2.Flags;
extern (C) void _BCD_delete_N4fltk8ValuatorE(void *);
extern (C) double _BCD__ZNK4fltk8Valuator5valueEv(void *This);
extern (C) bool _BCD__ZN4fltk8Valuator5valueEd(void *This, double);
extern (C) double _BCD__ZNK4fltk8Valuator7minimumEv(void *This);
extern (C) void _BCD__ZN4fltk8Valuator7minimumEd(void *This, double);
extern (C) double _BCD__ZNK4fltk8Valuator7maximumEv(void *This);
extern (C) void _BCD__ZN4fltk8Valuator7maximumEd(void *This, double);
extern (C) void _BCD__ZN4fltk8Valuator5rangeEdd(void *This, double, double);
extern (C) double _BCD__ZNK4fltk8Valuator4stepEv(void *This);
extern (C) void _BCD__ZN4fltk8Valuator4stepEd(void *This, double);
extern (C) double _BCD__ZNK4fltk8Valuator8linesizeEv(void *This);
extern (C) void _BCD__ZN4fltk8Valuator8linesizeEd(void *This, double);
extern (C) double _BCD__ZNK4fltk8Valuator16linesize_settingEv(void *This);
extern (C) int _BCD__ZN4fltk8Valuator6formatEPc(void *This, char *);
extern (C) int _BCD__ZN4fltk8Valuator6handleEi(void *This, int);
extern (C) void *_BCD_new__ZN4fltk8ValuatorC1EiiiiPKc(int, int, int, int, char *);
extern (C) double _BCD__ZNK4fltk8Valuator14previous_valueEv(void *This);
extern (C) void _BCD__ZN4fltk8Valuator11handle_pushEv(void *This);
extern (C) void _BCD__ZN4fltk8Valuator11handle_dragEd(void *This, double);
extern (C) void _BCD__ZN4fltk8Valuator14handle_releaseEv(void *This);
extern (C) void _BCD__ZN4fltk8Valuator12value_damageEv(void *This);
extern (C) void _BCD__ZN4fltk8Valuator9set_valueEd(void *This, double);
extern (C) void _BCD_RI_N4fltk8ValuatorE(void *cd, void *dd);
extern (C) void _BCD_delete_N4fltk8ValuatorE__Valuator_R(void *This);
extern (C) int _BCD_R__ZN4fltk8Valuator6formatEPc__Valuator_R_CHECK(Valuator_R x) {
union dp {
int delegate(char *) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.format;
return cast(int) (d.f != &Valuator.format);
}
extern (C) int _BCD_R__ZN4fltk8Valuator6formatEPc__Valuator_R(Valuator_R __D_class, char * _0) {
return __D_class.format(_0);
}
extern (C) int _BCD_R__ZN4fltk8Valuator6handleEi__Valuator_R_CHECK(Valuator_R x) {
union dp {
int delegate(int) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.handle;
return cast(int) (d.f != &Valuator.handle);
}
extern (C) int _BCD_R__ZN4fltk8Valuator6handleEi__Valuator_R(Valuator_R __D_class, int _0) {
return __D_class.handle(_0);
}
extern (C) void *_BCD_new__ZN4fltk8ValuatorC1EiiiiPKc_R(int, int, int, int, char *);
extern (C) int _BCD_R__ZN4fltk8Valuator12value_damageEv__Valuator_R_CHECK(Valuator_R x) {
union dp {
void delegate() d;
struct { void *o; void *f; }
}
dp d; d.d = &x.value_damage;
return cast(int) (d.f != &Valuator.value_damage);
}
extern (C) void _BCD_R__ZN4fltk8Valuator12value_damageEv__Valuator_R(Valuator_R __D_class, ) {
__D_class.value_damage();
}
alias void function(Widget *, int) _BCD_func__152;
alias void function(Widget *) _BCD_func__154;
alias void function(Widget *, void *) _BCD_func__158;
alias bool function() _BCD_func__281;
class Valuator : Widget {
this(ifloat ignore) {
super(ignore);
}
this(ifloat ignore, void *x) {
super(ignore);
__C_data = x;
__C_data_owned = false;
}
~this() {
if (__C_data && __C_data_owned) _BCD_delete_N4fltk8ValuatorE(__C_data);
__C_data = null;
}
double value() {
return _BCD__ZNK4fltk8Valuator5valueEv(__C_data);
}
bool value(double _0) {
return _BCD__ZN4fltk8Valuator5valueEd(__C_data, _0);
}
double minimum() {
return _BCD__ZNK4fltk8Valuator7minimumEv(__C_data);
}
void minimum(double a) {
_BCD__ZN4fltk8Valuator7minimumEd(__C_data, a);
}
double maximum() {
return _BCD__ZNK4fltk8Valuator7maximumEv(__C_data);
}
void maximum(double a) {
_BCD__ZN4fltk8Valuator7maximumEd(__C_data, a);
}
void range(double a, double b) {
_BCD__ZN4fltk8Valuator5rangeEdd(__C_data, a, b);
}
double step() {
return _BCD__ZNK4fltk8Valuator4stepEv(__C_data);
}
void step(double a) {
_BCD__ZN4fltk8Valuator4stepEd(__C_data, a);
}
double linesize() {
return _BCD__ZNK4fltk8Valuator8linesizeEv(__C_data);
}
void linesize(double a) {
_BCD__ZN4fltk8Valuator8linesizeEd(__C_data, a);
}
double linesize_setting() {
return _BCD__ZNK4fltk8Valuator16linesize_settingEv(__C_data);
}
int format(char * _0) {
return _BCD__ZN4fltk8Valuator6formatEPc(__C_data, _0);
}
int handle(int _0) {
return _BCD__ZN4fltk8Valuator6handleEi(__C_data, _0);
}
this(int X, int Y, int W, int H, char * L) {
super(cast(ifloat) 0);
__C_data = _BCD_new__ZN4fltk8ValuatorC1EiiiiPKc(X, Y, W, H, L);
__C_data_owned = true;
}
double previous_value() {
return _BCD__ZNK4fltk8Valuator14previous_valueEv(__C_data);
}
void handle_push() {
_BCD__ZN4fltk8Valuator11handle_pushEv(__C_data);
}
void handle_drag(double newvalue) {
_BCD__ZN4fltk8Valuator11handle_dragEd(__C_data, newvalue);
}
void handle_release() {
_BCD__ZN4fltk8Valuator14handle_releaseEv(__C_data);
}
void value_damage() {
_BCD__ZN4fltk8Valuator12value_damageEv(__C_data);
}
void set_value(double v) {
_BCD__ZN4fltk8Valuator9set_valueEd(__C_data, v);
}
}
class Valuator_R : Valuator {
~this() {
if (__C_data && __C_data_owned) _BCD_delete_N4fltk8ValuatorE__Valuator_R(__C_data);
__C_data = null;
}
this(int X, int Y, int W, int H, char * L) {
super(cast(ifloat) 0);
__C_data = _BCD_new__ZN4fltk8ValuatorC1EiiiiPKc_R(X, Y, W, H, L);
__C_data_owned = true;
_BCD_RI_N4fltk8ValuatorE(__C_data, cast(void *) this);
}
}
