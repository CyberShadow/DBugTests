/* THIS FILE GENERATED BY bcd.gen */
module bcd.fltk.Fl_Pixmap;
public import bcd.bind;
public import bcd.fltk.Fl_Image;
public import bcd.fltk.Enumerations;
extern (C) void _BCD_delete_9Fl_Pixmap(void *);
extern (C) void _BCD_set__ZN9Fl_Pixmap10alloc_dataE(void *, int);
extern (C) int _BCD_get__ZN9Fl_Pixmap10alloc_dataE(void *);
extern (C) void _BCD_set__ZN9Fl_Pixmap2idE(void *, uint);
extern (C) uint _BCD_get__ZN9Fl_Pixmap2idE(void *);
extern (C) void _BCD_set__ZN9Fl_Pixmap4maskE(void *, uint);
extern (C) uint _BCD_get__ZN9Fl_Pixmap4maskE(void *);
extern (C) void *_BCD_new__ZN9Fl_PixmapC1EPKPc(char * *);
extern (C) Fl_Image * _BCD__ZN9Fl_Pixmap4copyEii(void *This, int, int);
extern (C) Fl_Image * _BCD__ZN9Fl_Pixmap4copyEv(void *This);
extern (C) void _BCD__ZN9Fl_Pixmap13color_averageE8Fl_Colorf(void *This, int, float);
extern (C) void _BCD__ZN9Fl_Pixmap10desaturateEv(void *This);
extern (C) void _BCD__ZN9Fl_Pixmap4drawEiiiiii(void *This, int, int, int, int, int, int);
extern (C) void _BCD__ZN9Fl_Pixmap4drawEii(void *This, int, int);
extern (C) void _BCD__ZN9Fl_Pixmap5labelEP9Fl_Widget(void *This, void *);
extern (C) void _BCD__ZN9Fl_Pixmap7uncacheEv(void *This);
extern (C) void _BCD_RI_9Fl_Pixmap(void *cd, void *dd);
extern (C) void _BCD_delete_9Fl_Pixmap__Fl_Pixmap_R(void *This);
extern (C) void *_BCD_new__ZN9Fl_PixmapC1EPKPc_R(char * *);
extern (C) int _BCD_R__ZN9Fl_Pixmap4copyEii__Fl_Pixmap_R_CHECK(Fl_Pixmap_R x) {
union dp {
Fl_Image * delegate(int, int) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.copy;
return cast(int) (d.f != &Fl_Pixmap.copy);
}
extern (C) Fl_Image * _BCD_R__ZN9Fl_Pixmap4copyEii__Fl_Pixmap_R(Fl_Pixmap_R __D_class, int W, int H) {
return __D_class.copy(W, H);
}
extern (C) int _BCD_R__ZN9Fl_Pixmap13color_averageE8Fl_Colorf__Fl_Pixmap_R_CHECK(Fl_Pixmap_R x) {
union dp {
void delegate(int, float) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.color_average;
return cast(int) (d.f != &Fl_Pixmap.color_average);
}
extern (C) void _BCD_R__ZN9Fl_Pixmap13color_averageE8Fl_Colorf__Fl_Pixmap_R(Fl_Pixmap_R __D_class, int c, float i) {
__D_class.color_average(c, i);
}
extern (C) int _BCD_R__ZN9Fl_Pixmap10desaturateEv__Fl_Pixmap_R_CHECK(Fl_Pixmap_R x) {
union dp {
void delegate() d;
struct { void *o; void *f; }
}
dp d; d.d = &x.desaturate;
return cast(int) (d.f != &Fl_Pixmap.desaturate);
}
extern (C) void _BCD_R__ZN9Fl_Pixmap10desaturateEv__Fl_Pixmap_R(Fl_Pixmap_R __D_class, ) {
__D_class.desaturate();
}
extern (C) int _BCD_R__ZN9Fl_Pixmap4drawEiiiiii__Fl_Pixmap_R_CHECK(Fl_Pixmap_R x) {
union dp {
void delegate(int, int, int, int, int, int) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.draw;
return cast(int) (d.f != &Fl_Pixmap.draw);
}
extern (C) void _BCD_R__ZN9Fl_Pixmap4drawEiiiiii__Fl_Pixmap_R(Fl_Pixmap_R __D_class, int X, int Y, int W, int H, int cx, int cy) {
__D_class.draw(X, Y, W, H, cx, cy);
}
extern (C) int _BCD_R__ZN9Fl_Pixmap5labelEP9Fl_Widget__Fl_Pixmap_R_CHECK(Fl_Pixmap_R x) {
union dp {
void delegate(bcd.bind.BoundClass *) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.label;
return cast(int) (d.f != &Fl_Pixmap.label);
}
extern (C) void _BCD_R__ZN9Fl_Pixmap5labelEP9Fl_Widget__Fl_Pixmap_R(Fl_Pixmap_R __D_class, void *w) {
__D_class.label(cast(bcd.bind.BoundClass *) new bcd.bind.BoundClass(cast(ifloat) 0, w));
}
extern (C) int _BCD_R__ZN9Fl_Pixmap7uncacheEv__Fl_Pixmap_R_CHECK(Fl_Pixmap_R x) {
union dp {
void delegate() d;
struct { void *o; void *f; }
}
dp d; d.d = &x.uncache;
return cast(int) (d.f != &Fl_Pixmap.uncache);
}
extern (C) void _BCD_R__ZN9Fl_Pixmap7uncacheEv__Fl_Pixmap_R(Fl_Pixmap_R __D_class, ) {
__D_class.uncache();
}
class Fl_Pixmap : Fl_Image {
this(ifloat ignore) {
super(ignore);
}
this(ifloat ignore, void *x) {
super(ignore);
__C_data = x;
__C_data_owned = false;
}
~this() {
if (__C_data && __C_data_owned) _BCD_delete_9Fl_Pixmap(__C_data);
__C_data = null;
}
void set_alloc_data(int x) {
_BCD_set__ZN9Fl_Pixmap10alloc_dataE(__C_data, x);
}
int get_alloc_data() {
return _BCD_get__ZN9Fl_Pixmap10alloc_dataE(__C_data);
}
void set_id(uint x) {
_BCD_set__ZN9Fl_Pixmap2idE(__C_data, x);
}
uint get_id() {
return _BCD_get__ZN9Fl_Pixmap2idE(__C_data);
}
void set_mask(uint x) {
_BCD_set__ZN9Fl_Pixmap4maskE(__C_data, x);
}
uint get_mask() {
return _BCD_get__ZN9Fl_Pixmap4maskE(__C_data);
}
this(char * * D) {
super(cast(ifloat) 0);
__C_data = _BCD_new__ZN9Fl_PixmapC1EPKPc(D);
__C_data_owned = true;
}
Fl_Image * copy(int W, int H) {
return _BCD__ZN9Fl_Pixmap4copyEii(__C_data, W, H);
}
Fl_Image * copy() {
return _BCD__ZN9Fl_Pixmap4copyEv(__C_data);
}
void color_average(int c, float i) {
_BCD__ZN9Fl_Pixmap13color_averageE8Fl_Colorf(__C_data, c, i);
}
void desaturate() {
_BCD__ZN9Fl_Pixmap10desaturateEv(__C_data);
}
void draw(int X, int Y, int W, int H, int cx, int cy) {
_BCD__ZN9Fl_Pixmap4drawEiiiiii(__C_data, X, Y, W, H, cx, cy);
}
void draw(int X, int Y) {
_BCD__ZN9Fl_Pixmap4drawEii(__C_data, X, Y);
}
void label(bcd.bind.BoundClass * w) {
_BCD__ZN9Fl_Pixmap5labelEP9Fl_Widget(__C_data, w.__C_data);
}
void uncache() {
_BCD__ZN9Fl_Pixmap7uncacheEv(__C_data);
}
}
class Fl_Pixmap_R : Fl_Pixmap {
~this() {
if (__C_data && __C_data_owned) _BCD_delete_9Fl_Pixmap__Fl_Pixmap_R(__C_data);
__C_data = null;
}
this(char * * D) {
super(cast(ifloat) 0);
__C_data = _BCD_new__ZN9Fl_PixmapC1EPKPc_R(D);
__C_data_owned = true;
_BCD_RI_9Fl_Pixmap(__C_data, cast(void *) this);
}
}
