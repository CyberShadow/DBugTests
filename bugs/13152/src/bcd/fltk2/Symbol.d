/* THIS FILE GENERATED BY bcd.gen */
module bcd.fltk2.Symbol;
align(4):
public import bcd.bind;
public import bcd.fltk2.FL_API;
public import bcd.fltk2.PixelType;
public import bcd.fltk2.Rectangle;
public import bcd.fltk2.Color;
public import bcd.fltk2.Flags;
extern (C) void _BCD_delete_N4fltk6SymbolE(void *);
extern (C) char * _BCD__ZNK4fltk6Symbol4nameEv(void *This);
extern (C) void _BCD__ZN4fltk6Symbol4nameEPKc(void *This, char *);
extern (C) void _BCD__ZNK4fltk6Symbol8_measureERiS1_(void *This, int *, int *);
extern (C) void _BCD__ZNK4fltk6Symbol7measureERiS1_(void *This, int *, int *);
extern (C) void _BCD__ZNK4fltk6Symbol5_drawERKNS_9RectangleE(void *This, void *);
extern (C) void _BCD__ZNK4fltk6Symbol4drawERKNS_9RectangleE(void *This, void *);
extern (C) void _BCD__ZNK4fltk6Symbol19draw_symbol_overlayERKNS_9RectangleE(void *This, void *);
extern (C) void _BCD__ZN4fltk6Symbol9set_insetEiiii(void *This, int, int, int, int);
extern (C) void _BCD__ZN4fltk6Symbol9set_insetEii(void *This, int, int);
extern (C) void _BCD__ZN4fltk6Symbol9set_insetEi(void *This, int);
extern (C) void _BCD__ZN4fltk6Symbol9set_insetERKNS_9RectangleE(void *This, void *);
extern (C) Rectangle _BCD__ZNK4fltk6Symbol9get_insetEv(void *This);
extern (C) int _BCD__ZNK4fltk6Symbol2dxEv(void *This);
extern (C) int _BCD__ZNK4fltk6Symbol2dyEv(void *This);
extern (C) int _BCD__ZNK4fltk6Symbol2dwEv(void *This);
extern (C) int _BCD__ZNK4fltk6Symbol2dhEv(void *This);
extern (C) void _BCD__ZNK4fltk6Symbol5insetERNS_9RectangleE(void *This, void *);
extern (C) bool _BCD__ZNK4fltk6Symbol15fills_rectangleEv(void *This);
extern (C) bool _BCD__ZNK4fltk6Symbol8is_frameEv(void *This);
extern (C) Symbol * _BCD__ZN4fltk6Symbol4findEPKc(char *);
extern (C) Symbol * _BCD__ZN4fltk6Symbol4findEPKcS2_(char *, char *);
extern (C) Symbol * _BCD__ZN4fltk6Symbol7iterateERi(int *);
extern (C) void _BCD__ZN4fltk6Symbol4textEPKcj(char *, uint);
extern (C) char * _BCD__ZN4fltk6Symbol4textEv();
extern (C) uint _BCD__ZN4fltk6Symbol11text_lengthEv();
alias void function(uint) _BCD_func__246;
extern (C) void _BCD__ZN4fltk10add_symbolEPKcPFvjEi(char *, _BCD_func__246, int);
class Symbol : bcd.bind.BoundClass {
this(ifloat ignore) {
super(ignore);
}
this(ifloat ignore, void *x) {
super(ignore);
__C_data = x;
__C_data_owned = false;
}
~this() {
if (__C_data && __C_data_owned) _BCD_delete_N4fltk6SymbolE(__C_data);
__C_data = null;
}
char * name() {
return _BCD__ZNK4fltk6Symbol4nameEv(__C_data);
}
void name(char * _0) {
_BCD__ZN4fltk6Symbol4nameEPKc(__C_data, _0);
}
void _measure(int * w, int * h) {
_BCD__ZNK4fltk6Symbol8_measureERiS1_(__C_data, w, h);
}
void measure(int * w, int * h) {
_BCD__ZNK4fltk6Symbol7measureERiS1_(__C_data, w, h);
}
void _draw(Rectangle _0) {
_BCD__ZNK4fltk6Symbol5_drawERKNS_9RectangleE(__C_data, _0.__C_data);
}
void draw(Rectangle r) {
_BCD__ZNK4fltk6Symbol4drawERKNS_9RectangleE(__C_data, r.__C_data);
}
void draw_symbol_overlay(Rectangle _0) {
_BCD__ZNK4fltk6Symbol19draw_symbol_overlayERKNS_9RectangleE(__C_data, _0.__C_data);
}
void set_inset(int x, int y, int w, int h) {
_BCD__ZN4fltk6Symbol9set_insetEiiii(__C_data, x, y, w, h);
}
void set_inset(int x, int y) {
_BCD__ZN4fltk6Symbol9set_insetEii(__C_data, x, y);
}
void set_inset(int x) {
_BCD__ZN4fltk6Symbol9set_insetEi(__C_data, x);
}
void set_inset(Rectangle r) {
_BCD__ZN4fltk6Symbol9set_insetERKNS_9RectangleE(__C_data, r.__C_data);
}
Rectangle get_inset() {
return _BCD__ZNK4fltk6Symbol9get_insetEv(__C_data);
}
int dx() {
return _BCD__ZNK4fltk6Symbol2dxEv(__C_data);
}
int dy() {
return _BCD__ZNK4fltk6Symbol2dyEv(__C_data);
}
int dw() {
return _BCD__ZNK4fltk6Symbol2dwEv(__C_data);
}
int dh() {
return _BCD__ZNK4fltk6Symbol2dhEv(__C_data);
}
void inset(Rectangle r) {
_BCD__ZNK4fltk6Symbol5insetERNS_9RectangleE(__C_data, r.__C_data);
}
bool fills_rectangle() {
return _BCD__ZNK4fltk6Symbol15fills_rectangleEv(__C_data);
}
bool is_frame() {
return _BCD__ZNK4fltk6Symbol8is_frameEv(__C_data);
}
static Symbol * find(char * name) {
return _BCD__ZN4fltk6Symbol4findEPKc(name);
}
static Symbol * find(char * start, char * end) {
return _BCD__ZN4fltk6Symbol4findEPKcS2_(start, end);
}
static Symbol * iterate(int * index) {
return _BCD__ZN4fltk6Symbol7iterateERi(index);
}
static void text(char * s, uint n) {
_BCD__ZN4fltk6Symbol4textEPKcj(s, n);
}
static char * text() {
return _BCD__ZN4fltk6Symbol4textEv();
}
static uint text_length() {
return _BCD__ZN4fltk6Symbol11text_lengthEv();
}
}
void add_symbol(char * name, _BCD_func__246 drawit, int scalable) {
_BCD__ZN4fltk10add_symbolEPKcPFvjEi(name, drawit, scalable);
}
