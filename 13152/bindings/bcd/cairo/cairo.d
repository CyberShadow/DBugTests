/* THIS FILE GENERATED BY bcd.gen */
module bcd.cairo.cairo;
align(4):
const int CAIRO_VERSION_MAJOR = 1;
const int CAIRO_VERSION_MINOR = 0;
const int CAIRO_VERSION_MICRO = 0;
const char[] CAIRO_VERSION_STRING = "1.0.0";
const int CAIRO_HAS_XLIB_SURFACE = 1;
const int CAIRO_HAS_FT_FONT = 1;
const int CAIRO_HAS_PNG_FUNCTIONS = 1;
enum _cairo_filter {
CAIRO_FILTER_FAST=0,
CAIRO_FILTER_GOOD=1,
CAIRO_FILTER_BEST=2,
CAIRO_FILTER_NEAREST=3,
CAIRO_FILTER_BILINEAR=4,
CAIRO_FILTER_GAUSSIAN=5,
}
alias int cairo_filter_t;
enum _cairo_extend {
CAIRO_EXTEND_NONE=0,
CAIRO_EXTEND_REPEAT=1,
CAIRO_EXTEND_REFLECT=2,
}
alias int cairo_extend_t;
enum _cairo_format {
CAIRO_FORMAT_ARGB32=0,
CAIRO_FORMAT_RGB24=1,
CAIRO_FORMAT_A8=2,
CAIRO_FORMAT_A1=3,
}
alias int cairo_format_t;
enum _cairo_content {
CAIRO_CONTENT_COLOR=4096,
CAIRO_CONTENT_ALPHA=8192,
CAIRO_CONTENT_COLOR_ALPHA=12288,
}
alias int cairo_content_t;
alias cairo_path cairo_path_t;
enum _cairo_status {
CAIRO_STATUS_SUCCESS=0,
CAIRO_STATUS_NO_MEMORY=1,
CAIRO_STATUS_INVALID_RESTORE=2,
CAIRO_STATUS_INVALID_POP_GROUP=3,
CAIRO_STATUS_NO_CURRENT_POINT=4,
CAIRO_STATUS_INVALID_MATRIX=5,
CAIRO_STATUS_INVALID_STATUS=6,
CAIRO_STATUS_NULL_POINTER=7,
CAIRO_STATUS_INVALID_STRING=8,
CAIRO_STATUS_INVALID_PATH_DATA=9,
CAIRO_STATUS_READ_ERROR=10,
CAIRO_STATUS_WRITE_ERROR=11,
CAIRO_STATUS_SURFACE_FINISHED=12,
CAIRO_STATUS_SURFACE_TYPE_MISMATCH=13,
CAIRO_STATUS_PATTERN_TYPE_MISMATCH=14,
CAIRO_STATUS_INVALID_CONTENT=15,
CAIRO_STATUS_INVALID_FORMAT=16,
CAIRO_STATUS_INVALID_VISUAL=17,
CAIRO_STATUS_FILE_NOT_FOUND=18,
CAIRO_STATUS_INVALID_DASH=19,
}
alias int cairo_status_t;
alias _cairo_path_data_t cairo_path_data_t;
enum _cairo_path_data_type {
CAIRO_PATH_MOVE_TO=0,
CAIRO_PATH_LINE_TO=1,
CAIRO_PATH_CURVE_TO=2,
CAIRO_PATH_CLOSE_PATH=3,
}
alias int cairo_path_data_type_t;
alias void cairo_font_options_t;
enum _cairo_hint_metrics {
CAIRO_HINT_METRICS_DEFAULT=0,
CAIRO_HINT_METRICS_OFF=1,
CAIRO_HINT_METRICS_ON=2,
}
alias int cairo_hint_metrics_t;
enum _cairo_hint_style {
CAIRO_HINT_STYLE_DEFAULT=0,
CAIRO_HINT_STYLE_NONE=1,
CAIRO_HINT_STYLE_SLIGHT=2,
CAIRO_HINT_STYLE_MEDIUM=3,
CAIRO_HINT_STYLE_FULL=4,
}
alias int cairo_hint_style_t;
enum _cairo_subpixel_order {
CAIRO_SUBPIXEL_ORDER_DEFAULT=0,
CAIRO_SUBPIXEL_ORDER_RGB=1,
CAIRO_SUBPIXEL_ORDER_BGR=2,
CAIRO_SUBPIXEL_ORDER_VRGB=3,
CAIRO_SUBPIXEL_ORDER_VBGR=4,
}
alias int cairo_subpixel_order_t;
enum _cairo_font_weight {
CAIRO_FONT_WEIGHT_NORMAL=0,
CAIRO_FONT_WEIGHT_BOLD=1,
}
alias int cairo_font_weight_t;
enum _cairo_font_slant {
CAIRO_FONT_SLANT_NORMAL=0,
CAIRO_FONT_SLANT_ITALIC=1,
CAIRO_FONT_SLANT_OBLIQUE=2,
}
alias int cairo_font_slant_t;
alias void cairo_font_face_t;
alias void cairo_scaled_font_t;
enum _cairo_line_join {
CAIRO_LINE_JOIN_MITER=0,
CAIRO_LINE_JOIN_ROUND=1,
CAIRO_LINE_JOIN_BEVEL=2,
}
alias int cairo_line_join_t;
enum _cairo_line_cap {
CAIRO_LINE_CAP_BUTT=0,
CAIRO_LINE_CAP_ROUND=1,
CAIRO_LINE_CAP_SQUARE=2,
}
alias int cairo_line_cap_t;
enum _cairo_fill_rule {
CAIRO_FILL_RULE_WINDING=0,
CAIRO_FILL_RULE_EVEN_ODD=1,
}
alias int cairo_fill_rule_t;
enum _cairo_antialias {
CAIRO_ANTIALIAS_DEFAULT=0,
CAIRO_ANTIALIAS_NONE=1,
CAIRO_ANTIALIAS_GRAY=2,
CAIRO_ANTIALIAS_SUBPIXEL=3,
}
alias int cairo_antialias_t;
enum _cairo_operator {
CAIRO_OPERATOR_CLEAR=0,
CAIRO_OPERATOR_SOURCE=1,
CAIRO_OPERATOR_OVER=2,
CAIRO_OPERATOR_IN=3,
CAIRO_OPERATOR_OUT=4,
CAIRO_OPERATOR_ATOP=5,
CAIRO_OPERATOR_DEST=6,
CAIRO_OPERATOR_DEST_OVER=7,
CAIRO_OPERATOR_DEST_IN=8,
CAIRO_OPERATOR_DEST_OUT=9,
CAIRO_OPERATOR_DEST_ATOP=10,
CAIRO_OPERATOR_XOR=11,
CAIRO_OPERATOR_ADD=12,
CAIRO_OPERATOR_SATURATE=13,
}
alias int cairo_operator_t;
alias int function(void *, char *, uint) _BCD_func__399;
alias _BCD_func__399 cairo_read_func_t;
alias int function(void *, char *, uint) _BCD_func__400;
alias _BCD_func__400 cairo_write_func_t;
alias _cairo_user_data_key cairo_user_data_key_t;
alias void function(void *) _BCD_func__404;
alias _BCD_func__404 cairo_destroy_func_t;
alias void cairo_pattern_t;
alias _cairo_matrix cairo_matrix_t;
alias void cairo_surface_t;
alias void cairo_t;
alias int cairo_bool_t;
extern (C) void cairo_matrix_transform_point(_cairo_matrix *, double *, double *);
extern (C) void cairo_matrix_transform_distance(_cairo_matrix *, double *, double *);
extern (C) void cairo_matrix_multiply(_cairo_matrix *, _cairo_matrix *, _cairo_matrix *);
extern (C) int cairo_matrix_invert(_cairo_matrix *);
extern (C) void cairo_matrix_rotate(_cairo_matrix *, double);
extern (C) void cairo_matrix_scale(_cairo_matrix *, double, double);
extern (C) void cairo_matrix_translate(_cairo_matrix *, double, double);
extern (C) void cairo_matrix_init_rotate(_cairo_matrix *, double);
extern (C) void cairo_matrix_init_scale(_cairo_matrix *, double, double);
extern (C) void cairo_matrix_init_translate(_cairo_matrix *, double, double);
extern (C) void cairo_matrix_init_identity(_cairo_matrix *);
extern (C) void cairo_matrix_init(_cairo_matrix *, double, double, double, double, double, double);
extern (C) int cairo_pattern_get_filter(void *);
extern (C) void cairo_pattern_set_filter(void *, int);
extern (C) int cairo_pattern_get_extend(void *);
extern (C) void cairo_pattern_set_extend(void *, int);
extern (C) void cairo_pattern_get_matrix(void *, _cairo_matrix *);
extern (C) void cairo_pattern_set_matrix(void *, _cairo_matrix *);
extern (C) void cairo_pattern_add_color_stop_rgba(void *, double, double, double, double, double);
extern (C) void cairo_pattern_add_color_stop_rgb(void *, double, double, double, double);
extern (C) int cairo_pattern_status(void *);
extern (C) void cairo_pattern_destroy(void *);
extern (C) void * cairo_pattern_reference(void *);
extern (C) void * cairo_pattern_create_radial(double, double, double, double, double, double);
extern (C) void * cairo_pattern_create_linear(double, double, double, double);
extern (C) void * cairo_pattern_create_for_surface(void *);
extern (C) void * cairo_pattern_create_rgba(double, double, double, double);
extern (C) void * cairo_pattern_create_rgb(double, double, double);
extern (C) void * cairo_image_surface_create_from_png_stream(_BCD_func__399, void *);
extern (C) void * cairo_image_surface_create_from_png(char *);
extern (C) int cairo_image_surface_get_height(void *);
extern (C) int cairo_image_surface_get_width(void *);
extern (C) void * cairo_image_surface_create_for_data(char *, int, int, int, int);
extern (C) void * cairo_image_surface_create(int, int, int);
extern (C) void cairo_surface_set_device_offset(void *, double, double);
extern (C) void cairo_surface_mark_dirty_rectangle(void *, int, int, int, int);
extern (C) void cairo_surface_mark_dirty(void *);
extern (C) void cairo_surface_flush(void *);
extern (C) void cairo_surface_get_font_options(void *, void *);
extern (C) int cairo_surface_set_user_data(void *, _cairo_user_data_key *, void *, _BCD_func__404);
extern (C) void * cairo_surface_get_user_data(void *, _cairo_user_data_key *);
extern (C) int cairo_surface_write_to_png_stream(void *, _BCD_func__400, void *);
extern (C) int cairo_surface_write_to_png(void *, char *);
extern (C) void cairo_surface_finish(void *);
extern (C) int cairo_surface_status(void *);
extern (C) void cairo_surface_destroy(void *);
extern (C) void * cairo_surface_reference(void *);
extern (C) void * cairo_surface_create_similar(void *, int, int, int);
extern (C) char * cairo_status_to_string(int);
extern (C) int cairo_status(void *);
extern (C) void cairo_path_destroy(cairo_path *);
extern (C) void cairo_append_path(void *, cairo_path *);
extern (C) cairo_path * cairo_copy_path_flat(void *);
extern (C) cairo_path * cairo_copy_path(void *);
extern (C) void * cairo_get_target(void *);
extern (C) void cairo_get_matrix(void *, _cairo_matrix *);
extern (C) double cairo_get_miter_limit(void *);
extern (C) int cairo_get_line_join(void *);
extern (C) int cairo_get_line_cap(void *);
extern (C) double cairo_get_line_width(void *);
extern (C) int cairo_get_fill_rule(void *);
extern (C) void cairo_get_current_point(void *, double *, double *);
extern (C) int cairo_get_antialias(void *);
extern (C) double cairo_get_tolerance(void *);
extern (C) void * cairo_get_source(void *);
extern (C) int cairo_get_operator(void *);
extern (C) void cairo_scaled_font_glyph_extents(void *, cairo_glyph_t *, int, cairo_text_extents_t *);
extern (C) void cairo_scaled_font_extents(void *, cairo_font_extents_t *);
extern (C) int cairo_scaled_font_status(void *);
extern (C) void cairo_scaled_font_destroy(void *);
extern (C) void * cairo_scaled_font_reference(void *);
extern (C) void * cairo_scaled_font_create(void *, _cairo_matrix *, _cairo_matrix *, void *);
extern (C) int cairo_font_face_set_user_data(void *, _cairo_user_data_key *, void *, _BCD_func__404);
extern (C) void * cairo_font_face_get_user_data(void *, _cairo_user_data_key *);
extern (C) int cairo_font_face_status(void *);
extern (C) void cairo_font_face_destroy(void *);
extern (C) void * cairo_font_face_reference(void *);
extern (C) void cairo_glyph_path(void *, cairo_glyph_t *, int);
extern (C) void cairo_text_path(void *, char *);
extern (C) void cairo_glyph_extents(void *, cairo_glyph_t *, int, cairo_text_extents_t *);
extern (C) void cairo_text_extents(void *, char *, cairo_text_extents_t *);
extern (C) void cairo_set_font_face(void *, void *);
extern (C) void cairo_font_extents(void *, cairo_font_extents_t *);
extern (C) void * cairo_get_font_face(void *);
extern (C) void cairo_show_glyphs(void *, cairo_glyph_t *, int);
extern (C) void cairo_show_text(void *, char *);
extern (C) void cairo_get_font_options(void *, void *);
extern (C) void cairo_set_font_options(void *, void *);
extern (C) void cairo_get_font_matrix(void *, _cairo_matrix *);
extern (C) void cairo_set_font_matrix(void *, _cairo_matrix *);
extern (C) void cairo_set_font_size(void *, double);
extern (C) void cairo_select_font_face(void *, char *, int, int);
extern (C) int cairo_font_options_get_hint_metrics(void *);
extern (C) void cairo_font_options_set_hint_metrics(void *, int);
extern (C) int cairo_font_options_get_hint_style(void *);
extern (C) void cairo_font_options_set_hint_style(void *, int);
extern (C) int cairo_font_options_get_subpixel_order(void *);
extern (C) void cairo_font_options_set_subpixel_order(void *, int);
extern (C) int cairo_font_options_get_antialias(void *);
extern (C) void cairo_font_options_set_antialias(void *, int);
extern (C) uint cairo_font_options_hash(void *);
extern (C) int cairo_font_options_equal(void *, void *);
extern (C) void cairo_font_options_merge(void *, void *);
extern (C) int cairo_font_options_status(void *);
extern (C) void cairo_font_options_destroy(void *);
extern (C) void * cairo_font_options_copy(void *);
extern (C) void * cairo_font_options_create();
extern (C) void cairo_clip_preserve(void *);
extern (C) void cairo_clip(void *);
extern (C) void cairo_reset_clip(void *);
extern (C) void cairo_fill_extents(void *, double *, double *, double *, double *);
extern (C) void cairo_stroke_extents(void *, double *, double *, double *, double *);
extern (C) int cairo_in_fill(void *, double, double);
extern (C) int cairo_in_stroke(void *, double, double);
extern (C) void cairo_show_page(void *);
extern (C) void cairo_copy_page(void *);
extern (C) void cairo_fill_preserve(void *);
extern (C) void cairo_fill(void *);
extern (C) void cairo_stroke_preserve(void *);
extern (C) void cairo_stroke(void *);
extern (C) void cairo_mask_surface(void *, void *, double, double);
extern (C) void cairo_mask(void *, void *);
extern (C) void cairo_paint_with_alpha(void *, double);
extern (C) void cairo_paint(void *);
extern (C) void cairo_close_path(void *);
extern (C) void cairo_rectangle(void *, double, double, double, double);
extern (C) void cairo_rel_curve_to(void *, double, double, double, double, double, double);
extern (C) void cairo_rel_line_to(void *, double, double);
extern (C) void cairo_rel_move_to(void *, double, double);
extern (C) void cairo_arc_negative(void *, double, double, double, double, double);
extern (C) void cairo_arc(void *, double, double, double, double, double);
extern (C) void cairo_curve_to(void *, double, double, double, double, double, double);
extern (C) void cairo_line_to(void *, double, double);
extern (C) void cairo_move_to(void *, double, double);
extern (C) void cairo_new_path(void *);
extern (C) void cairo_device_to_user_distance(void *, double *, double *);
extern (C) void cairo_device_to_user(void *, double *, double *);
extern (C) void cairo_user_to_device_distance(void *, double *, double *);
extern (C) void cairo_user_to_device(void *, double *, double *);
extern (C) void cairo_identity_matrix(void *);
extern (C) void cairo_set_matrix(void *, _cairo_matrix *);
extern (C) void cairo_transform(void *, _cairo_matrix *);
extern (C) void cairo_rotate(void *, double);
extern (C) void cairo_scale(void *, double, double);
extern (C) void cairo_translate(void *, double, double);
extern (C) void cairo_set_miter_limit(void *, double);
extern (C) void cairo_set_dash(void *, double *, int, double);
extern (C) void cairo_set_line_join(void *, int);
extern (C) void cairo_set_line_cap(void *, int);
extern (C) void cairo_set_line_width(void *, double);
extern (C) void cairo_set_fill_rule(void *, int);
extern (C) void cairo_set_antialias(void *, int);
extern (C) void cairo_set_tolerance(void *, double);
extern (C) void cairo_set_source_surface(void *, void *, double, double);
extern (C) void cairo_set_source_rgba(void *, double, double, double, double);
extern (C) void cairo_set_source_rgb(void *, double, double, double);
extern (C) void cairo_set_source(void *, void *);
extern (C) void cairo_set_operator(void *, int);
extern (C) void cairo_restore(void *);
extern (C) void cairo_save(void *);
extern (C) void cairo_destroy(void *);
extern (C) void * cairo_reference(void *);
extern (C) void * cairo_create(void *);
extern (C) char * cairo_version_string();
extern (C) int cairo_version();
struct cairo_path {
int status;
_cairo_path_data_t * data;
int num_data;
}
struct N18_cairo_path_data_t3__3E {
int type;
int length;
}
struct N18_cairo_path_data_t3__4E {
double x;
double y;
}
union _cairo_path_data_t {
N18_cairo_path_data_t3__3E header;
N18_cairo_path_data_t3__4E point;
}
struct cairo_font_extents_t {
double ascent;
double descent;
double height;
double max_x_advance;
double max_y_advance;
}
struct cairo_text_extents_t {
double x_bearing;
double y_bearing;
double width;
double height;
double x_advance;
double y_advance;
}
struct cairo_glyph_t {
uint index;
double x;
double y;
}
struct _cairo_user_data_key {
int unused;
}
struct _cairo_matrix {
double xx;
double yx;
double xy;
double yy;
double x0;
double y0;
}
