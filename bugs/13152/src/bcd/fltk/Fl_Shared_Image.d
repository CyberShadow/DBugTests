/* THIS FILE GENERATED BY bcd.gen */
module bcd.fltk.Fl_Shared_Image;
public import bcd.bind;
public import bcd.fltk.Fl_Image;
public import bcd.fltk.Enumerations;
extern (C) void _BCD_delete_15Fl_Shared_Image(void *);
extern (C) char * _BCD__ZN15Fl_Shared_Image4nameEv(void *This);
extern (C) int _BCD__ZN15Fl_Shared_Image8refcountEv(void *This);
extern (C) void _BCD__ZN15Fl_Shared_Image7releaseEv(void *This);
extern (C) void _BCD__ZN15Fl_Shared_Image6reloadEv(void *This);
extern (C) Fl_Image * _BCD__ZN15Fl_Shared_Image4copyEii(void *This, int, int);
extern (C) Fl_Image * _BCD__ZN15Fl_Shared_Image4copyEv(void *This);
extern (C) void _BCD__ZN15Fl_Shared_Image13color_averageE8Fl_Colorf(void *This, int, float);
extern (C) void _BCD__ZN15Fl_Shared_Image10desaturateEv(void *This);
extern (C) void _BCD__ZN15Fl_Shared_Image4drawEiiiiii(void *This, int, int, int, int, int, int);
extern (C) void _BCD__ZN15Fl_Shared_Image4drawEii(void *This, int, int);
extern (C) void _BCD__ZN15Fl_Shared_Image7uncacheEv(void *This);
extern (C) Fl_Shared_Image * _BCD__ZN15Fl_Shared_Image4findEPKcii(char *, int, int);
extern (C) Fl_Shared_Image * _BCD__ZN15Fl_Shared_Image3getEPKcii(char *, int, int);
extern (C) Fl_Shared_Image * * _BCD__ZN15Fl_Shared_Image6imagesEv();
extern (C) int _BCD__ZN15Fl_Shared_Image10num_imagesEv();
alias Fl_Image * function(char *, char *, int) _BCD_func__207;
alias _BCD_func__207 Fl_Shared_Handler;
extern (C) void _BCD__ZN15Fl_Shared_Image11add_handlerEPFP8Fl_ImagePKcPhiE(_BCD_func__207);
extern (C) void _BCD__ZN15Fl_Shared_Image14remove_handlerEPFP8Fl_ImagePKcPhiE(_BCD_func__207);
extern (C) void _BCD_RI_15Fl_Shared_Image(void *cd, void *dd);
extern (C) void _BCD_delete_15Fl_Shared_Image__Fl_Shared_Image_R(void *This);
extern (C) int _BCD_R__ZN15Fl_Shared_Image4copyEii__Fl_Shared_Image_R_CHECK(Fl_Shared_Image_R x) {
union dp {
Fl_Image * delegate(int, int) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.copy;
return cast(int) (d.f != &Fl_Shared_Image.copy);
}
extern (C) Fl_Image * _BCD_R__ZN15Fl_Shared_Image4copyEii__Fl_Shared_Image_R(Fl_Shared_Image_R __D_class, int W, int H) {
return __D_class.copy(W, H);
}
extern (C) int _BCD_R__ZN15Fl_Shared_Image13color_averageE8Fl_Colorf__Fl_Shared_Image_R_CHECK(Fl_Shared_Image_R x) {
union dp {
void delegate(int, float) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.color_average;
return cast(int) (d.f != &Fl_Shared_Image.color_average);
}
extern (C) void _BCD_R__ZN15Fl_Shared_Image13color_averageE8Fl_Colorf__Fl_Shared_Image_R(Fl_Shared_Image_R __D_class, int c, float i) {
__D_class.color_average(c, i);
}
extern (C) int _BCD_R__ZN15Fl_Shared_Image10desaturateEv__Fl_Shared_Image_R_CHECK(Fl_Shared_Image_R x) {
union dp {
void delegate() d;
struct { void *o; void *f; }
}
dp d; d.d = &x.desaturate;
return cast(int) (d.f != &Fl_Shared_Image.desaturate);
}
extern (C) void _BCD_R__ZN15Fl_Shared_Image10desaturateEv__Fl_Shared_Image_R(Fl_Shared_Image_R __D_class, ) {
__D_class.desaturate();
}
extern (C) int _BCD_R__ZN15Fl_Shared_Image4drawEiiiiii__Fl_Shared_Image_R_CHECK(Fl_Shared_Image_R x) {
union dp {
void delegate(int, int, int, int, int, int) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.draw;
return cast(int) (d.f != &Fl_Shared_Image.draw);
}
extern (C) void _BCD_R__ZN15Fl_Shared_Image4drawEiiiiii__Fl_Shared_Image_R(Fl_Shared_Image_R __D_class, int X, int Y, int W, int H, int cx, int cy) {
__D_class.draw(X, Y, W, H, cx, cy);
}
extern (C) int _BCD_R__ZN15Fl_Shared_Image7uncacheEv__Fl_Shared_Image_R_CHECK(Fl_Shared_Image_R x) {
union dp {
void delegate() d;
struct { void *o; void *f; }
}
dp d; d.d = &x.uncache;
return cast(int) (d.f != &Fl_Shared_Image.uncache);
}
extern (C) void _BCD_R__ZN15Fl_Shared_Image7uncacheEv__Fl_Shared_Image_R(Fl_Shared_Image_R __D_class, ) {
__D_class.uncache();
}
extern (C) void _BCD__Z18fl_register_imagesv();
class Fl_Shared_Image : Fl_Image {
this(ifloat ignore) {
super(ignore);
}
this(ifloat ignore, void *x) {
super(ignore);
__C_data = x;
__C_data_owned = false;
}
~this() {
if (__C_data && __C_data_owned) _BCD_delete_15Fl_Shared_Image(__C_data);
__C_data = null;
}
char * name() {
return _BCD__ZN15Fl_Shared_Image4nameEv(__C_data);
}
int refcount() {
return _BCD__ZN15Fl_Shared_Image8refcountEv(__C_data);
}
void release() {
_BCD__ZN15Fl_Shared_Image7releaseEv(__C_data);
}
void reload() {
_BCD__ZN15Fl_Shared_Image6reloadEv(__C_data);
}
Fl_Image * copy(int W, int H) {
return _BCD__ZN15Fl_Shared_Image4copyEii(__C_data, W, H);
}
Fl_Image * copy() {
return _BCD__ZN15Fl_Shared_Image4copyEv(__C_data);
}
void color_average(int c, float i) {
_BCD__ZN15Fl_Shared_Image13color_averageE8Fl_Colorf(__C_data, c, i);
}
void desaturate() {
_BCD__ZN15Fl_Shared_Image10desaturateEv(__C_data);
}
void draw(int X, int Y, int W, int H, int cx, int cy) {
_BCD__ZN15Fl_Shared_Image4drawEiiiiii(__C_data, X, Y, W, H, cx, cy);
}
void draw(int X, int Y) {
_BCD__ZN15Fl_Shared_Image4drawEii(__C_data, X, Y);
}
void uncache() {
_BCD__ZN15Fl_Shared_Image7uncacheEv(__C_data);
}
static Fl_Shared_Image * find(char * n, int W, int H) {
return _BCD__ZN15Fl_Shared_Image4findEPKcii(n, W, H);
}
static Fl_Shared_Image * get(char * n, int W, int H) {
return _BCD__ZN15Fl_Shared_Image3getEPKcii(n, W, H);
}
static Fl_Shared_Image * * images() {
return _BCD__ZN15Fl_Shared_Image6imagesEv();
}
static int num_images() {
return _BCD__ZN15Fl_Shared_Image10num_imagesEv();
}
static void add_handler(_BCD_func__207 f) {
_BCD__ZN15Fl_Shared_Image11add_handlerEPFP8Fl_ImagePKcPhiE(f);
}
static void remove_handler(_BCD_func__207 f) {
_BCD__ZN15Fl_Shared_Image14remove_handlerEPFP8Fl_ImagePKcPhiE(f);
}
}
class Fl_Shared_Image_R : Fl_Shared_Image {
~this() {
if (__C_data && __C_data_owned) _BCD_delete_15Fl_Shared_Image__Fl_Shared_Image_R(__C_data);
__C_data = null;
}
this() { super(cast(ireal) 0); }
}
void fl_register_images() {
_BCD__Z18fl_register_imagesv();
}
