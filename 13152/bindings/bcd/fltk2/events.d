/* THIS FILE GENERATED BY bcd.gen */
module bcd.fltk2.events;
align(4):
public import bcd.bind;
public import bcd.fltk2.FL_API;
extern (C) void _BCD_delete_N4fltk18ShortcutAssignmentE(void *);
extern (C) void _BCD_set__ZN4fltk18ShortcutAssignment6widgetE(void *, bcd.bind.BoundClass *);
extern (C) bcd.bind.BoundClass * _BCD_get__ZN4fltk18ShortcutAssignment6widgetE(void *);
extern (C) void _BCD_set__ZN4fltk18ShortcutAssignment3keyE(void *, uint);
extern (C) uint _BCD_get__ZN4fltk18ShortcutAssignment3keyE(void *);
extern (C) void _BCD_RI_N4fltk18ShortcutAssignmentE(void *cd, void *dd);
extern (C) void _BCD_delete_N4fltk18ShortcutAssignmentE__ShortcutAssignment_R(void *This);
extern (C) char * _BCD__ZN4fltk10event_nameEi(int);
extern (C) bool _BCD__ZN4fltk15exit_modal_flagEv();
extern (C) void _BCD__ZN4fltk10exit_modalEv();
extern (C) bool _BCD__ZN4fltk4grabEv();
extern (C) bcd.bind.BoundClass * _BCD__ZN4fltk5modalEv();
extern (C) void _BCD__ZN4fltk5modalEPNS_6WidgetEb(void *, bool);
extern (C) bool _BCD__ZN4fltk3dndEv();
extern (C) void _BCD__ZN4fltk5pasteERNS_6WidgetEb(void *, bool);
extern (C) void _BCD__ZN4fltk4copyEPKcib(char *, int, bool);
extern (C) void _BCD__ZN4fltk5focusERNS_6WidgetE(void *);
extern (C) bcd.bind.BoundClass * _BCD__ZN4fltk5focusEv();
extern (C) void _BCD__ZN4fltk6pushedERNS_6WidgetE(void *);
extern (C) bcd.bind.BoundClass * _BCD__ZN4fltk6pushedEv();
extern (C) void _BCD__ZN4fltk10belowmouseERNS_6WidgetE(void *);
extern (C) bcd.bind.BoundClass * _BCD__ZN4fltk10belowmouseEv();
alias int function(int, bcd.bind.BoundClass *) _BCD_func__249;
extern (C) void _BCD__ZN4fltk17add_event_handlerEPFiiPNS_6WindowEE(_BCD_func__249);
extern (C) bool _BCD__ZN4fltk6handleEiPNS_6WindowE(int, void *);
extern (C) bool _BCD__ZN4fltk10warp_mouseEii(int, int);
extern (C) void _BCD__ZN4fltk9get_mouseERiS0_(int *, int *);
extern (C) bool _BCD__ZN4fltk13get_key_stateEj(uint);
extern (C) uint _BCD__ZN4fltk3keyEPKc(char *);
extern (C) char * _BCD__ZN4fltk8key_nameEj(uint);
extern (C) bool _BCD__ZN4fltk12try_shortcutEv();
extern (C) ShortcutAssignment * _BCD__ZN4fltk23list_matching_shortcutsERj(uint *);
extern (C) ShortcutAssignment * _BCD__ZN4fltk14list_shortcutsERj(uint *);
extern (C) ShortcutAssignment * _BCD__ZN4fltk14list_shortcutsEPKNS_6WidgetERj(void *, uint *);
extern (C) ShortcutAssignment * _BCD__ZN4fltk14list_shortcutsEjRj(uint, uint *);
extern (C) void _BCD__ZN4fltk13compose_resetEv();
extern (C) bool _BCD__ZN4fltk7composeERi(int *);
extern (C) bool _BCD__ZN4fltk12event_insideERKNS_9RectangleE(void *);
extern (C) int _BCD__ZN4fltk12event_deviceEv();
extern (C) float _BCD__ZN4fltk12event_y_tiltEv();
extern (C) float _BCD__ZN4fltk12event_x_tiltEv();
extern (C) float _BCD__ZN4fltk14event_pressureEv();
extern (C) uint _BCD__ZN4fltk18event_key_repeatedEv();
extern (C) uint _BCD__ZN4fltk12event_lengthEv();
extern (C) char * _BCD__ZN4fltk10event_textEv();
extern (C) bool _BCD__ZN4fltk15event_key_stateEj(uint);
extern (C) uint _BCD__ZN4fltk12event_buttonEv();
extern (C) uint _BCD__ZN4fltk9event_keyEv();
extern (C) bool _BCD__ZN4fltk11event_stateEj(uint);
extern (C) uint _BCD__ZN4fltk11event_stateEv();
extern (C) void _BCD__ZN4fltk14event_is_clickEb(bool);
extern (C) bool _BCD__ZN4fltk14event_is_clickEv();
extern (C) void _BCD__ZN4fltk12event_clicksEi(int);
extern (C) int _BCD__ZN4fltk12event_clicksEv();
extern (C) int _BCD__ZN4fltk12event_y_rootEv();
extern (C) int _BCD__ZN4fltk12event_x_rootEv();
extern (C) int _BCD__ZN4fltk8event_dyEv();
extern (C) int _BCD__ZN4fltk8event_dxEv();
extern (C) int _BCD__ZN4fltk7event_yEv();
extern (C) int _BCD__ZN4fltk7event_xEv();
extern (C) int _BCD__ZN4fltk5eventEv();
extern (C) void _BCD_set__ZN4fltk11exit_modal_E(bool);
extern (C) bool _BCD_get__ZN4fltk11exit_modal_E();
extern (C) void _BCD_set__ZN4fltk5grab_E(bool);
extern (C) bool _BCD_get__ZN4fltk5grab_E();
extern (C) void _BCD_set__ZN4fltk6modal_E(bcd.bind.BoundClass *);
extern (C) bcd.bind.BoundClass * _BCD_get__ZN4fltk6modal_E();
extern (C) void _BCD_set__ZN4fltk6focus_E(bcd.bind.BoundClass *);
extern (C) bcd.bind.BoundClass * _BCD_get__ZN4fltk6focus_E();
extern (C) void _BCD_set__ZN4fltk7pushed_E(bcd.bind.BoundClass *);
extern (C) bcd.bind.BoundClass * _BCD_get__ZN4fltk7pushed_E();
extern (C) void _BCD_set__ZN4fltk11belowmouse_E(bcd.bind.BoundClass *);
extern (C) bcd.bind.BoundClass * _BCD_get__ZN4fltk11belowmouse_E();
extern (C) void _BCD_set__ZN4fltk13compose_stateE(int);
extern (C) int _BCD_get__ZN4fltk13compose_stateE();
extern (C) void _BCD_set__ZN4fltk8e_deviceE(int);
extern (C) int _BCD_get__ZN4fltk8e_deviceE();
extern (C) void _BCD_set__ZN4fltk8e_y_tiltE(float);
extern (C) float _BCD_get__ZN4fltk8e_y_tiltE();
extern (C) void _BCD_set__ZN4fltk8e_x_tiltE(float);
extern (C) float _BCD_get__ZN4fltk8e_x_tiltE();
extern (C) void _BCD_set__ZN4fltk10e_pressureE(float);
extern (C) float _BCD_get__ZN4fltk10e_pressureE();
extern (C) void _BCD_set__ZN4fltk14e_key_repeatedE(uint);
extern (C) uint _BCD_get__ZN4fltk14e_key_repeatedE();
extern (C) void _BCD_set__ZN4fltk6e_textE(char *);
extern (C) char * _BCD_get__ZN4fltk6e_textE();
extern (C) void _BCD_set__ZN4fltk8e_lengthE(uint);
extern (C) uint _BCD_get__ZN4fltk8e_lengthE();
extern (C) void _BCD_set__ZN4fltk8e_keysymE(uint);
extern (C) uint _BCD_get__ZN4fltk8e_keysymE();
extern (C) void _BCD_set__ZN4fltk10e_is_clickE(uint);
extern (C) uint _BCD_get__ZN4fltk10e_is_clickE();
extern (C) void _BCD_set__ZN4fltk8e_clicksE(int);
extern (C) int _BCD_get__ZN4fltk8e_clicksE();
extern (C) void _BCD_set__ZN4fltk7e_stateE(uint);
extern (C) uint _BCD_get__ZN4fltk7e_stateE();
extern (C) void _BCD_set__ZN4fltk8e_y_rootE(int);
extern (C) int _BCD_get__ZN4fltk8e_y_rootE();
extern (C) void _BCD_set__ZN4fltk8e_x_rootE(int);
extern (C) int _BCD_get__ZN4fltk8e_x_rootE();
extern (C) void _BCD_set__ZN4fltk4e_dyE(int);
extern (C) int _BCD_get__ZN4fltk4e_dyE();
extern (C) void _BCD_set__ZN4fltk4e_dxE(int);
extern (C) int _BCD_get__ZN4fltk4e_dxE();
extern (C) void _BCD_set__ZN4fltk3e_yE(int);
extern (C) int _BCD_get__ZN4fltk3e_yE();
extern (C) void _BCD_set__ZN4fltk3e_xE(int);
extern (C) int _BCD_get__ZN4fltk3e_xE();
extern (C) void _BCD_set__ZN4fltk6e_typeE(int);
extern (C) int _BCD_get__ZN4fltk6e_typeE();
extern (C) uint _BCD__ZN4fltk6BUTTONEi(int);
const int DEVICE_MOUSE = 0;
const int DEVICE_STYLUS = 1;
const int DEVICE_ERASER = 2;
const int DEVICE_CURSOR = 3;
const int DEVICE_AIRBRUSH = 4;
const int DEVICE_TOUCH = 5;
const int SHIFT = 65536;
const int CAPSLOCK = 131072;
const int CTRL = 262144;
const int ALT = 524288;
const int NUMLOCK = 1048576;
const int META = 4194304;
const int SCROLLLOCK = 8388608;
const int BUTTON1 = 16777216;
const int BUTTON2 = 33554432;
const int BUTTON3 = 67108864;
const int ANY_BUTTON = 2130706432;
const int ACCELERATOR = 524288;
const int COMMAND = 262144;
const int OPTION = 4718592;
const int LeftButton = 1;
const int MiddleButton = 2;
const int RightButton = 3;
const int SpaceKey = 32;
const int BackSpaceKey = 65288;
const int TabKey = 65289;
const int ClearKey = 65291;
const int ReturnKey = 65293;
const int PauseKey = 65299;
const int ScrollLockKey = 65300;
const int EscapeKey = 65307;
const int HomeKey = 65360;
const int LeftKey = 65361;
const int UpKey = 65362;
const int RightKey = 65363;
const int DownKey = 65364;
const int PageUpKey = 65365;
const int PageDownKey = 65366;
const int EndKey = 65367;
const int PrintKey = 65377;
const int InsertKey = 65379;
const int MenuKey = 65383;
const int HelpKey = 65384;
const int NumLockKey = 65407;
const int Keypad = 65408;
const int KeypadEnter = 65421;
const int MultiplyKey = 65450;
const int AddKey = 65451;
const int SubtractKey = 65453;
const int DecimalKey = 65454;
const int DivideKey = 65455;
const int Keypad0 = 65456;
const int Keypad1 = 65457;
const int Keypad2 = 65458;
const int Keypad3 = 65459;
const int Keypad4 = 65460;
const int Keypad5 = 65461;
const int Keypad6 = 65462;
const int Keypad7 = 65463;
const int Keypad8 = 65464;
const int Keypad9 = 65465;
const int KeypadLast = 65469;
const int F0Key = 65469;
const int F1Key = 65470;
const int F2Key = 65471;
const int F3Key = 65472;
const int F4Key = 65473;
const int F5Key = 65474;
const int F6Key = 65475;
const int F7Key = 65476;
const int F8Key = 65477;
const int F9Key = 65478;
const int F10Key = 65479;
const int F11Key = 65480;
const int F12Key = 65481;
const int LastFunctionKey = 65504;
const int LeftShiftKey = 65505;
const int RightShiftKey = 65506;
const int LeftCtrlKey = 65507;
const int RightCtrlKey = 65508;
const int CapsLockKey = 65509;
const int LeftMetaKey = 65511;
const int RightMetaKey = 65512;
const int LeftAltKey = 65513;
const int RightAltKey = 65514;
const int DeleteKey = 65535;
const int LeftAccKey = 65513;
const int RightAccKey = 65514;
const int LeftCmdKey = 65507;
const int RightCmdKey = 65508;
const int NO_EVENT = 0;
const int PUSH = 1;
const int RELEASE = 2;
const int ENTER = 3;
const int LEAVE = 4;
const int DRAG = 5;
const int FOCUS = 6;
const int UNFOCUS = 7;
const int KEY = 8;
const int KEYUP = 9;
const int FOCUS_CHANGE = 10;
const int MOVE = 11;
const int SHORTCUT = 12;
const int DEACTIVATE = 13;
const int ACTIVATE = 14;
const int HIDE = 15;
const int SHOW = 16;
const int PASTE = 17;
const int TIMEOUT = 18;
const int MOUSEWHEEL = 19;
const int DND_ENTER = 20;
const int DND_DRAG = 21;
const int DND_LEAVE = 22;
const int DND_RELEASE = 23;
const int TOOLTIP = 24;
class ShortcutAssignment : bcd.bind.BoundClass {
this(ifloat ignore) {
super(ignore);
}
this(ifloat ignore, void *x) {
super(ignore);
__C_data = x;
__C_data_owned = false;
}
~this() {
if (__C_data && __C_data_owned) _BCD_delete_N4fltk18ShortcutAssignmentE(__C_data);
__C_data = null;
}
void set_widget(bcd.bind.BoundClass * x) {
_BCD_set__ZN4fltk18ShortcutAssignment6widgetE(__C_data, x);
}
bcd.bind.BoundClass * get_widget() {
return _BCD_get__ZN4fltk18ShortcutAssignment6widgetE(__C_data);
}
void set_key(uint x) {
_BCD_set__ZN4fltk18ShortcutAssignment3keyE(__C_data, x);
}
uint get_key() {
return _BCD_get__ZN4fltk18ShortcutAssignment3keyE(__C_data);
}
}
class ShortcutAssignment_R : ShortcutAssignment {
~this() {
if (__C_data && __C_data_owned) _BCD_delete_N4fltk18ShortcutAssignmentE__ShortcutAssignment_R(__C_data);
__C_data = null;
}
this() { super(cast(ireal) 0); }
}
char * event_name(int event) {
return _BCD__ZN4fltk10event_nameEi(event);
}
bool exit_modal_flag() {
return _BCD__ZN4fltk15exit_modal_flagEv();
}
void exit_modal() {
_BCD__ZN4fltk10exit_modalEv();
}
bool grab() {
return _BCD__ZN4fltk4grabEv();
}
bcd.bind.BoundClass * modal() {
return _BCD__ZN4fltk5modalEv();
}
void modal(bcd.bind.BoundClass * _0, bool grab = false) {
_BCD__ZN4fltk5modalEPNS_6WidgetEb(_0.__C_data, grab);
}
bool dnd() {
return _BCD__ZN4fltk3dndEv();
}
void paste(bcd.bind.BoundClass receiver, bool clipboard = false) {
_BCD__ZN4fltk5pasteERNS_6WidgetEb(receiver.__C_data, clipboard);
}
void copy(char * stuff, int len, bool clipboard = false) {
_BCD__ZN4fltk4copyEPKcib(stuff, len, clipboard);
}
void focus(bcd.bind.BoundClass w) {
_BCD__ZN4fltk5focusERNS_6WidgetE(w.__C_data);
}
bcd.bind.BoundClass * focus() {
return _BCD__ZN4fltk5focusEv();
}
void pushed(bcd.bind.BoundClass w) {
_BCD__ZN4fltk6pushedERNS_6WidgetE(w.__C_data);
}
bcd.bind.BoundClass * pushed() {
return _BCD__ZN4fltk6pushedEv();
}
void belowmouse(bcd.bind.BoundClass w) {
_BCD__ZN4fltk10belowmouseERNS_6WidgetE(w.__C_data);
}
bcd.bind.BoundClass * belowmouse() {
return _BCD__ZN4fltk10belowmouseEv();
}
void add_event_handler(_BCD_func__249 h) {
_BCD__ZN4fltk17add_event_handlerEPFiiPNS_6WindowEE(h);
}
bool handle(int _0, bcd.bind.BoundClass * _1) {
return _BCD__ZN4fltk6handleEiPNS_6WindowE(_0, _1.__C_data);
}
bool warp_mouse(int _0, int _1) {
return _BCD__ZN4fltk10warp_mouseEii(_0, _1);
}
void get_mouse(int * _0, int * _1) {
_BCD__ZN4fltk9get_mouseERiS0_(_0, _1);
}
bool get_key_state(uint _0) {
return _BCD__ZN4fltk13get_key_stateEj(_0);
}
uint key(char * name) {
return _BCD__ZN4fltk3keyEPKc(name);
}
char * key_name(uint key) {
return _BCD__ZN4fltk8key_nameEj(key);
}
bool try_shortcut() {
return _BCD__ZN4fltk12try_shortcutEv();
}
ShortcutAssignment * list_matching_shortcuts(uint * count) {
return _BCD__ZN4fltk23list_matching_shortcutsERj(count);
}
ShortcutAssignment * list_shortcuts(uint * count) {
return _BCD__ZN4fltk14list_shortcutsERj(count);
}
ShortcutAssignment * list_shortcuts(bcd.bind.BoundClass * _0, uint * count) {
return _BCD__ZN4fltk14list_shortcutsEPKNS_6WidgetERj(_0.__C_data, count);
}
ShortcutAssignment * list_shortcuts(uint key, uint * count) {
return _BCD__ZN4fltk14list_shortcutsEjRj(key, count);
}
void compose_reset() {
_BCD__ZN4fltk13compose_resetEv();
}
bool compose(int * del) {
return _BCD__ZN4fltk7composeERi(del);
}
bool event_inside(bcd.bind.BoundClass _0) {
return _BCD__ZN4fltk12event_insideERKNS_9RectangleE(_0.__C_data);
}
int event_device() {
return _BCD__ZN4fltk12event_deviceEv();
}
float event_y_tilt() {
return _BCD__ZN4fltk12event_y_tiltEv();
}
float event_x_tilt() {
return _BCD__ZN4fltk12event_x_tiltEv();
}
float event_pressure() {
return _BCD__ZN4fltk14event_pressureEv();
}
uint event_key_repeated() {
return _BCD__ZN4fltk18event_key_repeatedEv();
}
uint event_length() {
return _BCD__ZN4fltk12event_lengthEv();
}
char * event_text() {
return _BCD__ZN4fltk10event_textEv();
}
bool event_key_state(uint _0) {
return _BCD__ZN4fltk15event_key_stateEj(_0);
}
uint event_button() {
return _BCD__ZN4fltk12event_buttonEv();
}
uint event_key() {
return _BCD__ZN4fltk9event_keyEv();
}
bool event_state(uint i) {
return _BCD__ZN4fltk11event_stateEj(i);
}
uint event_state() {
return _BCD__ZN4fltk11event_stateEv();
}
void event_is_click(bool _0) {
_BCD__ZN4fltk14event_is_clickEb(_0);
}
bool event_is_click() {
return _BCD__ZN4fltk14event_is_clickEv();
}
void event_clicks(int i) {
_BCD__ZN4fltk12event_clicksEi(i);
}
int event_clicks() {
return _BCD__ZN4fltk12event_clicksEv();
}
int event_y_root() {
return _BCD__ZN4fltk12event_y_rootEv();
}
int event_x_root() {
return _BCD__ZN4fltk12event_x_rootEv();
}
int event_dy() {
return _BCD__ZN4fltk8event_dyEv();
}
int event_dx() {
return _BCD__ZN4fltk8event_dxEv();
}
int event_y() {
return _BCD__ZN4fltk7event_yEv();
}
int event_x() {
return _BCD__ZN4fltk7event_xEv();
}
int event() {
return _BCD__ZN4fltk5eventEv();
}
void set_exit_modal_(bool x) {
_BCD_set__ZN4fltk11exit_modal_E(x);
}
bool get_exit_modal_() {
return _BCD_get__ZN4fltk11exit_modal_E();
}
void set_grab_(bool x) {
_BCD_set__ZN4fltk5grab_E(x);
}
bool get_grab_() {
return _BCD_get__ZN4fltk5grab_E();
}
void set_modal_(bcd.bind.BoundClass * x) {
_BCD_set__ZN4fltk6modal_E(x);
}
bcd.bind.BoundClass * get_modal_() {
return _BCD_get__ZN4fltk6modal_E();
}
void set_focus_(bcd.bind.BoundClass * x) {
_BCD_set__ZN4fltk6focus_E(x);
}
bcd.bind.BoundClass * get_focus_() {
return _BCD_get__ZN4fltk6focus_E();
}
void set_pushed_(bcd.bind.BoundClass * x) {
_BCD_set__ZN4fltk7pushed_E(x);
}
bcd.bind.BoundClass * get_pushed_() {
return _BCD_get__ZN4fltk7pushed_E();
}
void set_belowmouse_(bcd.bind.BoundClass * x) {
_BCD_set__ZN4fltk11belowmouse_E(x);
}
bcd.bind.BoundClass * get_belowmouse_() {
return _BCD_get__ZN4fltk11belowmouse_E();
}
void set_compose_state(int x) {
_BCD_set__ZN4fltk13compose_stateE(x);
}
int get_compose_state() {
return _BCD_get__ZN4fltk13compose_stateE();
}
void set_e_device(int x) {
_BCD_set__ZN4fltk8e_deviceE(x);
}
int get_e_device() {
return _BCD_get__ZN4fltk8e_deviceE();
}
void set_e_y_tilt(float x) {
_BCD_set__ZN4fltk8e_y_tiltE(x);
}
float get_e_y_tilt() {
return _BCD_get__ZN4fltk8e_y_tiltE();
}
void set_e_x_tilt(float x) {
_BCD_set__ZN4fltk8e_x_tiltE(x);
}
float get_e_x_tilt() {
return _BCD_get__ZN4fltk8e_x_tiltE();
}
void set_e_pressure(float x) {
_BCD_set__ZN4fltk10e_pressureE(x);
}
float get_e_pressure() {
return _BCD_get__ZN4fltk10e_pressureE();
}
void set_e_key_repeated(uint x) {
_BCD_set__ZN4fltk14e_key_repeatedE(x);
}
uint get_e_key_repeated() {
return _BCD_get__ZN4fltk14e_key_repeatedE();
}
void set_e_text(char * x) {
_BCD_set__ZN4fltk6e_textE(x);
}
char * get_e_text() {
return _BCD_get__ZN4fltk6e_textE();
}
void set_e_length(uint x) {
_BCD_set__ZN4fltk8e_lengthE(x);
}
uint get_e_length() {
return _BCD_get__ZN4fltk8e_lengthE();
}
void set_e_keysym(uint x) {
_BCD_set__ZN4fltk8e_keysymE(x);
}
uint get_e_keysym() {
return _BCD_get__ZN4fltk8e_keysymE();
}
void set_e_is_click(uint x) {
_BCD_set__ZN4fltk10e_is_clickE(x);
}
uint get_e_is_click() {
return _BCD_get__ZN4fltk10e_is_clickE();
}
void set_e_clicks(int x) {
_BCD_set__ZN4fltk8e_clicksE(x);
}
int get_e_clicks() {
return _BCD_get__ZN4fltk8e_clicksE();
}
void set_e_state(uint x) {
_BCD_set__ZN4fltk7e_stateE(x);
}
uint get_e_state() {
return _BCD_get__ZN4fltk7e_stateE();
}
void set_e_y_root(int x) {
_BCD_set__ZN4fltk8e_y_rootE(x);
}
int get_e_y_root() {
return _BCD_get__ZN4fltk8e_y_rootE();
}
void set_e_x_root(int x) {
_BCD_set__ZN4fltk8e_x_rootE(x);
}
int get_e_x_root() {
return _BCD_get__ZN4fltk8e_x_rootE();
}
void set_e_dy(int x) {
_BCD_set__ZN4fltk4e_dyE(x);
}
int get_e_dy() {
return _BCD_get__ZN4fltk4e_dyE();
}
void set_e_dx(int x) {
_BCD_set__ZN4fltk4e_dxE(x);
}
int get_e_dx() {
return _BCD_get__ZN4fltk4e_dxE();
}
void set_e_y(int x) {
_BCD_set__ZN4fltk3e_yE(x);
}
int get_e_y() {
return _BCD_get__ZN4fltk3e_yE();
}
void set_e_x(int x) {
_BCD_set__ZN4fltk3e_xE(x);
}
int get_e_x() {
return _BCD_get__ZN4fltk3e_xE();
}
void set_e_type(int x) {
_BCD_set__ZN4fltk6e_typeE(x);
}
int get_e_type() {
return _BCD_get__ZN4fltk6e_typeE();
}
uint BUTTON(int n) {
return _BCD__ZN4fltk6BUTTONEi(n);
}
