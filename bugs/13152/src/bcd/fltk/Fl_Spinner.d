/* THIS FILE GENERATED BY bcd.gen */
module bcd.fltk.Fl_Spinner;
public import bcd.bind;
public import bcd.fltk.Fl_Repeat_Button;
public import bcd.fltk.Fl_Button;
public import bcd.fltk.Fl;
public import bcd.fltk.Fl_Input;
public import bcd.fltk.Fl_Input_;
public import bcd.fltk.Fl_Group;
public import bcd.fltk.Fl_Widget;
public import bcd.fltk.Enumerations;
extern (C) void _BCD_delete_10Fl_Spinner(void *);
extern (C) void *_BCD_new__ZN10Fl_SpinnerC1EiiiiPKc(int, int, int, int, char *);
extern (C) char * _BCD__ZN10Fl_Spinner6formatEv(void *This);
extern (C) void _BCD__ZN10Fl_Spinner6formatEPKc(void *This, char *);
extern (C) double _BCD__ZNK10Fl_Spinner7maxinumEv(void *This);
extern (C) void _BCD__ZN10Fl_Spinner7maximumEd(void *This, double);
extern (C) double _BCD__ZNK10Fl_Spinner7mininumEv(void *This);
extern (C) void _BCD__ZN10Fl_Spinner7minimumEd(void *This, double);
extern (C) void _BCD__ZN10Fl_Spinner5rangeEdd(void *This, double, double);
extern (C) void _BCD__ZN10Fl_Spinner6resizeEiiii(void *This, int, int, int, int);
extern (C) double _BCD__ZNK10Fl_Spinner4stepEv(void *This);
extern (C) void _BCD__ZN10Fl_Spinner4stepEd(void *This, double);
extern (C) int _BCD__ZNK10Fl_Spinner9textcolorEv(void *This);
extern (C) void _BCD__ZN10Fl_Spinner9textcolorE8Fl_Color(void *This, int);
extern (C) char _BCD__ZNK10Fl_Spinner8textfontEv(void *This);
extern (C) void _BCD__ZN10Fl_Spinner8textfontEh(void *This, char);
extern (C) char _BCD__ZNK10Fl_Spinner8textsizeEv(void *This);
extern (C) void _BCD__ZN10Fl_Spinner8textsizeEh(void *This, char);
extern (C) double _BCD__ZNK10Fl_Spinner5valueEv(void *This);
extern (C) void _BCD__ZN10Fl_Spinner5valueEd(void *This, double);
extern (C) void _BCD_RI_10Fl_Spinner(void *cd, void *dd);
extern (C) void _BCD_delete_10Fl_Spinner__Fl_Spinner_R(void *This);
extern (C) void *_BCD_new__ZN10Fl_SpinnerC1EiiiiPKc_R(int, int, int, int, char *);
extern (C) int _BCD_R__ZN10Fl_Spinner6resizeEiiii__Fl_Spinner_R_CHECK(Fl_Spinner_R x) {
union dp {
void delegate(int, int, int, int) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.resize;
return cast(int) (d.f != &Fl_Spinner.resize);
}
extern (C) void _BCD_R__ZN10Fl_Spinner6resizeEiiii__Fl_Spinner_R(Fl_Spinner_R __D_class, int X, int Y, int W, int H) {
__D_class.resize(X, Y, W, H);
}
alias int function(void *, void *) _BCD_func__713;
alias int function(void *) _BCD_func__344;
alias int function(void *, long *, int) _BCD_func__346;
alias int function(void *, char *, uint) _BCD_func__348;
alias int function(void *, char *, uint) _BCD_func__350;
alias void function(void *) _BCD_func__909;
alias int function(void * *, char *) _BCD_func__910;
alias int function(char *, char * * *, uint *) _BCD_func__911;
alias int function(void *, char *, char *, char *, char *) _BCD_func__912;
alias void function(int, int, int, int, int) _BCD_func__461;
alias void function(Fl_Label *, int *, int *) _BCD_func__463;
alias void function(Fl_Label *, int, int, int, int, int) _BCD_func__465;
alias void function(Fl_Widget *, int) _BCD_func__475;
alias void function(Fl_Widget *) _BCD_func__477;
alias void function(Fl_Widget *, void *) _BCD_func__481;
class Fl_Spinner : Fl_Group {
this(ifloat ignore) {
super(ignore);
}
this(ifloat ignore, void *x) {
super(ignore);
__C_data = x;
__C_data_owned = false;
}
~this() {
if (__C_data && __C_data_owned) _BCD_delete_10Fl_Spinner(__C_data);
__C_data = null;
}
this(int X, int Y, int W, int H, char * L) {
super(cast(ifloat) 0);
__C_data = _BCD_new__ZN10Fl_SpinnerC1EiiiiPKc(X, Y, W, H, L);
__C_data_owned = true;
}
char * format() {
return _BCD__ZN10Fl_Spinner6formatEv(__C_data);
}
void format(char * f) {
_BCD__ZN10Fl_Spinner6formatEPKc(__C_data, f);
}
double maxinum() {
return _BCD__ZNK10Fl_Spinner7maxinumEv(__C_data);
}
void maximum(double m) {
_BCD__ZN10Fl_Spinner7maximumEd(__C_data, m);
}
double mininum() {
return _BCD__ZNK10Fl_Spinner7mininumEv(__C_data);
}
void minimum(double m) {
_BCD__ZN10Fl_Spinner7minimumEd(__C_data, m);
}
void range(double a, double b) {
_BCD__ZN10Fl_Spinner5rangeEdd(__C_data, a, b);
}
void resize(int X, int Y, int W, int H) {
_BCD__ZN10Fl_Spinner6resizeEiiii(__C_data, X, Y, W, H);
}
double step() {
return _BCD__ZNK10Fl_Spinner4stepEv(__C_data);
}
void step(double s) {
_BCD__ZN10Fl_Spinner4stepEd(__C_data, s);
}
int textcolor() {
return _BCD__ZNK10Fl_Spinner9textcolorEv(__C_data);
}
void textcolor(int c) {
_BCD__ZN10Fl_Spinner9textcolorE8Fl_Color(__C_data, c);
}
char textfont() {
return _BCD__ZNK10Fl_Spinner8textfontEv(__C_data);
}
void textfont(char f) {
_BCD__ZN10Fl_Spinner8textfontEh(__C_data, f);
}
char textsize() {
return _BCD__ZNK10Fl_Spinner8textsizeEv(__C_data);
}
void textsize(char s) {
_BCD__ZN10Fl_Spinner8textsizeEh(__C_data, s);
}
double value() {
return _BCD__ZNK10Fl_Spinner5valueEv(__C_data);
}
void value(double v) {
_BCD__ZN10Fl_Spinner5valueEd(__C_data, v);
}
}
class Fl_Spinner_R : Fl_Spinner {
~this() {
if (__C_data && __C_data_owned) _BCD_delete_10Fl_Spinner__Fl_Spinner_R(__C_data);
__C_data = null;
}
this(int X, int Y, int W, int H, char * L) {
super(cast(ifloat) 0);
__C_data = _BCD_new__ZN10Fl_SpinnerC1EiiiiPKc_R(X, Y, W, H, L);
__C_data_owned = true;
_BCD_RI_10Fl_Spinner(__C_data, cast(void *) this);
}
}
