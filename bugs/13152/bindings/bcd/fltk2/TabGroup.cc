/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/TabGroup.h"
extern "C" {
typedef unsigned char _BCD__9_uchar;
void _BCD_delete_N4fltk13TabGroupPagerE(fltk::TabGroupPager *This) {
delete This;
}
int _BCD__ZN4fltk13TabGroupPager16update_positionsEPNS_8TabGroupEiRiS3_S3_PiS4_(fltk::TabGroupPager *This, fltk::TabGroup * g, int numchildren, int & selected, int & cumulated_width, int & available_width, int * tab_pos, int * tab_width) {
return (This->update_positions(g, numchildren, selected, cumulated_width, available_width, tab_pos, tab_width));
}
bool _BCD__ZN4fltk13TabGroupPager9draw_tabsEPNS_8TabGroupEiPiS3_(fltk::TabGroupPager *This, fltk::TabGroup * g, int selected, int * tab_pos, int * tab_width) {
return (This->draw_tabs(g, selected, tab_pos, tab_width));
}
int _BCD__ZN4fltk13TabGroupPager5whichEPNS_8TabGroupEii(fltk::TabGroupPager *This, fltk::TabGroup * g, int m_x, int m_y) {
return (This->which(g, m_x, m_y));
}
fltk::TabGroupPager * _BCD__ZNK4fltk13TabGroupPager5cloneEv(fltk::TabGroupPager *This) {
return (This->clone());
}
char const * _BCD__ZNK4fltk13TabGroupPager9mode_nameEv(fltk::TabGroupPager *This) {
return (This->mode_name());
}
int _BCD__ZNK4fltk13TabGroupPager2idEv(fltk::TabGroupPager *This) {
return (This->id());
}
int _BCD__ZNK4fltk13TabGroupPager15available_widthEPNS_8TabGroupE(fltk::TabGroupPager *This, fltk::TabGroup * g) {
return (This->available_width(g));
}
int _BCD__ZNK4fltk13TabGroupPager6borderEv(fltk::TabGroupPager *This) {
return (This->border());
}
int _BCD__ZNK4fltk13TabGroupPager5slopeEv(fltk::TabGroupPager *This) {
return (This->slope());
}
int _BCD__ZNK4fltk13TabGroupPager11extra_spaceEv(fltk::TabGroupPager *This) {
return (This->extra_space());
}
void _BCD__ZN4fltk13TabGroupPager6borderEi(fltk::TabGroupPager *This, int v) {
(This->border(v));
}
void _BCD__ZN4fltk13TabGroupPager5slopeEi(fltk::TabGroupPager *This, int v) {
(This->slope(v));
}
void _BCD__ZN4fltk13TabGroupPager11extra_spaceEi(fltk::TabGroupPager *This, int v) {
(This->extra_space(v));
}
int _BCD__ZNK4fltk13TabGroupPager5shiftEv(fltk::TabGroupPager *This) {
return (This->shift());
}
void _BCD__ZN4fltk13TabGroupPager5shiftEi(fltk::TabGroupPager *This, int v) {
(This->shift(v));
}
int _BCD__ZNK4fltk13TabGroupPager7spacingEv(fltk::TabGroupPager *This) {
return (This->spacing());
}
void _BCD__ZN4fltk13TabGroupPager6noclipEb(fltk::TabGroupPager *This, bool v) {
(This->noclip(v));
}
void _BCD_delete_N4fltk8TabGroupE(fltk::TabGroup *This) {
delete This;
}
void _BCD_set__ZN4fltk8TabGroup13default_styleE(fltk::TabGroup *This, fltk::NamedStyle * x) {
This->default_style = x;
}
fltk::NamedStyle * _BCD_get__ZN4fltk8TabGroup13default_styleE(fltk::TabGroup *This) {
return This->default_style;
}
int _BCD__ZN4fltk8TabGroup6handleEi(fltk::TabGroup *This, int _0) {
return (This->handle(_0));
}
fltk::TabGroup *_BCD_new__ZN4fltk8TabGroupC1EiiiiPKcb(int _0, int _1, int _2, int _3, char const * _4, bool begin) {
return new fltk::TabGroup(_0, _1, _2, _3, _4, begin);
}
int _BCD__ZNK4fltk8TabGroup5valueEv(fltk::TabGroup *This) {
return (This->value());
}
bool _BCD__ZN4fltk8TabGroup5valueEi(fltk::TabGroup *This, int _0) {
return (This->value(_0));
}
int _BCD__ZN4fltk8TabGroup5whichEii(fltk::TabGroup *This, int event_x, int event_y) {
return (This->which(event_x, event_y));
}
fltk::Widget * _BCD__ZN4fltk8TabGroup14selected_childEv(fltk::TabGroup *This) {
return (This->selected_child());
}
bool _BCD__ZN4fltk8TabGroup14selected_childEPNS_6WidgetE(fltk::TabGroup *This, fltk::Widget * _0) {
return (This->selected_child(_0));
}
void _BCD__ZN4fltk8TabGroup16set_draw_outlineEb(fltk::TabGroup *This, bool draw_outline) {
(This->set_draw_outline(draw_outline));
}
void _BCD__ZN4fltk8TabGroup5pagerEPNS_13TabGroupPagerE(fltk::TabGroup *This, fltk::TabGroupPager * value) {
(This->pager(value));
}
fltk::TabGroupPager * _BCD__ZNK4fltk8TabGroup5pagerEv(fltk::TabGroup *This) {
return (This->pager());
}
void _BCD__ZN4fltk8TabGroup13default_pagerEPNS_13TabGroupPagerE(fltk::TabGroupPager * v) {
(fltk::TabGroup::default_pager(v));
}
void _BCD__ZN4fltk8TabGroup13default_pagerEi(int factory_pager_index) {
(fltk::TabGroup::default_pager(factory_pager_index));
}
int _BCD__ZN4fltk8TabGroup10tab_heightEv(fltk::TabGroup *This) {
return (This->tab_height());
}
int _BCD__ZN4fltk8TabGroup13tab_positionsEPiS1_(fltk::TabGroup *This, int * _0, int * _1) {
return (This->tab_positions(_0, _1));
}
void _BCD__ZN4fltk8TabGroup8draw_tabEiiiiPNS_6WidgetEi(fltk::TabGroup *This, int x1, int x2, int W, int H, fltk::Widget * o, int sel) {
(This->draw_tab(x1, x2, W, H, o, sel));
}
void _BCD__ZN4fltk8TabGroup19draw_tab_backgroundEv(fltk::TabGroup *This) {
(This->draw_tab_background());
}
int _BCD_R__ZN4fltk8TabGroup6handleEi__TabGroup_R_CHECK(void *);
int _BCD_R__ZN4fltk8TabGroup6handleEi__TabGroup_R(void *, int _0);
}
class TabGroup_R : fltk::TabGroup {
public:
void *__D_data;
int handle(int _0) {
if (_BCD_R__ZN4fltk8TabGroup6handleEi__TabGroup_R_CHECK(__D_data))
return _BCD_R__ZN4fltk8TabGroup6handleEi__TabGroup_R(__D_data, _0);
else
return fltk::TabGroup::handle(_0);
}
TabGroup_R(int _0, int _1, int _2, int _3, char const * _4, bool begin) : fltk::TabGroup(_0, _1, _2, _3, _4, begin) {}
};
extern "C" {
TabGroup_R *_BCD_new__ZN4fltk8TabGroupC1EiiiiPKcb_R(int _0, int _1, int _2, int _3, char const * _4, bool begin) {
return new TabGroup_R(_0, _1, _2, _3, _4, begin);
}
void _BCD_delete_N4fltk8TabGroupE__TabGroup_R(TabGroup_R *This) {
delete This;
}
void _BCD_RI_N4fltk8TabGroupE(TabGroup_R *cd, void *dd) {
cd->__D_data = dd;
}
int const _BCD_get__ZN4fltk12PAGER_SHRINKE() {
return fltk::PAGER_SHRINK;
}
int const _BCD_get__ZN4fltk10PAGER_MENUE() {
return fltk::PAGER_MENU;
}
typedef void (*_BCD_func__161)(fltk::Widget *, long int);
typedef _BCD_func__161 _BCD__162_Callback1;
typedef void (*_BCD_func__163)(fltk::Widget *);
typedef _BCD_func__163 _BCD__164_Callback0;
typedef void (*_BCD_func__167)(fltk::Widget *, void *);
typedef _BCD_func__167 _BCD__168_Callback;
typedef _BCD__168_Callback _BCD__166_Callback_p;
typedef bool (*_BCD_func__362)();
typedef _BCD_func__362 _BCD__179_Theme;
typedef fltk::Symbol * _BCD__232_Box;
typedef unsigned int _BCD__249_Color;
typedef int _BCD__252_Flags;
typedef _BCD__252_Flags _BCD__251_Align;
}
