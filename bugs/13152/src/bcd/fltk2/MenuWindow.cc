/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/MenuWindow.h"
extern "C" {
typedef unsigned char _BCD__9_uchar;
void _BCD_delete_N4fltk10MenuWindowE(fltk::MenuWindow *This) {
delete This;
}
void _BCD_set__ZN4fltk10MenuWindow13default_styleE(fltk::MenuWindow *This, fltk::NamedStyle * x) {
This->default_style = x;
}
fltk::NamedStyle * _BCD_get__ZN4fltk10MenuWindow13default_styleE(fltk::MenuWindow *This) {
return This->default_style;
}
void _BCD__ZN4fltk10MenuWindow6createEv(fltk::MenuWindow *This) {
(This->create());
}
void _BCD__ZN4fltk10MenuWindow5flushEv(fltk::MenuWindow *This) {
(This->flush());
}
void _BCD__ZN4fltk10MenuWindow7destroyEv(fltk::MenuWindow *This) {
(This->destroy());
}
int _BCD__ZN4fltk10MenuWindow7overlayEv(fltk::MenuWindow *This) {
return (This->overlay());
}
void _BCD__ZN4fltk10MenuWindow11set_overlayEv(fltk::MenuWindow *This) {
(This->set_overlay());
}
void _BCD__ZN4fltk10MenuWindow13clear_overlayEv(fltk::MenuWindow *This) {
(This->clear_overlay());
}
fltk::MenuWindow *_BCD_new__ZN4fltk10MenuWindowC1EiiPKc(int W, int H, char const * l) {
return new fltk::MenuWindow(W, H, l);
}
fltk::MenuWindow *_BCD_new__ZN4fltk10MenuWindowC1EiiiiPKc(int X, int Y, int W, int H, char const * l) {
return new fltk::MenuWindow(X, Y, W, H, l);
}
int _BCD_R__ZN4fltk10MenuWindow6createEv__MenuWindow_R_CHECK(void *);
void _BCD_R__ZN4fltk10MenuWindow6createEv__MenuWindow_R(void *);
int _BCD_R__ZN4fltk10MenuWindow5flushEv__MenuWindow_R_CHECK(void *);
void _BCD_R__ZN4fltk10MenuWindow5flushEv__MenuWindow_R(void *);
int _BCD_R__ZN4fltk10MenuWindow7destroyEv__MenuWindow_R_CHECK(void *);
void _BCD_R__ZN4fltk10MenuWindow7destroyEv__MenuWindow_R(void *);
}
class MenuWindow_R : fltk::MenuWindow {
public:
void *__D_data;
void create() {
if (_BCD_R__ZN4fltk10MenuWindow6createEv__MenuWindow_R_CHECK(__D_data))
_BCD_R__ZN4fltk10MenuWindow6createEv__MenuWindow_R(__D_data);
else
fltk::MenuWindow::create();
}
void flush() {
if (_BCD_R__ZN4fltk10MenuWindow5flushEv__MenuWindow_R_CHECK(__D_data))
_BCD_R__ZN4fltk10MenuWindow5flushEv__MenuWindow_R(__D_data);
else
fltk::MenuWindow::flush();
}
void destroy() {
if (_BCD_R__ZN4fltk10MenuWindow7destroyEv__MenuWindow_R_CHECK(__D_data))
_BCD_R__ZN4fltk10MenuWindow7destroyEv__MenuWindow_R(__D_data);
else
fltk::MenuWindow::destroy();
}
MenuWindow_R(int W, int H, char const * l) : fltk::MenuWindow(W, H, l) {}
MenuWindow_R(int X, int Y, int W, int H, char const * l) : fltk::MenuWindow(X, Y, W, H, l) {}
};
extern "C" {
MenuWindow_R *_BCD_new__ZN4fltk10MenuWindowC1EiiPKc_R(int W, int H, char const * l) {
return new MenuWindow_R(W, H, l);
}
MenuWindow_R *_BCD_new__ZN4fltk10MenuWindowC1EiiiiPKc_R(int X, int Y, int W, int H, char const * l) {
return new MenuWindow_R(X, Y, W, H, l);
}
void _BCD_delete_N4fltk10MenuWindowE__MenuWindow_R(MenuWindow_R *This) {
delete This;
}
void _BCD_RI_N4fltk10MenuWindowE(MenuWindow_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__158)(fltk::Widget *, long int);
typedef _BCD_func__158 _BCD__159_Callback1;
typedef void (*_BCD_func__160)(fltk::Widget *);
typedef _BCD_func__160 _BCD__161_Callback0;
typedef void (*_BCD_func__164)(fltk::Widget *, void *);
typedef _BCD_func__164 _BCD__165_Callback;
typedef _BCD__165_Callback _BCD__163_Callback_p;
typedef bool (*_BCD_func__400)();
typedef _BCD_func__400 _BCD__176_Theme;
typedef fltk::Symbol * _BCD__229_Box;
typedef unsigned int _BCD__246_Color;
typedef int _BCD__249_Flags;
typedef _BCD__249_Flags _BCD__248_Align;
}
