/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/events.h"
extern "C" {
typedef unsigned char _BCD__4_uchar;
void _BCD_delete_N4fltk18ShortcutAssignmentE(fltk::ShortcutAssignment *This) {
delete This;
}
void _BCD_set__ZN4fltk18ShortcutAssignment6widgetE(fltk::ShortcutAssignment *This, fltk::Widget * x) {
This->widget = x;
}
fltk::Widget * _BCD_get__ZN4fltk18ShortcutAssignment6widgetE(fltk::ShortcutAssignment *This) {
return This->widget;
}
void _BCD_set__ZN4fltk18ShortcutAssignment3keyE(fltk::ShortcutAssignment *This, unsigned int x) {
This->key = x;
}
unsigned int _BCD_get__ZN4fltk18ShortcutAssignment3keyE(fltk::ShortcutAssignment *This) {
return This->key;
}
}
class ShortcutAssignment_R : fltk::ShortcutAssignment {
public:
void *__D_data;
};
extern "C" {
void _BCD_delete_N4fltk18ShortcutAssignmentE__ShortcutAssignment_R(ShortcutAssignment_R *This) {
delete This;
}
void _BCD_RI_N4fltk18ShortcutAssignmentE(ShortcutAssignment_R *cd, void *dd) {
cd->__D_data = dd;
}
char const * _BCD__ZN4fltk10event_nameEi(int event) {
return (fltk::event_name(event));
}
bool _BCD__ZN4fltk15exit_modal_flagEv() {
return (fltk::exit_modal_flag());
}
void _BCD__ZN4fltk10exit_modalEv() {
(fltk::exit_modal());
}
bool _BCD__ZN4fltk4grabEv() {
return (fltk::grab());
}
fltk::Widget * _BCD__ZN4fltk5modalEv() {
return (fltk::modal());
}
void _BCD__ZN4fltk5modalEPNS_6WidgetEb(fltk::Widget * _0, bool grab) {
(fltk::modal(_0, grab));
}
bool _BCD__ZN4fltk3dndEv() {
return (fltk::dnd());
}
void _BCD__ZN4fltk5pasteERNS_6WidgetEb(fltk::Widget   & receiver, bool clipboard) {
(fltk::paste(receiver, clipboard));
}
void _BCD__ZN4fltk4copyEPKcib(char const * stuff, int len, bool clipboard) {
(fltk::copy(stuff, len, clipboard));
}
void _BCD__ZN4fltk5focusERNS_6WidgetE(fltk::Widget   & w) {
(fltk::focus(w));
}
fltk::Widget * _BCD__ZN4fltk5focusEv() {
return (fltk::focus());
}
void _BCD__ZN4fltk6pushedERNS_6WidgetE(fltk::Widget   & w) {
(fltk::pushed(w));
}
fltk::Widget * _BCD__ZN4fltk6pushedEv() {
return (fltk::pushed());
}
void _BCD__ZN4fltk10belowmouseERNS_6WidgetE(fltk::Widget   & w) {
(fltk::belowmouse(w));
}
fltk::Widget * _BCD__ZN4fltk10belowmouseEv() {
return (fltk::belowmouse());
}
typedef int (*_BCD_func__249)(int, fltk::Window *);
void _BCD__ZN4fltk17add_event_handlerEPFiiPNS_6WindowEE(_BCD_func__249 h) {
(fltk::add_event_handler(h));
}
bool _BCD__ZN4fltk6handleEiPNS_6WindowE(int _0, fltk::Window * _1) {
return (fltk::handle(_0, _1));
}
bool _BCD__ZN4fltk10warp_mouseEii(int _0, int _1) {
return (fltk::warp_mouse(_0, _1));
}
void _BCD__ZN4fltk9get_mouseERiS0_(int & _0, int & _1) {
(fltk::get_mouse(_0, _1));
}
bool _BCD__ZN4fltk13get_key_stateEj(unsigned int _0) {
return (fltk::get_key_state(_0));
}
unsigned int _BCD__ZN4fltk3keyEPKc(char const * name) {
return (fltk::key(name));
}
char const * _BCD__ZN4fltk8key_nameEj(unsigned int key) {
return (fltk::key_name(key));
}
bool _BCD__ZN4fltk12try_shortcutEv() {
return (fltk::try_shortcut());
}
fltk::ShortcutAssignment const * _BCD__ZN4fltk23list_matching_shortcutsERj(unsigned int & count) {
return (fltk::list_matching_shortcuts(count));
}
fltk::ShortcutAssignment const * _BCD__ZN4fltk14list_shortcutsERj(unsigned int & count) {
return (fltk::list_shortcuts(count));
}
fltk::ShortcutAssignment const * _BCD__ZN4fltk14list_shortcutsEPKNS_6WidgetERj(fltk::Widget const * _0, unsigned int & count) {
return (fltk::list_shortcuts(_0, count));
}
fltk::ShortcutAssignment const * _BCD__ZN4fltk14list_shortcutsEjRj(unsigned int key, unsigned int & count) {
return (fltk::list_shortcuts(key, count));
}
void _BCD__ZN4fltk13compose_resetEv() {
(fltk::compose_reset());
}
bool _BCD__ZN4fltk7composeERi(int & del) {
return (fltk::compose(del));
}
bool _BCD__ZN4fltk12event_insideERKNS_9RectangleE(fltk::Rectangle   const & _0) {
return (fltk::event_inside(_0));
}
int _BCD__ZN4fltk12event_deviceEv() {
return (fltk::event_device());
}
float _BCD__ZN4fltk12event_y_tiltEv() {
return (fltk::event_y_tilt());
}
float _BCD__ZN4fltk12event_x_tiltEv() {
return (fltk::event_x_tilt());
}
float _BCD__ZN4fltk14event_pressureEv() {
return (fltk::event_pressure());
}
unsigned int _BCD__ZN4fltk18event_key_repeatedEv() {
return (fltk::event_key_repeated());
}
unsigned int _BCD__ZN4fltk12event_lengthEv() {
return (fltk::event_length());
}
char const * _BCD__ZN4fltk10event_textEv() {
return (fltk::event_text());
}
bool _BCD__ZN4fltk15event_key_stateEj(unsigned int _0) {
return (fltk::event_key_state(_0));
}
unsigned int _BCD__ZN4fltk12event_buttonEv() {
return (fltk::event_button());
}
unsigned int _BCD__ZN4fltk9event_keyEv() {
return (fltk::event_key());
}
bool _BCD__ZN4fltk11event_stateEj(unsigned int i) {
return (fltk::event_state(i));
}
unsigned int _BCD__ZN4fltk11event_stateEv() {
return (fltk::event_state());
}
void _BCD__ZN4fltk14event_is_clickEb(bool _0) {
(fltk::event_is_click(_0));
}
bool _BCD__ZN4fltk14event_is_clickEv() {
return (fltk::event_is_click());
}
void _BCD__ZN4fltk12event_clicksEi(int i) {
(fltk::event_clicks(i));
}
int _BCD__ZN4fltk12event_clicksEv() {
return (fltk::event_clicks());
}
int _BCD__ZN4fltk12event_y_rootEv() {
return (fltk::event_y_root());
}
int _BCD__ZN4fltk12event_x_rootEv() {
return (fltk::event_x_root());
}
int _BCD__ZN4fltk8event_dyEv() {
return (fltk::event_dy());
}
int _BCD__ZN4fltk8event_dxEv() {
return (fltk::event_dx());
}
int _BCD__ZN4fltk7event_yEv() {
return (fltk::event_y());
}
int _BCD__ZN4fltk7event_xEv() {
return (fltk::event_x());
}
int _BCD__ZN4fltk5eventEv() {
return (fltk::event());
}
void _BCD_set__ZN4fltk11exit_modal_E(bool x) {
fltk::exit_modal_ = x;
}
bool _BCD_get__ZN4fltk11exit_modal_E() {
return fltk::exit_modal_;
}
void _BCD_set__ZN4fltk5grab_E(bool x) {
fltk::grab_ = x;
}
bool _BCD_get__ZN4fltk5grab_E() {
return fltk::grab_;
}
void _BCD_set__ZN4fltk6modal_E(fltk::Widget * x) {
fltk::modal_ = x;
}
fltk::Widget * _BCD_get__ZN4fltk6modal_E() {
return fltk::modal_;
}
void _BCD_set__ZN4fltk6focus_E(fltk::Widget * x) {
fltk::focus_ = x;
}
fltk::Widget * _BCD_get__ZN4fltk6focus_E() {
return fltk::focus_;
}
void _BCD_set__ZN4fltk7pushed_E(fltk::Widget * x) {
fltk::pushed_ = x;
}
fltk::Widget * _BCD_get__ZN4fltk7pushed_E() {
return fltk::pushed_;
}
void _BCD_set__ZN4fltk11belowmouse_E(fltk::Widget * x) {
fltk::belowmouse_ = x;
}
fltk::Widget * _BCD_get__ZN4fltk11belowmouse_E() {
return fltk::belowmouse_;
}
void _BCD_set__ZN4fltk13compose_stateE(int x) {
fltk::compose_state = x;
}
int _BCD_get__ZN4fltk13compose_stateE() {
return fltk::compose_state;
}
void _BCD_set__ZN4fltk8e_deviceE(int x) {
fltk::e_device = x;
}
int _BCD_get__ZN4fltk8e_deviceE() {
return fltk::e_device;
}
void _BCD_set__ZN4fltk8e_y_tiltE(float x) {
fltk::e_y_tilt = x;
}
float _BCD_get__ZN4fltk8e_y_tiltE() {
return fltk::e_y_tilt;
}
void _BCD_set__ZN4fltk8e_x_tiltE(float x) {
fltk::e_x_tilt = x;
}
float _BCD_get__ZN4fltk8e_x_tiltE() {
return fltk::e_x_tilt;
}
void _BCD_set__ZN4fltk10e_pressureE(float x) {
fltk::e_pressure = x;
}
float _BCD_get__ZN4fltk10e_pressureE() {
return fltk::e_pressure;
}
void _BCD_set__ZN4fltk14e_key_repeatedE(unsigned int x) {
fltk::e_key_repeated = x;
}
unsigned int _BCD_get__ZN4fltk14e_key_repeatedE() {
return fltk::e_key_repeated;
}
void _BCD_set__ZN4fltk6e_textE(char const * x) {
fltk::e_text = x;
}
char const * _BCD_get__ZN4fltk6e_textE() {
return fltk::e_text;
}
void _BCD_set__ZN4fltk8e_lengthE(unsigned int x) {
fltk::e_length = x;
}
unsigned int _BCD_get__ZN4fltk8e_lengthE() {
return fltk::e_length;
}
void _BCD_set__ZN4fltk8e_keysymE(unsigned int x) {
fltk::e_keysym = x;
}
unsigned int _BCD_get__ZN4fltk8e_keysymE() {
return fltk::e_keysym;
}
void _BCD_set__ZN4fltk10e_is_clickE(unsigned int x) {
fltk::e_is_click = x;
}
unsigned int _BCD_get__ZN4fltk10e_is_clickE() {
return fltk::e_is_click;
}
void _BCD_set__ZN4fltk8e_clicksE(int x) {
fltk::e_clicks = x;
}
int _BCD_get__ZN4fltk8e_clicksE() {
return fltk::e_clicks;
}
void _BCD_set__ZN4fltk7e_stateE(unsigned int x) {
fltk::e_state = x;
}
unsigned int _BCD_get__ZN4fltk7e_stateE() {
return fltk::e_state;
}
void _BCD_set__ZN4fltk8e_y_rootE(int x) {
fltk::e_y_root = x;
}
int _BCD_get__ZN4fltk8e_y_rootE() {
return fltk::e_y_root;
}
void _BCD_set__ZN4fltk8e_x_rootE(int x) {
fltk::e_x_root = x;
}
int _BCD_get__ZN4fltk8e_x_rootE() {
return fltk::e_x_root;
}
void _BCD_set__ZN4fltk4e_dyE(int x) {
fltk::e_dy = x;
}
int _BCD_get__ZN4fltk4e_dyE() {
return fltk::e_dy;
}
void _BCD_set__ZN4fltk4e_dxE(int x) {
fltk::e_dx = x;
}
int _BCD_get__ZN4fltk4e_dxE() {
return fltk::e_dx;
}
void _BCD_set__ZN4fltk3e_yE(int x) {
fltk::e_y = x;
}
int _BCD_get__ZN4fltk3e_yE() {
return fltk::e_y;
}
void _BCD_set__ZN4fltk3e_xE(int x) {
fltk::e_x = x;
}
int _BCD_get__ZN4fltk3e_xE() {
return fltk::e_x;
}
void _BCD_set__ZN4fltk6e_typeE(int x) {
fltk::e_type = x;
}
int _BCD_get__ZN4fltk6e_typeE() {
return fltk::e_type;
}
unsigned int _BCD__ZN4fltk6BUTTONEi(int n) {
return (fltk::BUTTON(n));
}
}
