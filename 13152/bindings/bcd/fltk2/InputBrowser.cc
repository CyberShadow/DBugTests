/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/InputBrowser.h"
extern "C" {
typedef unsigned char _BCD__11_uchar;
void _BCD_delete_N4fltk12InputBrowserE(fltk::InputBrowser *This) {
delete This;
}
void _BCD_set__ZN4fltk12InputBrowser13default_styleE(fltk::InputBrowser *This, fltk::NamedStyle * x) {
This->default_style = x;
}
fltk::NamedStyle * _BCD_get__ZN4fltk12InputBrowser13default_styleE(fltk::InputBrowser *This) {
return This->default_style;
}
fltk::InputBrowser *_BCD_new__ZN4fltk12InputBrowserC1EiiiiPKc(int _0, int _1, int _2, int _3, char const * _4) {
return new fltk::InputBrowser(_0, _1, _2, _3, _4);
}
void _BCD__ZN4fltk12InputBrowser5popupEv(fltk::InputBrowser *This) {
(This->popup());
}
void _BCD__ZN4fltk12InputBrowser10hide_popupEv(fltk::InputBrowser *This) {
(This->hide_popup());
}
int _BCD__ZN4fltk12InputBrowser5popupEiiii(fltk::InputBrowser *This, int x, int y, int w, int h) {
return (This->popup(x, y, w, h));
}
int _BCD__ZN4fltk12InputBrowser6handleEi(fltk::InputBrowser *This, int _0) {
return (This->handle(_0));
}
fltk::Widget * _BCD__ZNK4fltk12InputBrowser4itemEv(fltk::InputBrowser *This) {
return (This->item());
}
fltk::Widget * _BCD__ZNK4fltk12InputBrowser4itemEPNS_6WidgetE(fltk::InputBrowser *This, fltk::Widget * v) {
return (This->item(v));
}
void _BCD__ZN4fltk12InputBrowser4minwEi(fltk::InputBrowser *This, int i) {
(This->minw(i));
}
void _BCD__ZN4fltk12InputBrowser4minhEi(fltk::InputBrowser *This, int i) {
(This->minh(i));
}
int _BCD__ZN4fltk12InputBrowser4minwEv(fltk::InputBrowser *This) {
return (This->minw());
}
int _BCD__ZN4fltk12InputBrowser4minhEv(fltk::InputBrowser *This) {
return (This->minh());
}
void _BCD__ZN4fltk12InputBrowser4maxwEi(fltk::InputBrowser *This, int i) {
(This->maxw(i));
}
void _BCD__ZN4fltk12InputBrowser4maxhEi(fltk::InputBrowser *This, int i) {
(This->maxh(i));
}
int _BCD__ZN4fltk12InputBrowser4maxwEv(fltk::InputBrowser *This) {
return (This->maxw());
}
int _BCD__ZN4fltk12InputBrowser4maxhEv(fltk::InputBrowser *This) {
return (This->maxh());
}
void _BCD__ZN4fltk12InputBrowser4textEPKc(fltk::InputBrowser *This, char const * v) {
(This->text(v));
}
char const * _BCD__ZNK4fltk12InputBrowser4textEv(fltk::InputBrowser *This) {
return (This->text());
}
int _BCD_R__ZN4fltk12InputBrowser5popupEiiii__InputBrowser_R_CHECK(void *);
int _BCD_R__ZN4fltk12InputBrowser5popupEiiii__InputBrowser_R(void *, int x, int y, int w, int h);
int _BCD_R__ZN4fltk12InputBrowser6handleEi__InputBrowser_R_CHECK(void *);
int _BCD_R__ZN4fltk12InputBrowser6handleEi__InputBrowser_R(void *, int _0);
}
class InputBrowser_R : fltk::InputBrowser {
public:
void *__D_data;
InputBrowser_R(int _0, int _1, int _2, int _3, char const * _4) : fltk::InputBrowser(_0, _1, _2, _3, _4) {}
int popup(int x, int y, int w, int h) {
if (_BCD_R__ZN4fltk12InputBrowser5popupEiiii__InputBrowser_R_CHECK(__D_data))
return _BCD_R__ZN4fltk12InputBrowser5popupEiiii__InputBrowser_R(__D_data, x, y, w, h);
else
return fltk::InputBrowser::popup(x, y, w, h);
}
int handle(int _0) {
if (_BCD_R__ZN4fltk12InputBrowser6handleEi__InputBrowser_R_CHECK(__D_data))
return _BCD_R__ZN4fltk12InputBrowser6handleEi__InputBrowser_R(__D_data, _0);
else
return fltk::InputBrowser::handle(_0);
}
};
extern "C" {
InputBrowser_R *_BCD_new__ZN4fltk12InputBrowserC1EiiiiPKc_R(int _0, int _1, int _2, int _3, char const * _4) {
return new InputBrowser_R(_0, _1, _2, _3, _4);
}
void _BCD_delete_N4fltk12InputBrowserE__InputBrowser_R(InputBrowser_R *This) {
delete This;
}
void _BCD_RI_N4fltk12InputBrowserE(InputBrowser_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__165)(fltk::Widget *, long int);
typedef _BCD_func__165 _BCD__166_Callback1;
typedef void (*_BCD_func__167)(fltk::Widget *);
typedef _BCD_func__167 _BCD__168_Callback0;
typedef void (*_BCD_func__171)(fltk::Widget *, void *);
typedef _BCD_func__171 _BCD__172_Callback;
typedef _BCD__172_Callback _BCD__170_Callback_p;
typedef bool (*_BCD_func__468)();
typedef _BCD_func__468 _BCD__183_Theme;
typedef fltk::Symbol * _BCD__236_Box;
typedef unsigned int _BCD__253_Color;
typedef int _BCD__256_Flags;
typedef _BCD__256_Flags _BCD__255_Align;
}
