/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/ThumbWheel.h"
extern "C" {
typedef unsigned char _BCD__8_uchar;
void _BCD_delete_N4fltk10ThumbWheelE(fltk::ThumbWheel *This) {
delete This;
}
int _BCD__ZN4fltk10ThumbWheel6handleEi(fltk::ThumbWheel *This, int _0) {
return (This->handle(_0));
}
fltk::ThumbWheel *_BCD_new__ZN4fltk10ThumbWheelC1EiiiiPKc(int X, int Y, int W, int H, char const * L) {
return new fltk::ThumbWheel(X, Y, W, H, L);
}
int _BCD_R__ZN4fltk10ThumbWheel6handleEi__ThumbWheel_R_CHECK(void *);
int _BCD_R__ZN4fltk10ThumbWheel6handleEi__ThumbWheel_R(void *, int _0);
}
class ThumbWheel_R : fltk::ThumbWheel {
public:
void *__D_data;
int handle(int _0) {
if (_BCD_R__ZN4fltk10ThumbWheel6handleEi__ThumbWheel_R_CHECK(__D_data))
return _BCD_R__ZN4fltk10ThumbWheel6handleEi__ThumbWheel_R(__D_data, _0);
else
return fltk::ThumbWheel::handle(_0);
}
ThumbWheel_R(int X, int Y, int W, int H, char const * L) : fltk::ThumbWheel(X, Y, W, H, L) {}
};
extern "C" {
ThumbWheel_R *_BCD_new__ZN4fltk10ThumbWheelC1EiiiiPKc_R(int X, int Y, int W, int H, char const * L) {
return new ThumbWheel_R(X, Y, W, H, L);
}
void _BCD_delete_N4fltk10ThumbWheelE__ThumbWheel_R(ThumbWheel_R *This) {
delete This;
}
void _BCD_RI_N4fltk10ThumbWheelE(ThumbWheel_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__154)(fltk::Widget *, long int);
typedef _BCD_func__154 _BCD__155_Callback1;
typedef void (*_BCD_func__156)(fltk::Widget *);
typedef _BCD_func__156 _BCD__157_Callback0;
typedef void (*_BCD_func__160)(fltk::Widget *, void *);
typedef _BCD_func__160 _BCD__161_Callback;
typedef _BCD__161_Callback _BCD__159_Callback_p;
typedef bool (*_BCD_func__288)();
typedef _BCD_func__288 _BCD__172_Theme;
typedef fltk::Symbol * _BCD__225_Box;
typedef unsigned int _BCD__242_Color;
typedef int _BCD__245_Flags;
typedef _BCD__245_Flags _BCD__244_Align;
}
