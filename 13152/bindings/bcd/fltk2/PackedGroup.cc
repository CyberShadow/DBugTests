/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/PackedGroup.h"
extern "C" {
typedef unsigned char _BCD__8_uchar;
void _BCD_delete_N4fltk11PackedGroupE(fltk::PackedGroup *This) {
delete This;
}
void _BCD__ZN4fltk11PackedGroup6layoutEv(fltk::PackedGroup *This) {
(This->layout());
}
fltk::PackedGroup *_BCD_new__ZN4fltk11PackedGroupC1EiiiiPKcb(int x, int y, int w, int h, char const * l, bool begin) {
return new fltk::PackedGroup(x, y, w, h, l, begin);
}
int _BCD__ZNK4fltk11PackedGroup7spacingEv(fltk::PackedGroup *This) {
return (This->spacing());
}
void _BCD__ZN4fltk11PackedGroup7spacingEi(fltk::PackedGroup *This, int i) {
(This->spacing(i));
}
int _BCD__ZNK4fltk11PackedGroup11margin_leftEv(fltk::PackedGroup *This) {
return (This->margin_left());
}
void _BCD__ZN4fltk11PackedGroup11margin_leftEi(fltk::PackedGroup *This, int m) {
(This->margin_left(m));
}
int _BCD__ZNK4fltk11PackedGroup12margin_rightEv(fltk::PackedGroup *This) {
return (This->margin_right());
}
void _BCD__ZN4fltk11PackedGroup12margin_rightEi(fltk::PackedGroup *This, int m) {
(This->margin_right(m));
}
int _BCD__ZNK4fltk11PackedGroup10margin_topEv(fltk::PackedGroup *This) {
return (This->margin_top());
}
void _BCD__ZN4fltk11PackedGroup10margin_topEi(fltk::PackedGroup *This, int m) {
(This->margin_top(m));
}
int _BCD__ZNK4fltk11PackedGroup13margin_bottomEv(fltk::PackedGroup *This) {
return (This->margin_bottom());
}
void _BCD__ZN4fltk11PackedGroup13margin_bottomEi(fltk::PackedGroup *This, int m) {
(This->margin_bottom(m));
}
void _BCD__ZN4fltk11PackedGroup6marginEi(fltk::PackedGroup *This, int m) {
(This->margin(m));
}
int _BCD_R__ZN4fltk11PackedGroup6layoutEv__PackedGroup_R_CHECK(void *);
void _BCD_R__ZN4fltk11PackedGroup6layoutEv__PackedGroup_R(void *);
}
class PackedGroup_R : fltk::PackedGroup {
public:
void *__D_data;
void layout() {
if (_BCD_R__ZN4fltk11PackedGroup6layoutEv__PackedGroup_R_CHECK(__D_data))
_BCD_R__ZN4fltk11PackedGroup6layoutEv__PackedGroup_R(__D_data);
else
fltk::PackedGroup::layout();
}
PackedGroup_R(int x, int y, int w, int h, char const * l, bool begin) : fltk::PackedGroup(x, y, w, h, l, begin) {}
};
extern "C" {
PackedGroup_R *_BCD_new__ZN4fltk11PackedGroupC1EiiiiPKcb_R(int x, int y, int w, int h, char const * l, bool begin) {
return new PackedGroup_R(x, y, w, h, l, begin);
}
void _BCD_delete_N4fltk11PackedGroupE__PackedGroup_R(PackedGroup_R *This) {
delete This;
}
void _BCD_RI_N4fltk11PackedGroupE(PackedGroup_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__154)(fltk::Widget *, long int);
typedef _BCD_func__154 _BCD__155_Callback1;
typedef void (*_BCD_func__156)(fltk::Widget *);
typedef _BCD_func__156 _BCD__157_Callback0;
typedef void (*_BCD_func__160)(fltk::Widget *, void *);
typedef _BCD_func__160 _BCD__161_Callback;
typedef _BCD__161_Callback _BCD__159_Callback_p;
typedef bool (*_BCD_func__327)();
typedef _BCD_func__327 _BCD__172_Theme;
typedef fltk::Symbol * _BCD__225_Box;
typedef unsigned int _BCD__242_Color;
typedef int _BCD__245_Flags;
typedef _BCD__245_Flags _BCD__244_Align;
}
