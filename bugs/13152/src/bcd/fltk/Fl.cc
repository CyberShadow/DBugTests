/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "FL/Fl.H"
extern "C" {
void _BCD_delete_2Fl(Fl *This) {
delete This;
}
void _BCD_set__ZN2Fl8e_numberE(Fl *This, int x) {
This->e_number = x;
}
int _BCD_get__ZN2Fl8e_numberE(Fl *This) {
return This->e_number;
}
void _BCD_set__ZN2Fl3e_xE(Fl *This, int x) {
This->e_x = x;
}
int _BCD_get__ZN2Fl3e_xE(Fl *This) {
return This->e_x;
}
void _BCD_set__ZN2Fl3e_yE(Fl *This, int x) {
This->e_y = x;
}
int _BCD_get__ZN2Fl3e_yE(Fl *This) {
return This->e_y;
}
void _BCD_set__ZN2Fl8e_x_rootE(Fl *This, int x) {
This->e_x_root = x;
}
int _BCD_get__ZN2Fl8e_x_rootE(Fl *This) {
return This->e_x_root;
}
void _BCD_set__ZN2Fl8e_y_rootE(Fl *This, int x) {
This->e_y_root = x;
}
int _BCD_get__ZN2Fl8e_y_rootE(Fl *This) {
return This->e_y_root;
}
void _BCD_set__ZN2Fl4e_dxE(Fl *This, int x) {
This->e_dx = x;
}
int _BCD_get__ZN2Fl4e_dxE(Fl *This) {
return This->e_dx;
}
void _BCD_set__ZN2Fl4e_dyE(Fl *This, int x) {
This->e_dy = x;
}
int _BCD_get__ZN2Fl4e_dyE(Fl *This) {
return This->e_dy;
}
void _BCD_set__ZN2Fl7e_stateE(Fl *This, int x) {
This->e_state = x;
}
int _BCD_get__ZN2Fl7e_stateE(Fl *This) {
return This->e_state;
}
void _BCD_set__ZN2Fl8e_clicksE(Fl *This, int x) {
This->e_clicks = x;
}
int _BCD_get__ZN2Fl8e_clicksE(Fl *This) {
return This->e_clicks;
}
void _BCD_set__ZN2Fl10e_is_clickE(Fl *This, int x) {
This->e_is_click = x;
}
int _BCD_get__ZN2Fl10e_is_clickE(Fl *This) {
return This->e_is_click;
}
void _BCD_set__ZN2Fl8e_keysymE(Fl *This, int x) {
This->e_keysym = x;
}
int _BCD_get__ZN2Fl8e_keysymE(Fl *This) {
return This->e_keysym;
}
void _BCD_set__ZN2Fl6e_textE(Fl *This, char * x) {
This->e_text = x;
}
char * _BCD_get__ZN2Fl6e_textE(Fl *This) {
return This->e_text;
}
void _BCD_set__ZN2Fl8e_lengthE(Fl *This, int x) {
This->e_length = x;
}
int _BCD_get__ZN2Fl8e_lengthE(Fl *This) {
return This->e_length;
}
void _BCD_set__ZN2Fl11belowmouse_E(Fl *This, Fl_Widget * x) {
This->belowmouse_ = x;
}
Fl_Widget * _BCD_get__ZN2Fl11belowmouse_E(Fl *This) {
return This->belowmouse_;
}
void _BCD_set__ZN2Fl7pushed_E(Fl *This, Fl_Widget * x) {
This->pushed_ = x;
}
Fl_Widget * _BCD_get__ZN2Fl7pushed_E(Fl *This) {
return This->pushed_;
}
void _BCD_set__ZN2Fl6focus_E(Fl *This, Fl_Widget * x) {
This->focus_ = x;
}
Fl_Widget * _BCD_get__ZN2Fl6focus_E(Fl *This) {
return This->focus_;
}
void _BCD_set__ZN2Fl7damage_E(Fl *This, int x) {
This->damage_ = x;
}
int _BCD_get__ZN2Fl7damage_E(Fl *This) {
return This->damage_;
}
void _BCD_set__ZN2Fl16selection_owner_E(Fl *This, Fl_Widget * x) {
This->selection_owner_ = x;
}
Fl_Widget * _BCD_get__ZN2Fl16selection_owner_E(Fl *This) {
return This->selection_owner_;
}
void _BCD_set__ZN2Fl6modal_E(Fl *This, Fl_Window * x) {
This->modal_ = x;
}
Fl_Window * _BCD_get__ZN2Fl6modal_E(Fl *This) {
return This->modal_;
}
void _BCD_set__ZN2Fl5grab_E(Fl *This, Fl_Window * x) {
This->grab_ = x;
}
Fl_Window * _BCD_get__ZN2Fl5grab_E(Fl *This) {
return This->grab_;
}
void _BCD_set__ZN2Fl13compose_stateE(Fl *This, int x) {
This->compose_state = x;
}
int _BCD_get__ZN2Fl13compose_stateE(Fl *This) {
return This->compose_state;
}
void _BCD_set__ZN2Fl14visible_focus_E(Fl *This, int x) {
This->visible_focus_ = x;
}
int _BCD_get__ZN2Fl14visible_focus_E(Fl *This) {
return This->visible_focus_;
}
void _BCD_set__ZN2Fl13dnd_text_ops_E(Fl *This, int x) {
This->dnd_text_ops_ = x;
}
int _BCD_get__ZN2Fl13dnd_text_ops_E(Fl *This) {
return This->dnd_text_ops_;
}
void _BCD_set__ZN2Fl7scheme_E(Fl *This, char const * x) {
This->scheme_ = x;
}
char const * _BCD_get__ZN2Fl7scheme_E(Fl *This) {
return This->scheme_;
}
void _BCD_set__ZN2Fl10scheme_bg_E(Fl *This, Fl_Image * x) {
This->scheme_bg_ = x;
}
Fl_Image * _BCD_get__ZN2Fl10scheme_bg_E(Fl *This) {
return This->scheme_bg_;
}
char const * const _BCD_get__ZN2Fl4helpE(Fl *This) {
return This->help;
}
void _BCD__ZN2Fl6damageEi(int d) {
(Fl::damage(d));
}
double _BCD__ZN2Fl7versionEv() {
return (Fl::version());
}
int _BCD__ZN2Fl3argEiPPcRi(int _0, char * * _1, int & _2) {
return (Fl::arg(_0, _1, _2));
}
typedef int (*_BCD_func__391)(int, char * *, int &);
int _BCD__ZN2Fl4argsEiPPcRiPFiiS1_S2_E(int _0, char * * _1, int & _2, _BCD_func__391 _3) {
return (Fl::args(_0, _1, _2, _3));
}
void _BCD__ZN2Fl4argsEiPPc(int _0, char * * _1) {
(Fl::args(_0, _1));
}
void _BCD__ZN2Fl7displayEPKc(char const * _0) {
(Fl::display(_0));
}
int _BCD__ZN2Fl6visualEi(int _0) {
return (Fl::visual(_0));
}
void _BCD__ZN2Fl12own_colormapEv() {
(Fl::own_colormap());
}
void _BCD__ZN2Fl17get_system_colorsEv() {
(Fl::get_system_colors());
}
typedef unsigned char _BCD__53_uchar;
void _BCD__ZN2Fl10foregroundEhhh(_BCD__53_uchar _0, _BCD__53_uchar _1, _BCD__53_uchar _2) {
(Fl::foreground(_0, _1, _2));
}
void _BCD__ZN2Fl10backgroundEhhh(_BCD__53_uchar _0, _BCD__53_uchar _1, _BCD__53_uchar _2) {
(Fl::background(_0, _1, _2));
}
void _BCD__ZN2Fl11background2Ehhh(_BCD__53_uchar _0, _BCD__53_uchar _1, _BCD__53_uchar _2) {
(Fl::background2(_0, _1, _2));
}
int _BCD__ZN2Fl6schemeEPKc(char const * _0) {
return (Fl::scheme(_0));
}
char const * _BCD__ZN2Fl6schemeEv() {
return (Fl::scheme());
}
int _BCD__ZN2Fl13reload_schemeEv() {
return (Fl::reload_scheme());
}
int _BCD__ZN2Fl4waitEv() {
return (Fl::wait());
}
double _BCD__ZN2Fl4waitEd(double time) {
return (Fl::wait(time));
}
int _BCD__ZN2Fl5checkEv() {
return (Fl::check());
}
int _BCD__ZN2Fl5readyEv() {
return (Fl::ready());
}
int _BCD__ZN2Fl3runEv() {
return (Fl::run());
}
Fl_Widget * _BCD__ZN2Fl9readqueueEv() {
return (Fl::readqueue());
}
typedef void (*_BCD_func__341)(void *);
typedef _BCD_func__341 _BCD__5_Fl_Timeout_Handler;
void _BCD__ZN2Fl11add_timeoutEdPFvPvES0_(double t, _BCD__5_Fl_Timeout_Handler _1, void * _2) {
(Fl::add_timeout(t, _1, _2));
}
void _BCD__ZN2Fl14repeat_timeoutEdPFvPvES0_(double t, _BCD__5_Fl_Timeout_Handler _1, void * _2) {
(Fl::repeat_timeout(t, _1, _2));
}
int _BCD__ZN2Fl11has_timeoutEPFvPvES0_(_BCD__5_Fl_Timeout_Handler _0, void * _1) {
return (Fl::has_timeout(_0, _1));
}
void _BCD__ZN2Fl14remove_timeoutEPFvPvES0_(_BCD__5_Fl_Timeout_Handler _0, void * _1) {
(Fl::remove_timeout(_0, _1));
}
void _BCD__ZN2Fl9add_checkEPFvPvES0_(_BCD__5_Fl_Timeout_Handler _0, void * _1) {
(Fl::add_check(_0, _1));
}
void _BCD__ZN2Fl12remove_checkEPFvPvES0_(_BCD__5_Fl_Timeout_Handler _0, void * _1) {
(Fl::remove_check(_0, _1));
}
typedef void (*_BCD_func__392)(int, void *);
void _BCD__ZN2Fl6add_fdEiiPFviPvES0_(int fd, int when, _BCD_func__392 cb, void * _3) {
(Fl::add_fd(fd, when, cb, _3));
}
void _BCD__ZN2Fl6add_fdEiPFviPvES0_(int fd, _BCD_func__392 cb, void * _2) {
(Fl::add_fd(fd, cb, _2));
}
void _BCD__ZN2Fl9remove_fdEii(int _0, int when) {
(Fl::remove_fd(_0, when));
}
void _BCD__ZN2Fl9remove_fdEi(int _0) {
(Fl::remove_fd(_0));
}
void _BCD__ZN2Fl8add_idleEPFvPvES0_(_BCD_func__341 cb, void * _1) {
(Fl::add_idle(cb, _1));
}
int _BCD__ZN2Fl8has_idleEPFvPvES0_(_BCD_func__341 cb, void * _1) {
return (Fl::has_idle(cb, _1));
}
void _BCD__ZN2Fl11remove_idleEPFvPvES0_(_BCD_func__341 cb, void * _1) {
(Fl::remove_idle(cb, _1));
}
int _BCD__ZN2Fl6damageEv() {
return (Fl::damage());
}
void _BCD__ZN2Fl6redrawEv() {
(Fl::redraw());
}
void _BCD__ZN2Fl5flushEv() {
(Fl::flush());
}
Fl_Window * _BCD__ZN2Fl12first_windowEv() {
return (Fl::first_window());
}
void _BCD__ZN2Fl12first_windowEP9Fl_Window(Fl_Window * _0) {
(Fl::first_window(_0));
}
Fl_Window * _BCD__ZN2Fl11next_windowEPK9Fl_Window(Fl_Window const * _0) {
return (Fl::next_window(_0));
}
Fl_Window * _BCD__ZN2Fl5modalEv() {
return (Fl::modal());
}
Fl_Window * _BCD__ZN2Fl4grabEv() {
return (Fl::grab());
}
void _BCD__ZN2Fl4grabEP9Fl_Window(Fl_Window * _0) {
(Fl::grab(_0));
}
int _BCD__ZN2Fl5eventEv() {
return (Fl::event());
}
int _BCD__ZN2Fl7event_xEv() {
return (Fl::event_x());
}
int _BCD__ZN2Fl7event_yEv() {
return (Fl::event_y());
}
int _BCD__ZN2Fl12event_x_rootEv() {
return (Fl::event_x_root());
}
int _BCD__ZN2Fl12event_y_rootEv() {
return (Fl::event_y_root());
}
int _BCD__ZN2Fl8event_dxEv() {
return (Fl::event_dx());
}
int _BCD__ZN2Fl8event_dyEv() {
return (Fl::event_dy());
}
void _BCD__ZN2Fl9get_mouseERiS0_(int & _0, int & _1) {
(Fl::get_mouse(_0, _1));
}
int _BCD__ZN2Fl12event_clicksEv() {
return (Fl::event_clicks());
}
void _BCD__ZN2Fl12event_clicksEi(int i) {
(Fl::event_clicks(i));
}
int _BCD__ZN2Fl14event_is_clickEv() {
return (Fl::event_is_click());
}
void _BCD__ZN2Fl14event_is_clickEi(int i) {
(Fl::event_is_click(i));
}
int _BCD__ZN2Fl12event_buttonEv() {
return (Fl::event_button());
}
int _BCD__ZN2Fl11event_stateEv() {
return (Fl::event_state());
}
int _BCD__ZN2Fl11event_stateEi(int i) {
return (Fl::event_state(i));
}
int _BCD__ZN2Fl9event_keyEv() {
return (Fl::event_key());
}
int _BCD__ZN2Fl9event_keyEi(int _0) {
return (Fl::event_key(_0));
}
int _BCD__ZN2Fl7get_keyEi(int _0) {
return (Fl::get_key(_0));
}
char const * _BCD__ZN2Fl10event_textEv() {
return (Fl::event_text());
}
int _BCD__ZN2Fl12event_lengthEv() {
return (Fl::event_length());
}
int _BCD__ZN2Fl7composeERi(int & del) {
return (Fl::compose(del));
}
void _BCD__ZN2Fl13compose_resetEv() {
(Fl::compose_reset());
}
int _BCD__ZN2Fl12event_insideEiiii(int _0, int _1, int _2, int _3) {
return (Fl::event_inside(_0, _1, _2, _3));
}
int _BCD__ZN2Fl12event_insideEPK9Fl_Widget(Fl_Widget const * _0) {
return (Fl::event_inside(_0));
}
int _BCD__ZN2Fl13test_shortcutEi(int _0) {
return (Fl::test_shortcut(_0));
}
int _BCD__ZN2Fl6handleEiP9Fl_Window(int _0, Fl_Window * _1) {
return (Fl::handle(_0, _1));
}
Fl_Widget * _BCD__ZN2Fl10belowmouseEv() {
return (Fl::belowmouse());
}
void _BCD__ZN2Fl10belowmouseEP9Fl_Widget(Fl_Widget * _0) {
(Fl::belowmouse(_0));
}
Fl_Widget * _BCD__ZN2Fl6pushedEv() {
return (Fl::pushed());
}
void _BCD__ZN2Fl6pushedEP9Fl_Widget(Fl_Widget * _0) {
(Fl::pushed(_0));
}
Fl_Widget * _BCD__ZN2Fl5focusEv() {
return (Fl::focus());
}
void _BCD__ZN2Fl5focusEP9Fl_Widget(Fl_Widget * _0) {
(Fl::focus(_0));
}
typedef int (*_BCD_func__395)(int);
void _BCD__ZN2Fl11add_handlerEPFiiE(_BCD_func__395 h) {
(Fl::add_handler(h));
}
void _BCD__ZN2Fl14remove_handlerEPFiiE(_BCD_func__395 h) {
(Fl::remove_handler(h));
}
void _BCD__ZN2Fl4copyEPKcii(char const * stuff, int len, int clipboard) {
(Fl::copy(stuff, len, clipboard));
}
void _BCD__ZN2Fl5pasteER9Fl_Widgeti(Fl_Widget   & receiver, int clipboard) {
(Fl::paste(receiver, clipboard));
}
int _BCD__ZN2Fl3dndEv() {
return (Fl::dnd());
}
Fl_Widget * _BCD__ZN2Fl15selection_ownerEv() {
return (Fl::selection_owner());
}
void _BCD__ZN2Fl15selection_ownerEP9Fl_Widget(Fl_Widget * _0) {
(Fl::selection_owner(_0));
}
void _BCD__ZN2Fl9selectionER9Fl_WidgetPKci(Fl_Widget   & owner, char const * _1, int len) {
(Fl::selection(owner, _1, len));
}
void _BCD__ZN2Fl5pasteER9Fl_Widget(Fl_Widget   & receiver) {
(Fl::paste(receiver));
}
int _BCD__ZN2Fl1xEv() {
return (Fl::x());
}
int _BCD__ZN2Fl1yEv() {
return (Fl::y());
}
int _BCD__ZN2Fl1wEv() {
return (Fl::w());
}
int _BCD__ZN2Fl1hEv() {
return (Fl::h());
}
int _BCD__ZN2Fl12screen_countEv() {
return (Fl::screen_count());
}
void _BCD__ZN2Fl11screen_xywhERiS0_S0_S0_(int & x, int & y, int & w, int & h) {
(Fl::screen_xywh(x, y, w, h));
}
void _BCD__ZN2Fl11screen_xywhERiS0_S0_S0_ii(int & x, int & y, int & w, int & h, int mx, int my) {
(Fl::screen_xywh(x, y, w, h, mx, my));
}
void _BCD__ZN2Fl11screen_xywhERiS0_S0_S0_i(int & x, int & y, int & w, int & h, int n) {
(Fl::screen_xywh(x, y, w, h, n));
}
void _BCD__ZN2Fl9set_colorE8Fl_Colorhhh(enum Fl_Color _0, _BCD__53_uchar _1, _BCD__53_uchar _2, _BCD__53_uchar _3) {
(Fl::set_color(_0, _1, _2, _3));
}
void _BCD__ZN2Fl9set_colorE8Fl_Colorj(enum Fl_Color _0, unsigned int _1) {
(Fl::set_color(_0, _1));
}
unsigned int _BCD__ZN2Fl9get_colorE8Fl_Color(enum Fl_Color _0) {
return (Fl::get_color(_0));
}
void _BCD__ZN2Fl9get_colorE8Fl_ColorRhS1_S1_(enum Fl_Color _0, _BCD__53_uchar & _1, _BCD__53_uchar & _2, _BCD__53_uchar & _3) {
(Fl::get_color(_0, _1, _2, _3));
}
void _BCD__ZN2Fl10free_colorE8Fl_Colori(enum Fl_Color _0, int overlay) {
(Fl::free_color(_0, overlay));
}
char const * _BCD__ZN2Fl8get_fontE7Fl_Font(enum Fl_Font _0) {
return (Fl::get_font(_0));
}
char const * _BCD__ZN2Fl13get_font_nameE7Fl_FontPi(enum Fl_Font _0, int * attributes) {
return (Fl::get_font_name(_0, attributes));
}
int _BCD__ZN2Fl14get_font_sizesE7Fl_FontRPi(enum Fl_Font _0, int * & sizep) {
return (Fl::get_font_sizes(_0, sizep));
}
void _BCD__ZN2Fl8set_fontE7Fl_FontPKc(enum Fl_Font _0, char const * _1) {
(Fl::set_font(_0, _1));
}
void _BCD__ZN2Fl8set_fontE7Fl_FontS0_(enum Fl_Font _0, enum Fl_Font _1) {
(Fl::set_font(_0, _1));
}
enum Fl_Font _BCD__ZN2Fl9set_fontsEPKc(char const * _0) {
return (Fl::set_fonts(_0));
}
typedef void (*_BCD_func__10)(Fl_Label const *, int, int, int, int, enum Fl_Align);
typedef _BCD_func__10 _BCD__11_Fl_Label_Draw_F;
typedef void (*_BCD_func__8)(Fl_Label const *, int &, int &);
typedef _BCD_func__8 _BCD__9_Fl_Label_Measure_F;
void _BCD__ZN2Fl13set_labeltypeE12Fl_LabeltypePFvPK8Fl_Labeliiii8Fl_AlignEPFvS3_RiS7_E(enum Fl_Labeltype _0, _BCD__11_Fl_Label_Draw_F _1, _BCD__9_Fl_Label_Measure_F _2) {
(Fl::set_labeltype(_0, _1, _2));
}
typedef void (*_BCD_func__6)(int, int, int, int, enum Fl_Color);
typedef _BCD_func__6 _BCD__7_Fl_Box_Draw_F;
_BCD__7_Fl_Box_Draw_F _BCD__ZN2Fl11get_boxtypeE10Fl_Boxtype(enum Fl_Boxtype _0) {
return (Fl::get_boxtype(_0));
}
void _BCD__ZN2Fl11set_boxtypeE10Fl_BoxtypePFviiii8Fl_ColorEhhhh(enum Fl_Boxtype _0, _BCD__7_Fl_Box_Draw_F _1, _BCD__53_uchar _2, _BCD__53_uchar _3, _BCD__53_uchar _4, _BCD__53_uchar _5) {
(Fl::set_boxtype(_0, _1, _2, _3, _4, _5));
}
void _BCD__ZN2Fl11set_boxtypeE10Fl_BoxtypeS0_(enum Fl_Boxtype _0, enum Fl_Boxtype from) {
(Fl::set_boxtype(_0, from));
}
int _BCD__ZN2Fl6box_dxE10Fl_Boxtype(enum Fl_Boxtype _0) {
return (Fl::box_dx(_0));
}
int _BCD__ZN2Fl6box_dyE10Fl_Boxtype(enum Fl_Boxtype _0) {
return (Fl::box_dy(_0));
}
int _BCD__ZN2Fl6box_dwE10Fl_Boxtype(enum Fl_Boxtype _0) {
return (Fl::box_dw(_0));
}
int _BCD__ZN2Fl6box_dhE10Fl_Boxtype(enum Fl_Boxtype _0) {
return (Fl::box_dh(_0));
}
int _BCD__ZN2Fl15draw_box_activeEv() {
return (Fl::draw_box_active());
}
void _BCD__ZN2Fl15default_atcloseEP9Fl_WindowPv(Fl_Window * _0, void * _1) {
(Fl::default_atclose(_0, _1));
}
typedef void (*_BCD_func__389)(Fl_Window *, void *);
void _BCD__ZN2Fl11set_atcloseEPFvP9Fl_WindowPvE(_BCD_func__389 f) {
(Fl::set_atclose(f));
}
int _BCD__ZN2Fl11event_shiftEv() {
return (Fl::event_shift());
}
int _BCD__ZN2Fl10event_ctrlEv() {
return (Fl::event_ctrl());
}
int _BCD__ZN2Fl9event_altEv() {
return (Fl::event_alt());
}
int _BCD__ZN2Fl13event_buttonsEv() {
return (Fl::event_buttons());
}
int _BCD__ZN2Fl13event_button1Ev() {
return (Fl::event_button1());
}
int _BCD__ZN2Fl13event_button2Ev() {
return (Fl::event_button2());
}
int _BCD__ZN2Fl13event_button3Ev() {
return (Fl::event_button3());
}
typedef void (*_BCD_func__387)();
void _BCD__ZN2Fl8set_idleEPFvvE(_BCD_func__387 cb) {
(Fl::set_idle(cb));
}
void _BCD__ZN2Fl7releaseEv() {
(Fl::release());
}
void _BCD__ZN2Fl13visible_focusEi(int v) {
(Fl::visible_focus(v));
}
int _BCD__ZN2Fl13visible_focusEv() {
return (Fl::visible_focus());
}
void _BCD__ZN2Fl12dnd_text_opsEi(int v) {
(Fl::dnd_text_ops(v));
}
int _BCD__ZN2Fl12dnd_text_opsEv() {
return (Fl::dnd_text_ops());
}
void _BCD__ZN2Fl13delete_widgetEP9Fl_Widget(Fl_Widget * w) {
(Fl::delete_widget(w));
}
void _BCD__ZN2Fl18do_widget_deletionEv() {
(Fl::do_widget_deletion());
}
}
class Fl_R : Fl {
public:
void *__D_data;
};
extern "C" {
void _BCD_delete_2Fl__Fl_R(Fl_R *This) {
delete This;
}
void _BCD_RI_2Fl(Fl_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef long unsigned int _BCD__51_ulong;
}
