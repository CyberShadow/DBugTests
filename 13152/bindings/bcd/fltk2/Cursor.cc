/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/Cursor.h"
extern "C" {
typedef unsigned char _BCD__4_uchar;
fltk::Cursor * const _BCD_get__ZN4fltk11CURSOR_NONEE() {
return fltk::CURSOR_NONE;
}
fltk::Cursor * const _BCD_get__ZN4fltk9CURSOR_NOE() {
return fltk::CURSOR_NO;
}
fltk::Cursor * const _BCD_get__ZN4fltk11CURSOR_NESWE() {
return fltk::CURSOR_NESW;
}
fltk::Cursor * const _BCD_get__ZN4fltk11CURSOR_NWSEE() {
return fltk::CURSOR_NWSE;
}
fltk::Cursor * const _BCD_get__ZN4fltk9CURSOR_WEE() {
return fltk::CURSOR_WE;
}
fltk::Cursor * const _BCD_get__ZN4fltk9CURSOR_NSE() {
return fltk::CURSOR_NS;
}
fltk::Cursor * const _BCD_get__ZN4fltk11CURSOR_MOVEE() {
return fltk::CURSOR_MOVE;
}
fltk::Cursor * const _BCD_get__ZN4fltk11CURSOR_HELPE() {
return fltk::CURSOR_HELP;
}
fltk::Cursor * const _BCD_get__ZN4fltk11CURSOR_HANDE() {
return fltk::CURSOR_HAND;
}
fltk::Cursor * const _BCD_get__ZN4fltk13CURSOR_INSERTE() {
return fltk::CURSOR_INSERT;
}
fltk::Cursor * const _BCD_get__ZN4fltk11CURSOR_WAITE() {
return fltk::CURSOR_WAIT;
}
fltk::Cursor * const _BCD_get__ZN4fltk12CURSOR_CROSSE() {
return fltk::CURSOR_CROSS;
}
fltk::Cursor * const _BCD_get__ZN4fltk12CURSOR_ARROWE() {
return fltk::CURSOR_ARROW;
}
fltk::Cursor * const _BCD_get__ZN4fltk14CURSOR_DEFAULTE() {
return fltk::CURSOR_DEFAULT;
}
fltk::Cursor * _BCD__ZN4fltk6cursorEPv(void * raw) {
return (fltk::cursor(raw));
}
fltk::Cursor * _BCD__ZN4fltk6cursorEPNS_5ImageEii(fltk::Image * _0, int x, int y) {
return (fltk::cursor(_0, x, y));
}
}
