/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/Clock.h"
extern "C" {
typedef unsigned char _BCD__8_uchar;
void _BCD_delete_N4fltk5ClockE(fltk::Clock *This) {
delete This;
}
void _BCD_set__ZN4fltk5Clock13default_styleE(fltk::Clock *This, fltk::NamedStyle * x) {
This->default_style = x;
}
fltk::NamedStyle * _BCD_get__ZN4fltk5Clock13default_styleE(fltk::Clock *This) {
return This->default_style;
}
int _BCD__ZN4fltk5Clock6handleEi(fltk::Clock *This, int _0) {
return (This->handle(_0));
}
void _BCD__ZN4fltk5Clock6updateEv(fltk::Clock *This) {
(This->update());
}
fltk::Clock *_BCD_new__ZN4fltk5ClockC1EiiiiPKc(int x, int y, int w, int h, char const * l) {
return new fltk::Clock(x, y, w, h, l);
}
int _BCD_R__ZN4fltk5Clock6handleEi__Clock_R_CHECK(void *);
int _BCD_R__ZN4fltk5Clock6handleEi__Clock_R(void *, int _0);
}
class Clock_R : fltk::Clock {
public:
void *__D_data;
int handle(int _0) {
if (_BCD_R__ZN4fltk5Clock6handleEi__Clock_R_CHECK(__D_data))
return _BCD_R__ZN4fltk5Clock6handleEi__Clock_R(__D_data, _0);
else
return fltk::Clock::handle(_0);
}
Clock_R(int x, int y, int w, int h, char const * l) : fltk::Clock(x, y, w, h, l) {}
};
extern "C" {
Clock_R *_BCD_new__ZN4fltk5ClockC1EiiiiPKc_R(int x, int y, int w, int h, char const * l) {
return new Clock_R(x, y, w, h, l);
}
void _BCD_delete_N4fltk5ClockE__Clock_R(Clock_R *This) {
delete This;
}
void _BCD_RI_N4fltk5ClockE(Clock_R *cd, void *dd) {
cd->__D_data = dd;
}
void _BCD_delete_N4fltk11ClockOutputE(fltk::ClockOutput *This) {
delete This;
}
fltk::ClockOutput *_BCD_new__ZN4fltk11ClockOutputC1EiiiiPKc(int x, int y, int w, int h, char const * l) {
return new fltk::ClockOutput(x, y, w, h, l);
}
void _BCD__ZN4fltk11ClockOutput5valueEm(fltk::ClockOutput *This, long unsigned int v) {
(This->value(v));
}
void _BCD__ZN4fltk11ClockOutput5valueEiii(fltk::ClockOutput *This, int _0, int _1, int _2) {
(This->value(_0, _1, _2));
}
long unsigned int _BCD__ZNK4fltk11ClockOutput5valueEv(fltk::ClockOutput *This) {
return (This->value());
}
int _BCD__ZNK4fltk11ClockOutput4hourEv(fltk::ClockOutput *This) {
return (This->hour());
}
int _BCD__ZNK4fltk11ClockOutput6minuteEv(fltk::ClockOutput *This) {
return (This->minute());
}
int _BCD__ZNK4fltk11ClockOutput6secondEv(fltk::ClockOutput *This) {
return (This->second());
}
}
class ClockOutput_R : fltk::ClockOutput {
public:
void *__D_data;
ClockOutput_R(int x, int y, int w, int h, char const * l) : fltk::ClockOutput(x, y, w, h, l) {}
};
extern "C" {
ClockOutput_R *_BCD_new__ZN4fltk11ClockOutputC1EiiiiPKc_R(int x, int y, int w, int h, char const * l) {
return new ClockOutput_R(x, y, w, h, l);
}
void _BCD_delete_N4fltk11ClockOutputE__ClockOutput_R(ClockOutput_R *This) {
delete This;
}
void _BCD_RI_N4fltk11ClockOutputE(ClockOutput_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__154)(fltk::Widget *, long int);
typedef _BCD_func__154 _BCD__155_Callback1;
typedef void (*_BCD_func__156)(fltk::Widget *);
typedef _BCD_func__156 _BCD__157_Callback0;
typedef void (*_BCD_func__160)(fltk::Widget *, void *);
typedef _BCD_func__160 _BCD__161_Callback;
typedef _BCD__161_Callback _BCD__159_Callback_p;
typedef bool (*_BCD_func__277)();
typedef _BCD_func__277 _BCD__172_Theme;
typedef fltk::Symbol * _BCD__225_Box;
typedef unsigned int _BCD__242_Color;
typedef int _BCD__245_Flags;
typedef _BCD__245_Flags _BCD__244_Align;
}
