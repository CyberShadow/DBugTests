/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/Scrollbar.h"
extern "C" {
typedef unsigned char _BCD__9_uchar;
void _BCD_delete_N4fltk9ScrollbarE(fltk::Scrollbar *This) {
delete This;
}
void _BCD_set__ZN4fltk9Scrollbar13default_styleE(fltk::Scrollbar *This, fltk::NamedStyle * x) {
This->default_style = x;
}
fltk::NamedStyle * _BCD_get__ZN4fltk9Scrollbar13default_styleE(fltk::Scrollbar *This) {
return This->default_style;
}
fltk::Scrollbar *_BCD_new__ZN4fltk9ScrollbarC1EiiiiPKc(int x, int y, int w, int h, char const * l) {
return new fltk::Scrollbar(x, y, w, h, l);
}
int _BCD__ZNK4fltk9Scrollbar5valueEv(fltk::Scrollbar *This) {
return (This->value());
}
bool _BCD__ZN4fltk9Scrollbar5valueEi(fltk::Scrollbar *This, int position) {
return (This->value(position));
}
int _BCD__ZN4fltk9Scrollbar6handleEi(fltk::Scrollbar *This, int _0) {
return (This->handle(_0));
}
int _BCD__ZNK4fltk9Scrollbar8pagesizeEv(fltk::Scrollbar *This) {
return (This->pagesize());
}
void _BCD__ZN4fltk9Scrollbar8pagesizeEi(fltk::Scrollbar *This, int a) {
(This->pagesize(a));
}
int _BCD_R__ZN4fltk9Scrollbar6handleEi__Scrollbar_R_CHECK(void *);
int _BCD_R__ZN4fltk9Scrollbar6handleEi__Scrollbar_R(void *, int _0);
}
class Scrollbar_R : fltk::Scrollbar {
public:
void *__D_data;
Scrollbar_R(int x, int y, int w, int h, char const * l) : fltk::Scrollbar(x, y, w, h, l) {}
int handle(int _0) {
if (_BCD_R__ZN4fltk9Scrollbar6handleEi__Scrollbar_R_CHECK(__D_data))
return _BCD_R__ZN4fltk9Scrollbar6handleEi__Scrollbar_R(__D_data, _0);
else
return fltk::Scrollbar::handle(_0);
}
};
extern "C" {
Scrollbar_R *_BCD_new__ZN4fltk9ScrollbarC1EiiiiPKc_R(int x, int y, int w, int h, char const * l) {
return new Scrollbar_R(x, y, w, h, l);
}
void _BCD_delete_N4fltk9ScrollbarE__Scrollbar_R(Scrollbar_R *This) {
delete This;
}
void _BCD_RI_N4fltk9ScrollbarE(Scrollbar_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__156)(fltk::Widget *, long int);
typedef _BCD_func__156 _BCD__157_Callback1;
typedef void (*_BCD_func__158)(fltk::Widget *);
typedef _BCD_func__158 _BCD__159_Callback0;
typedef void (*_BCD_func__162)(fltk::Widget *, void *);
typedef _BCD_func__162 _BCD__163_Callback;
typedef _BCD__163_Callback _BCD__161_Callback_p;
typedef bool (*_BCD_func__319)();
typedef _BCD_func__319 _BCD__174_Theme;
typedef fltk::Symbol * _BCD__227_Box;
typedef unsigned int _BCD__244_Color;
typedef int _BCD__247_Flags;
typedef _BCD__247_Flags _BCD__246_Align;
}
