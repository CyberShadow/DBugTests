/* THIS FILE GENERATED BY bcd.gen */
module bcd.fltk2.ThumbWheel;
align(4):
public import bcd.bind;
public import bcd.fltk2.Valuator;
public import bcd.fltk2.Widget;
public import bcd.fltk2.Style;
public import bcd.fltk2.FL_API;
public import bcd.fltk2.Rectangle;
public import bcd.fltk2.Color;
public import bcd.fltk2.Flags;
extern (C) void _BCD_delete_N4fltk10ThumbWheelE(void *);
extern (C) int _BCD__ZN4fltk10ThumbWheel6handleEi(void *This, int);
extern (C) void *_BCD_new__ZN4fltk10ThumbWheelC1EiiiiPKc(int, int, int, int, char *);
extern (C) void _BCD_RI_N4fltk10ThumbWheelE(void *cd, void *dd);
extern (C) void _BCD_delete_N4fltk10ThumbWheelE__ThumbWheel_R(void *This);
extern (C) int _BCD_R__ZN4fltk10ThumbWheel6handleEi__ThumbWheel_R_CHECK(ThumbWheel_R x) {
union dp {
int delegate(int) d;
struct { void *o; void *f; }
}
dp d; d.d = &x.handle;
return cast(int) (d.f != &ThumbWheel.handle);
}
extern (C) int _BCD_R__ZN4fltk10ThumbWheel6handleEi__ThumbWheel_R(ThumbWheel_R __D_class, int _0) {
return __D_class.handle(_0);
}
extern (C) void *_BCD_new__ZN4fltk10ThumbWheelC1EiiiiPKc_R(int, int, int, int, char *);
alias void function(Widget *, int) _BCD_func__154;
alias void function(Widget *) _BCD_func__156;
alias void function(Widget *, void *) _BCD_func__160;
alias bool function() _BCD_func__288;
class ThumbWheel : Valuator {
this(ifloat ignore) {
super(ignore);
}
this(ifloat ignore, void *x) {
super(ignore);
__C_data = x;
__C_data_owned = false;
}
~this() {
if (__C_data && __C_data_owned) _BCD_delete_N4fltk10ThumbWheelE(__C_data);
__C_data = null;
}
int handle(int _0) {
return _BCD__ZN4fltk10ThumbWheel6handleEi(__C_data, _0);
}
this(int X, int Y, int W, int H, char * L = null) {
super(cast(ifloat) 0);
__C_data = _BCD_new__ZN4fltk10ThumbWheelC1EiiiiPKc(X, Y, W, H, L);
__C_data_owned = true;
}
}
class ThumbWheel_R : ThumbWheel {
~this() {
if (__C_data && __C_data_owned) _BCD_delete_N4fltk10ThumbWheelE__ThumbWheel_R(__C_data);
__C_data = null;
}
this(int X, int Y, int W, int H, char * L = null) {
super(cast(ifloat) 0);
__C_data = _BCD_new__ZN4fltk10ThumbWheelC1EiiiiPKc_R(X, Y, W, H, L);
__C_data_owned = true;
_BCD_RI_N4fltk10ThumbWheelE(__C_data, cast(void *) this);
}
}
