/* THIS FILE GENERATED BY bcd.gen */
module bcd.vorbis.codec;
align(4):
public import bcd.ogg.ogg;
const int OV_FALSE = -1;
const int OV_EOF = -2;
const int OV_HOLE = -3;
const int OV_EREAD = -128;
const int OV_EFAULT = -129;
const int OV_EIMPL = -130;
const int OV_EINVAL = -131;
const int OV_ENOTVORBIS = -132;
const int OV_EBADHEADER = -133;
const int OV_EVERSION = -134;
const int OV_ENOTAUDIO = -135;
const int OV_EBADPACKET = -136;
const int OV_EBADLINK = -137;
const int OV_ENOSEEK = -138;
extern (C) int vorbis_synthesis_halfrate_p(vorbis_info *);
extern (C) int vorbis_synthesis_halfrate(vorbis_info *, int);
extern (C) int vorbis_packet_blocksize(vorbis_info *, ogg_packet *);
extern (C) int vorbis_synthesis_read(vorbis_dsp_state *, int);
extern (C) int vorbis_synthesis_lapout(vorbis_dsp_state *, float * * *);
extern (C) int vorbis_synthesis_pcmout(vorbis_dsp_state *, float * * *);
extern (C) int vorbis_synthesis_blockin(vorbis_dsp_state *, vorbis_block *);
extern (C) int vorbis_synthesis_trackonly(vorbis_block *, ogg_packet *);
extern (C) int vorbis_synthesis(vorbis_block *, ogg_packet *);
extern (C) int vorbis_synthesis_restart(vorbis_dsp_state *);
extern (C) int vorbis_synthesis_init(vorbis_dsp_state *, vorbis_info *);
extern (C) int vorbis_synthesis_headerin(vorbis_info *, vorbis_comment *, ogg_packet *);
extern (C) int vorbis_bitrate_flushpacket(vorbis_dsp_state *, ogg_packet *);
extern (C) int vorbis_bitrate_addblock(vorbis_block *);
extern (C) int vorbis_analysis(vorbis_block *, ogg_packet *);
extern (C) int vorbis_analysis_blockout(vorbis_dsp_state *, vorbis_block *);
extern (C) int vorbis_analysis_wrote(vorbis_dsp_state *, int);
extern (C) float * * vorbis_analysis_buffer(vorbis_dsp_state *, int);
extern (C) int vorbis_analysis_headerout(vorbis_dsp_state *, vorbis_comment *, ogg_packet *, ogg_packet *, ogg_packet *);
extern (C) int vorbis_commentheader_out(vorbis_comment *, ogg_packet *);
extern (C) int vorbis_analysis_init(vorbis_dsp_state *, vorbis_info *);
extern (C) double vorbis_granule_time(vorbis_dsp_state *, long);
extern (C) void vorbis_dsp_clear(vorbis_dsp_state *);
extern (C) int vorbis_block_clear(vorbis_block *);
extern (C) int vorbis_block_init(vorbis_dsp_state *, vorbis_block *);
extern (C) void vorbis_comment_clear(vorbis_comment *);
extern (C) int vorbis_comment_query_count(vorbis_comment *, char *);
extern (C) char * vorbis_comment_query(vorbis_comment *, char *, int);
extern (C) void vorbis_comment_add_tag(vorbis_comment *, char *, char *);
extern (C) void vorbis_comment_add(vorbis_comment *, char *);
extern (C) void vorbis_comment_init(vorbis_comment *);
extern (C) int vorbis_info_blocksize(vorbis_info *, int);
extern (C) void vorbis_info_clear(vorbis_info *);
extern (C) void vorbis_info_init(vorbis_info *);
struct vorbis_comment {
char * * user_comments;
int * comment_lengths;
int comments;
char * vendor;
}
struct alloc_chain {
void * ptr;
alloc_chain * next;
}
struct vorbis_block {
float * * pcm;
oggpack_buffer opb;
int lW;
int W;
int nW;
int pcmend;
int mode;
int eofflag;
long granulepos;
long sequence;
vorbis_dsp_state * vd;
void * localstore;
int localtop;
int localalloc;
int totaluse;
alloc_chain * reap;
int glue_bits;
int time_bits;
int floor_bits;
int res_bits;
void * internal;
}
struct vorbis_dsp_state {
int analysisp;
vorbis_info * vi;
float * * pcm;
float * * pcmret;
int pcm_storage;
int pcm_current;
int pcm_returned;
int preextrapolate;
int eofflag;
int lW;
int W;
int nW;
int centerW;
long granulepos;
long sequence;
long glue_bits;
long time_bits;
long floor_bits;
long res_bits;
void * backend_state;
}
struct vorbis_info {
int version_;
int channels;
int rate;
int bitrate_upper;
int bitrate_nominal;
int bitrate_lower;
int bitrate_window;
void * codec_setup;
}
