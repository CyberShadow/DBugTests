/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "FL/Fl_Image.H"
extern "C" {
void _BCD_delete_12Fl_RGB_Image(Fl_RGB_Image *This) {
delete This;
}
typedef unsigned char _BCD__47_uchar;
void _BCD_set__ZN12Fl_RGB_Image5arrayE(Fl_RGB_Image *This, _BCD__47_uchar const * x) {
This->array = x;
}
_BCD__47_uchar const * _BCD_get__ZN12Fl_RGB_Image5arrayE(Fl_RGB_Image *This) {
return This->array;
}
void _BCD_set__ZN12Fl_RGB_Image11alloc_arrayE(Fl_RGB_Image *This, int x) {
This->alloc_array = x;
}
int _BCD_get__ZN12Fl_RGB_Image11alloc_arrayE(Fl_RGB_Image *This) {
return This->alloc_array;
}
void _BCD_set__ZN12Fl_RGB_Image2idE(Fl_RGB_Image *This, unsigned int x) {
This->id = x;
}
unsigned int _BCD_get__ZN12Fl_RGB_Image2idE(Fl_RGB_Image *This) {
return This->id;
}
void _BCD_set__ZN12Fl_RGB_Image4maskE(Fl_RGB_Image *This, unsigned int x) {
This->mask = x;
}
unsigned int _BCD_get__ZN12Fl_RGB_Image4maskE(Fl_RGB_Image *This) {
return This->mask;
}
Fl_RGB_Image *_BCD_new__ZN12Fl_RGB_ImageC1EPKhiiii(_BCD__47_uchar const * bits, int W, int H, int D, int LD) {
return new Fl_RGB_Image(bits, W, H, D, LD);
}
Fl_Image * _BCD__ZN12Fl_RGB_Image4copyEii(Fl_RGB_Image *This, int W, int H) {
return (This->copy(W, H));
}
Fl_Image * _BCD__ZN12Fl_RGB_Image4copyEv(Fl_RGB_Image *This) {
return (This->copy());
}
void _BCD__ZN12Fl_RGB_Image13color_averageE8Fl_Colorf(Fl_RGB_Image *This, enum Fl_Color c, float i) {
(This->color_average(c, i));
}
void _BCD__ZN12Fl_RGB_Image10desaturateEv(Fl_RGB_Image *This) {
(This->desaturate());
}
void _BCD__ZN12Fl_RGB_Image4drawEiiiiii(Fl_RGB_Image *This, int X, int Y, int W, int H, int cx, int cy) {
(This->draw(X, Y, W, H, cx, cy));
}
void _BCD__ZN12Fl_RGB_Image4drawEii(Fl_RGB_Image *This, int X, int Y) {
(This->draw(X, Y));
}
void _BCD__ZN12Fl_RGB_Image5labelEP9Fl_Widget(Fl_RGB_Image *This, Fl_Widget * w) {
(This->label(w));
}
void _BCD__ZN12Fl_RGB_Image7uncacheEv(Fl_RGB_Image *This) {
(This->uncache());
}
int _BCD_R__ZN8Fl_Image4copyEii__Fl_RGB_Image_R_CHECK(void *);
Fl_Image * _BCD_R__ZN8Fl_Image4copyEii__Fl_RGB_Image_R(void *, int W, int H);
int _BCD_R__ZN8Fl_Image13color_averageE8Fl_Colorf__Fl_RGB_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image13color_averageE8Fl_Colorf__Fl_RGB_Image_R(void *, enum Fl_Color c, float i);
int _BCD_R__ZN8Fl_Image10desaturateEv__Fl_RGB_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image10desaturateEv__Fl_RGB_Image_R(void *);
int _BCD_R__ZN8Fl_Image5labelEP9Fl_Widget__Fl_RGB_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image5labelEP9Fl_Widget__Fl_RGB_Image_R(void *, Fl_Widget * w);
int _BCD_R__ZN8Fl_Image4drawEiiiiii__Fl_RGB_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image4drawEiiiiii__Fl_RGB_Image_R(void *, int X, int Y, int W, int H, int cx, int cy);
int _BCD_R__ZN8Fl_Image7uncacheEv__Fl_RGB_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image7uncacheEv__Fl_RGB_Image_R(void *);
}
class Fl_RGB_Image_R : Fl_RGB_Image {
public:
void *__D_data;
Fl_Image * copy(int W, int H) {
if (_BCD_R__ZN8Fl_Image4copyEii__Fl_RGB_Image_R_CHECK(__D_data))
return _BCD_R__ZN8Fl_Image4copyEii__Fl_RGB_Image_R(__D_data, W, H);
else
return Fl_RGB_Image::copy(W, H);
}
void color_average(enum Fl_Color c, float i) {
if (_BCD_R__ZN8Fl_Image13color_averageE8Fl_Colorf__Fl_RGB_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image13color_averageE8Fl_Colorf__Fl_RGB_Image_R(__D_data, c, i);
else
Fl_RGB_Image::color_average(c, i);
}
void desaturate() {
if (_BCD_R__ZN8Fl_Image10desaturateEv__Fl_RGB_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image10desaturateEv__Fl_RGB_Image_R(__D_data);
else
Fl_RGB_Image::desaturate();
}
void label(Fl_Widget * w) {
if (_BCD_R__ZN8Fl_Image5labelEP9Fl_Widget__Fl_RGB_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image5labelEP9Fl_Widget__Fl_RGB_Image_R(__D_data, w);
else
Fl_RGB_Image::label(w);
}
void draw(int X, int Y, int W, int H, int cx, int cy) {
if (_BCD_R__ZN8Fl_Image4drawEiiiiii__Fl_RGB_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image4drawEiiiiii__Fl_RGB_Image_R(__D_data, X, Y, W, H, cx, cy);
else
Fl_RGB_Image::draw(X, Y, W, H, cx, cy);
}
void uncache() {
if (_BCD_R__ZN8Fl_Image7uncacheEv__Fl_RGB_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image7uncacheEv__Fl_RGB_Image_R(__D_data);
else
Fl_RGB_Image::uncache();
}
Fl_RGB_Image_R(_BCD__47_uchar const * bits, int W, int H, int D, int LD) : Fl_RGB_Image(bits, W, H, D, LD) {}
};
extern "C" {
Fl_RGB_Image_R *_BCD_new__ZN12Fl_RGB_ImageC1EPKhiiii_R(_BCD__47_uchar const * bits, int W, int H, int D, int LD) {
return new Fl_RGB_Image_R(bits, W, H, D, LD);
}
void _BCD_delete_12Fl_RGB_Image__Fl_RGB_Image_R(Fl_RGB_Image_R *This) {
delete This;
}
void _BCD_RI_12Fl_RGB_Image(Fl_RGB_Image_R *cd, void *dd) {
cd->__D_data = dd;
}
void _BCD_delete_8Fl_Image(Fl_Image *This) {
delete This;
}
int _BCD__ZNK8Fl_Image1wEv(Fl_Image *This) {
return (This->w());
}
int _BCD__ZNK8Fl_Image1hEv(Fl_Image *This) {
return (This->h());
}
int _BCD__ZNK8Fl_Image1dEv(Fl_Image *This) {
return (This->d());
}
int _BCD__ZNK8Fl_Image2ldEv(Fl_Image *This) {
return (This->ld());
}
int _BCD__ZNK8Fl_Image5countEv(Fl_Image *This) {
return (This->count());
}
char const * const * _BCD__ZNK8Fl_Image4dataEv(Fl_Image *This) {
return (This->data());
}
Fl_Image *_BCD_new__ZN8Fl_ImageC1Eiii(int W, int H, int D) {
return new Fl_Image(W, H, D);
}
Fl_Image * _BCD__ZN8Fl_Image4copyEii(Fl_Image *This, int W, int H) {
return (This->copy(W, H));
}
Fl_Image * _BCD__ZN8Fl_Image4copyEv(Fl_Image *This) {
return (This->copy());
}
void _BCD__ZN8Fl_Image13color_averageE8Fl_Colorf(Fl_Image *This, enum Fl_Color c, float i) {
(This->color_average(c, i));
}
void _BCD__ZN8Fl_Image8inactiveEv(Fl_Image *This) {
(This->inactive());
}
void _BCD__ZN8Fl_Image10desaturateEv(Fl_Image *This) {
(This->desaturate());
}
void _BCD__ZN8Fl_Image5labelEP9Fl_Widget(Fl_Image *This, Fl_Widget * w) {
(This->label(w));
}
void _BCD__ZN8Fl_Image4drawEiiiiii(Fl_Image *This, int X, int Y, int W, int H, int cx, int cy) {
(This->draw(X, Y, W, H, cx, cy));
}
void _BCD__ZN8Fl_Image4drawEii(Fl_Image *This, int X, int Y) {
(This->draw(X, Y));
}
void _BCD__ZN8Fl_Image7uncacheEv(Fl_Image *This) {
(This->uncache());
}
int _BCD_R__ZN8Fl_Image4copyEii__Fl_Image_R_CHECK(void *);
Fl_Image * _BCD_R__ZN8Fl_Image4copyEii__Fl_Image_R(void *, int W, int H);
int _BCD_R__ZN8Fl_Image13color_averageE8Fl_Colorf__Fl_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image13color_averageE8Fl_Colorf__Fl_Image_R(void *, enum Fl_Color c, float i);
int _BCD_R__ZN8Fl_Image10desaturateEv__Fl_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image10desaturateEv__Fl_Image_R(void *);
int _BCD_R__ZN8Fl_Image5labelEP9Fl_Widget__Fl_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image5labelEP9Fl_Widget__Fl_Image_R(void *, Fl_Widget * w);
int _BCD_R__ZN8Fl_Image4drawEiiiiii__Fl_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image4drawEiiiiii__Fl_Image_R(void *, int X, int Y, int W, int H, int cx, int cy);
int _BCD_R__ZN8Fl_Image7uncacheEv__Fl_Image_R_CHECK(void *);
void _BCD_R__ZN8Fl_Image7uncacheEv__Fl_Image_R(void *);
}
class Fl_Image_R : Fl_Image {
public:
void *__D_data;
Fl_Image_R(int W, int H, int D) : Fl_Image(W, H, D) {}
Fl_Image * copy(int W, int H) {
if (_BCD_R__ZN8Fl_Image4copyEii__Fl_Image_R_CHECK(__D_data))
return _BCD_R__ZN8Fl_Image4copyEii__Fl_Image_R(__D_data, W, H);
else
return Fl_Image::copy(W, H);
}
void color_average(enum Fl_Color c, float i) {
if (_BCD_R__ZN8Fl_Image13color_averageE8Fl_Colorf__Fl_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image13color_averageE8Fl_Colorf__Fl_Image_R(__D_data, c, i);
else
Fl_Image::color_average(c, i);
}
void desaturate() {
if (_BCD_R__ZN8Fl_Image10desaturateEv__Fl_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image10desaturateEv__Fl_Image_R(__D_data);
else
Fl_Image::desaturate();
}
void label(Fl_Widget * w) {
if (_BCD_R__ZN8Fl_Image5labelEP9Fl_Widget__Fl_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image5labelEP9Fl_Widget__Fl_Image_R(__D_data, w);
else
Fl_Image::label(w);
}
void draw(int X, int Y, int W, int H, int cx, int cy) {
if (_BCD_R__ZN8Fl_Image4drawEiiiiii__Fl_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image4drawEiiiiii__Fl_Image_R(__D_data, X, Y, W, H, cx, cy);
else
Fl_Image::draw(X, Y, W, H, cx, cy);
}
void uncache() {
if (_BCD_R__ZN8Fl_Image7uncacheEv__Fl_Image_R_CHECK(__D_data))
_BCD_R__ZN8Fl_Image7uncacheEv__Fl_Image_R(__D_data);
else
Fl_Image::uncache();
}
};
extern "C" {
Fl_Image_R *_BCD_new__ZN8Fl_ImageC1Eiii_R(int W, int H, int D) {
return new Fl_Image_R(W, H, D);
}
void _BCD_delete_8Fl_Image__Fl_Image_R(Fl_Image_R *This) {
delete This;
}
void _BCD_RI_8Fl_Image(Fl_Image_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef long unsigned int _BCD__45_ulong;
}
