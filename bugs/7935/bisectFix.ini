# This file is a bisect spec example.
# Copy this file to another filename, and make the appropriate
# changes below.

# Starting points.
# Known bad (with regression) and good (w/o regression) commits.
# Digger will verify these commits to avoid a false conclusion.
# Supported formats:
# - "master" (implies latest commit)
# - SHA-1 hash of D.git repo commit
# - SHA-1 hash of a component's repo commit
#   (must be a pull request merge commit)
# - Full GitHub URL of a pull request, e.g.:
#   https://github.com/D-Programming-Language/dmd/pull/123
# - Optionally time spec after "@" (e.g. "@ 2013-01-02",
#   "master @ October 2013", "2.065 @ 15 days ago" or "@ Tuesday")
#   (if no ref is specified, master is assumed).

bad  = v2.062
good = v2.063

# Reverse search
# Sometimes, it is useful to know to know which revision fixed
# something. Although this can be accomplished by reversing the
# return value of the test command, the terminology can get
# confusing, since "good" will mean "still broken" and "bad"
# will mean "already fixed". This option causes Digger to
# reverse the test command output, as well as diagnostic
# messages.

reverse = true

# Tester command.
# Should exit with status 0 to indicate success (a "good" commit,
# not manifesting the regression), and any other status to
# indicate failure (a "bad" commit, with the regression).
# Exit code 125 is treated specially and indicates that the
# current D revision is untestable, and that Git should try
# another.

tester = dmd -o- test.d 2>&1 | C:\cygwin\bin\grep -F "cannot be read at compile time"

# Build options.
[build]

# Target model.
# Whether to target 32 or 64 bits when building D components.
# The default is to use the system model.

model = 32

# Whether to build a debug compiler.
# Debug compilers are built quicker, but compile D code slower.

debugDMD = false

# Enable or disable D components to build.
# For example, rdmd is rarely needed, so we can disable it here.

components.enable.rdmd = false

# Build/test environment.
# See digger.ini.sample for an explanation.
[environment]
#PATH=%PATH%;%CYGWIN%
