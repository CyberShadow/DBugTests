/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "fltk/ValueInput.h"
extern "C" {
typedef unsigned char _BCD__11_uchar;
void _BCD_delete_N4fltk10ValueInputE(fltk::ValueInput *This) {
delete This;
}
void _BCD_set__ZN4fltk10ValueInput5inputE(fltk::ValueInput *This, fltk::FloatInput * x) {
memcpy(&This->input, x, sizeof(fltk::FloatInput));
}
fltk::FloatInput * _BCD_get__ZN4fltk10ValueInput5inputE(fltk::ValueInput *This) {
return &This->input;
}
int _BCD__ZN4fltk10ValueInput6handleEi(fltk::ValueInput *This, int _0) {
return (This->handle(_0));
}
void _BCD__ZN4fltk10ValueInput4drawEv(fltk::ValueInput *This) {
(This->draw());
}
fltk::ValueInput *_BCD_new__ZN4fltk10ValueInputC1EiiiiPKc(int x, int y, int w, int h, char const * l) {
return new fltk::ValueInput(x, y, w, h, l);
}
int _BCD_R__ZN4fltk10ValueInput6handleEi__ValueInput_R_CHECK(void *);
int _BCD_R__ZN4fltk10ValueInput6handleEi__ValueInput_R(void *, int _0);
int _BCD_R__ZN4fltk10ValueInput4drawEv__ValueInput_R_CHECK(void *);
void _BCD_R__ZN4fltk10ValueInput4drawEv__ValueInput_R(void *);
}
class ValueInput_R : fltk::ValueInput {
public:
void *__D_data;
int handle(int _0) {
if (_BCD_R__ZN4fltk10ValueInput6handleEi__ValueInput_R_CHECK(__D_data))
return _BCD_R__ZN4fltk10ValueInput6handleEi__ValueInput_R(__D_data, _0);
else
return fltk::ValueInput::handle(_0);
}
void draw() {
if (_BCD_R__ZN4fltk10ValueInput4drawEv__ValueInput_R_CHECK(__D_data))
_BCD_R__ZN4fltk10ValueInput4drawEv__ValueInput_R(__D_data);
else
fltk::ValueInput::draw();
}
ValueInput_R(int x, int y, int w, int h, char const * l) : fltk::ValueInput(x, y, w, h, l) {}
};
extern "C" {
ValueInput_R *_BCD_new__ZN4fltk10ValueInputC1EiiiiPKc_R(int x, int y, int w, int h, char const * l) {
return new ValueInput_R(x, y, w, h, l);
}
void _BCD_delete_N4fltk10ValueInputE__ValueInput_R(ValueInput_R *This) {
delete This;
}
void _BCD_RI_N4fltk10ValueInputE(ValueInput_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef void (*_BCD_func__160)(fltk::Widget *, long int);
typedef _BCD_func__160 _BCD__161_Callback1;
typedef void (*_BCD_func__162)(fltk::Widget *);
typedef _BCD_func__162 _BCD__163_Callback0;
typedef void (*_BCD_func__166)(fltk::Widget *, void *);
typedef _BCD_func__166 _BCD__167_Callback;
typedef _BCD__167_Callback _BCD__165_Callback_p;
typedef bool (*_BCD_func__378)();
typedef _BCD_func__378 _BCD__178_Theme;
typedef fltk::Symbol * _BCD__231_Box;
typedef unsigned int _BCD__248_Color;
typedef int _BCD__251_Flags;
typedef _BCD__251_Flags _BCD__250_Align;
}
