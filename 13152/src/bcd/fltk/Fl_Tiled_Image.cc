/* THIS FILE GENERATED BY bcd.gen */
#include <stdlib.h>
#include <string.h>
#include "../bind.h"
#include "FL/Fl_Tiled_Image.H"
extern "C" {
void _BCD_delete_14Fl_Tiled_Image(Fl_Tiled_Image *This) {
delete This;
}
Fl_Tiled_Image *_BCD_new__ZN14Fl_Tiled_ImageC1EP8Fl_Imageii(Fl_Image * i, int W, int H) {
return new Fl_Tiled_Image(i, W, H);
}
Fl_Image * _BCD__ZN14Fl_Tiled_Image4copyEii(Fl_Tiled_Image *This, int W, int H) {
return (This->copy(W, H));
}
Fl_Image * _BCD__ZN14Fl_Tiled_Image4copyEv(Fl_Tiled_Image *This) {
return (This->copy());
}
void _BCD__ZN14Fl_Tiled_Image13color_averageE8Fl_Colorf(Fl_Tiled_Image *This, enum Fl_Color c, float i) {
(This->color_average(c, i));
}
void _BCD__ZN14Fl_Tiled_Image10desaturateEv(Fl_Tiled_Image *This) {
(This->desaturate());
}
void _BCD__ZN14Fl_Tiled_Image4drawEiiiiii(Fl_Tiled_Image *This, int X, int Y, int W, int H, int cx, int cy) {
(This->draw(X, Y, W, H, cx, cy));
}
void _BCD__ZN14Fl_Tiled_Image4drawEii(Fl_Tiled_Image *This, int X, int Y) {
(This->draw(X, Y));
}
Fl_Image * _BCD__ZN14Fl_Tiled_Image5imageEv(Fl_Tiled_Image *This) {
return (This->image());
}
int _BCD_R__ZN14Fl_Tiled_Image4copyEii__Fl_Tiled_Image_R_CHECK(void *);
Fl_Image * _BCD_R__ZN14Fl_Tiled_Image4copyEii__Fl_Tiled_Image_R(void *, int W, int H);
int _BCD_R__ZN14Fl_Tiled_Image13color_averageE8Fl_Colorf__Fl_Tiled_Image_R_CHECK(void *);
void _BCD_R__ZN14Fl_Tiled_Image13color_averageE8Fl_Colorf__Fl_Tiled_Image_R(void *, enum Fl_Color c, float i);
int _BCD_R__ZN14Fl_Tiled_Image10desaturateEv__Fl_Tiled_Image_R_CHECK(void *);
void _BCD_R__ZN14Fl_Tiled_Image10desaturateEv__Fl_Tiled_Image_R(void *);
int _BCD_R__ZN14Fl_Tiled_Image4drawEiiiiii__Fl_Tiled_Image_R_CHECK(void *);
void _BCD_R__ZN14Fl_Tiled_Image4drawEiiiiii__Fl_Tiled_Image_R(void *, int X, int Y, int W, int H, int cx, int cy);
}
class Fl_Tiled_Image_R : Fl_Tiled_Image {
public:
void *__D_data;
Fl_Tiled_Image_R(Fl_Image * i, int W, int H) : Fl_Tiled_Image(i, W, H) {}
Fl_Image * copy(int W, int H) {
if (_BCD_R__ZN14Fl_Tiled_Image4copyEii__Fl_Tiled_Image_R_CHECK(__D_data))
return _BCD_R__ZN14Fl_Tiled_Image4copyEii__Fl_Tiled_Image_R(__D_data, W, H);
else
return Fl_Tiled_Image::copy(W, H);
}
void color_average(enum Fl_Color c, float i) {
if (_BCD_R__ZN14Fl_Tiled_Image13color_averageE8Fl_Colorf__Fl_Tiled_Image_R_CHECK(__D_data))
_BCD_R__ZN14Fl_Tiled_Image13color_averageE8Fl_Colorf__Fl_Tiled_Image_R(__D_data, c, i);
else
Fl_Tiled_Image::color_average(c, i);
}
void desaturate() {
if (_BCD_R__ZN14Fl_Tiled_Image10desaturateEv__Fl_Tiled_Image_R_CHECK(__D_data))
_BCD_R__ZN14Fl_Tiled_Image10desaturateEv__Fl_Tiled_Image_R(__D_data);
else
Fl_Tiled_Image::desaturate();
}
void draw(int X, int Y, int W, int H, int cx, int cy) {
if (_BCD_R__ZN14Fl_Tiled_Image4drawEiiiiii__Fl_Tiled_Image_R_CHECK(__D_data))
_BCD_R__ZN14Fl_Tiled_Image4drawEiiiiii__Fl_Tiled_Image_R(__D_data, X, Y, W, H, cx, cy);
else
Fl_Tiled_Image::draw(X, Y, W, H, cx, cy);
}
};
extern "C" {
Fl_Tiled_Image_R *_BCD_new__ZN14Fl_Tiled_ImageC1EP8Fl_Imageii_R(Fl_Image * i, int W, int H) {
return new Fl_Tiled_Image_R(i, W, H);
}
void _BCD_delete_14Fl_Tiled_Image__Fl_Tiled_Image_R(Fl_Tiled_Image_R *This) {
delete This;
}
void _BCD_RI_14Fl_Tiled_Image(Fl_Tiled_Image_R *cd, void *dd) {
cd->__D_data = dd;
}
typedef long unsigned int _BCD__47_ulong;
typedef unsigned char _BCD__49_uchar;
}
